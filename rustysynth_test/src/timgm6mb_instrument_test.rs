#![allow(unused_imports)]

use rustysynth::SoundFont;
use std::fs::File;
use std::path::PathBuf;

use crate::instrument_util;

#[test]
#[rustfmt::skip]
fn regions() {
    let mut path = PathBuf::from(env!("CARGO_MANIFEST_DIR"));
    path.pop();
    path.push("TimGM6mb.sf2");
    let mut file = File::open(&path).unwrap();
    let sf = SoundFont::new(&mut file).unwrap();

    // ============================================================
    //  Flute TB
    // ============================================================
    let values: [f64; 50] = [53371_f64, 63368_f64, 58637_f64, 62875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.4_f64, 2_f64, 0.62417_f64, 0_f64, 0_f64, 0_f64, 60_f64, 0_f64, 127_f64, 0_f64, 0_f64, 49_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[0], &values);
    let values: [f64; 50] = [63400_f64, 78940_f64, 74639_f64, 78815_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 12.699_f64, 4.9_f64, 0.62417_f64, 0_f64, 0_f64, 61_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, 49_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[1], &values);
    let values: [f64; 50] = [88278_f64, 100550_f64, 96382_f64, 100530_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 14.596_f64, 4.9_f64, 0.62417_f64, 0_f64, 0_f64, 66_f64, 68_f64, 0_f64, 127_f64, 0_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[2], &values);
    let values: [f64; 50] = [100582_f64, 116509_f64, 112327_f64, 116476_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 11.399_f64, 4.7_f64, 0.62417_f64, 0_f64, 0_f64, 69_f64, 71_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[3], &values);
    let values: [f64; 50] = [32294_f64, 45270_f64, 41064_f64, 45256_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 18.001_f64, 4.7_f64, 0.62417_f64, 0_f64, 0_f64, 72_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[4], &values);
    let values: [f64; 50] = [0_f64, 9320_f64, 3924_f64, 7954_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 17.198_f64, 4.9_f64, 0.62417_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 0_f64, 0_f64, 43_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[5], &values);
    let values: [f64; 50] = [9352_f64, 22108_f64, 17929_f64, 22086_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 18.001_f64, 4.7_f64, 0.62417_f64, 0_f64, 0_f64, 81_f64, 84_f64, 0_f64, 127_f64, 0_f64, 0_f64, 47_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[6], &values);
    let values: [f64; 50] = [45302_f64, 53339_f64, 49229_f64, 53327_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 9.0788_f64, 4.9_f64, 0.53496_f64, 0_f64, 0_f64, 85_f64, 89_f64, 0_f64, 127_f64, 0_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[7], &values);
    let values: [f64; 50] = [22140_f64, 32262_f64, 27982_f64, 31880_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.2591_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 16.699_f64, 1.6_f64, 0.62417_f64, 0_f64, 0_f64, 90_f64, 94_f64, 0_f64, 127_f64, 0_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[8], &values);
    let values: [f64; 50] = [78972_f64, 88246_f64, 85302_f64, 88227_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 4.6312_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.0070005_f64, 0.00097656_f64, 9.2215_f64, 11.6_f64, 0.44494_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.62417_f64, 0_f64, 0_f64, 95_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[0].get_regions()[9], &values);

    // ============================================================
    //  Orchestra0
    // ============================================================
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.1_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 12_f64, 0_f64, -19_f64, 0_f64, 100_f64, 0_f64, 31_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[0], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.00097656_f64, 1.7401_f64, 100_f64, 1.7401_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 12_f64, 0_f64, -9_f64, 0_f64, 100_f64, 0_f64, 37_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[1], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 10.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.22004_f64, 5.0513_f64, 100_f64, 5.6405_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 37_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[2], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.3881_f64, 100_f64, 9.3827_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 39_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[3], &values);
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 620.12_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8194_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[8], &values);
    let values: [f64; 50] = [1281175_f64, 1288928_f64, 1287609_f64, 1288921_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.2297_f64, 100_f64, 1.3096_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 6.3_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[10], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.43202_f64, 100_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 2.8795_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[31], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 3.1803_f64, 100_f64, 3.1693_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 12.6_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[60], &values);
    let values: [f64; 50] = [869762_f64, 874108_f64, 869762_f64, 874106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0.1_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 3.5301_f64, 0.0099978_f64, 3.5301_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 1.2702_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.8404_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[1].get_regions()[61], &values);

    // ============================================================
    //  Orchestra1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[0], &values);
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 35_f64, 54_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[1], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[2], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[3], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 2.3_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 17_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.22806_f64, 6.5508_f64, 100_f64, 6.5584_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[4], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[5], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 359.06_f64, 7_f64, 0_f64, 7087_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 11.498_f64, 0_f64, 11.498_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.078021_f64, 5.2295_f64, 100_f64, 5.2295_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 12.6_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[6], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[7], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[8], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[9], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[10], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[11], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[12], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[13], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[14], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[15], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[16], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[17], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[18], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[19], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[20], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[21], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[22], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[23], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[24], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[25], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[26], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[27], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[28], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[29], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[30], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[31], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[32], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[33], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[2].get_regions()[34], &values);

    // ============================================================
    //  Orchestra2
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 58_f64, 60_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[0], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[1], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[2], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[3], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[4], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[5], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[6], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[7], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[8], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[9], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[10], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[11], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[12], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[13], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[14], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[15], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[16], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[17], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[18], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[19], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[20], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[21], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[22], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[23], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[24], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[25], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[26], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[27], &values);
    let values: [f64; 50] = [869762_f64, 874108_f64, 869762_f64, 874106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3290.1_f64, 0_f64, 0_f64, 7087_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 0_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.96315_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.3597_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[3].get_regions()[28], &values);

    // ============================================================
    //  Brush0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[8], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 3_f64, 0_f64, -34_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[10], &values);
    let values: [f64; 50] = [670935_f64, 673387_f64, 670938_f64, 673380_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 1.2_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.192_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[11], &values);
    let values: [f64; 50] = [670935_f64, 673387_f64, 670938_f64, 673380_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.51614_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 5.2_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 49_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[12], &values);
    let values: [f64; 50] = [885803_f64, 889463_f64, 885878_f64, 889460_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 1.9_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 0.16997_f64, 0_f64, 2.5698_f64, 0_f64, 0_f64, 0.00097656_f64, 0.10402_f64, 0.00097656_f64, 1.3597_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 24_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 41_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[4].get_regions()[60], &values);

    // ============================================================
    //  Brush1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[0], &values);
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 38_f64, 41_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[1], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[2], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[3], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[4], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[5], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[6], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[7], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[8], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[9], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[10], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[11], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[12], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[13], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[14], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[15], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[16], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[17], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[18], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[19], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[20], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[21], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[22], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[23], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[24], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[25], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[26], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[27], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[28], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[29], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[30], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[31], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[32], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[33], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[34], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[35], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[36], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[37], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[38], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[39], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[40], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[42], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[43], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[44], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[45], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[46], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[5].get_regions()[47], &values);

    // ============================================================
    //  Jazz0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[8], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 3_f64, 0_f64, -34_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[10], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.43202_f64, 100_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 2.8795_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[6].get_regions()[60], &values);

    // ============================================================
    //  Jazz1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[7].get_regions()[0], &values);

    // ============================================================
    //  TR 8080
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[8], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 192_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.61097_f64, 100_f64, 0.62308_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2599_f64, 100_f64, 1.2599_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[9], &values);
    let values: [f64; 50] = [679650_f64, 680452_f64, 679653_f64, 680445_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, 50_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[10], &values);
    let values: [f64; 50] = [680484_f64, 682864_f64, 680487_f64, 682857_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[13], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -34.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0099_f64, 100_f64, 1.0099_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.78323_f64, 100_f64, 0.78413_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 8.5_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[14], &values);
    let values: [f64; 50] = [674439_f64, 679618_f64, 678015_f64, 679610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.35994_f64, 100_f64, 0.35994_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 3_f64, 0_f64, 50_f64, 1_f64, 100_f64, 1_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[15], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -18.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 100_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.64283_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 10.8_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[16], &values);
    let values: [f64; 50] = [674439_f64, 679618_f64, 678015_f64, 679610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.51614_f64, 100_f64, 0.384_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 3_f64, 0_f64, -41_f64, 1_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[17], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.86404_f64, 100_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 100_f64, 0.5061_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 9_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[18], &values);
    let values: [f64; 50] = [674439_f64, 679618_f64, 678015_f64, 679610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.18903_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -18_f64, 1_f64, 100_f64, 1_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[19], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1163_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 8.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.80618_f64, 100_f64, 0.80618_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 9_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[20], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 18.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 0.72113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.33994_f64, 100_f64, 0.33994_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 9_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 100_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.5508_f64, 100_f64, 6.5508_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[22], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 40.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 0.72113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26304_f64, 100_f64, 0.26197_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 8.6_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[28], &values);
    let values: [f64; 50] = [673419_f64, 674407_f64, 674256_f64, 674400_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17204_f64, 0.8971_f64, 100_f64, 1.0799_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[34], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 3.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.24302_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[35], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 3.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.46598_f64, 100_f64, 0.46598_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[36], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 3.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.64283_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[8].get_regions()[60], &values);

    // ============================================================
    //  TR 8081
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 33_f64, 51_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[0], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[1], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[2], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[3], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[4], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[5], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[6], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[7], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[8], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[9], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[10], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[11], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[12], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[13], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[14], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[15], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[16], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[17], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[18], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[19], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[20], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[21], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[22], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[23], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[24], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[25], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[26], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[27], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[28], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[29], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[30], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[31], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[32], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[33], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[34], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[35], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[9].get_regions()[36], &values);

    // ============================================================
    //  TR 8082
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 56_f64, 65_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[0], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[1], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[2], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[3], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[4], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[5], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[6], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[7], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[8], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[9], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[10], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[11], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[12], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[13], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[14], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[15], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[16], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[17], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[18], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[19], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[20], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[21], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[10].get_regions()[22], &values);

    // ============================================================
    //  Electronic0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[8], &values);
    let values: [f64; 50] = [682896_f64, 683035_f64, 682961_f64, 683027_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 100_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.96985_f64, 100_f64, 0.67987_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[10], &values);
    let values: [f64; 50] = [683067_f64, 687595_f64, 683070_f64, 687588_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 253_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.048_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8194_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -18_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[12], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.31809_f64, 1.3_f64, 5.969_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 23_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[13], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30495_f64, 100_f64, 0.30495_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.199_f64, 1.1401_f64, 100_f64, 1.5601_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 1.8_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[15], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.20004_f64, 0.67987_f64, 100_f64, 1.0799_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 1.6_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[17], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -1.9_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.27707_f64, 100_f64, 0.27707_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.19603_f64, 0.56907_f64, 100_f64, 0.90909_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.2501_f64, 100_f64, 4.4898_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[19], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 2_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26395_f64, 100_f64, 0.26395_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.18599_f64, 0.53806_f64, 100_f64, 0.80897_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1.6_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[20], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 5.9_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26395_f64, 100_f64, 0.26395_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17304_f64, 0.53004_f64, 100_f64, 0.72699_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 1.6_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.5206_f64, 100_f64, 6.5206_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[22], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 9.8_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.25305_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.16503_f64, 0.51703_f64, 100_f64, 0.74312_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[11].get_regions()[60], &values);

    // ============================================================
    //  Electronic1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[0], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 956_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4.1_f64, 0.4_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.51614_f64, 100_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 100_f64, 0.61807_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 49_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[1], &values);
    let values: [f64; 50] = [680484_f64, 682864_f64, 680487_f64, 682857_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.9608_f64, 0.0099978_f64, 4.9608_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 45_f64, 0_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[2], &values);
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 39_f64, 51_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[3], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[4], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[5], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[6], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[7], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[8], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[9], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[10], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[11], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[12], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[13], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[14], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[15], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[16], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[17], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[18], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[19], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[20], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[21], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[22], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[23], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[24], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[25], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[26], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[27], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[28], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[29], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[30], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[31], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[32], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[33], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[34], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[35], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[36], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[37], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[38], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[12].get_regions()[39], &values);

    // ============================================================
    //  Power0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[8], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 3_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[10], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.14601_f64, 3.0402_f64, 100_f64, 3.0809_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[13].get_regions()[60], &values);

    // ============================================================
    //  Power1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[0], &values);
    let values: [f64; 50] = [687627_f64, 689392_f64, 687630_f64, 689385_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8404_f64, 100_f64, 0.78594_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[1], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.6196_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[2], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 2.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -44.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 100_f64, 2.74_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[3], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 2.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -30.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2303_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[4], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7208.9_f64, 3.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -14.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7305_f64, 100_f64, 2.0705_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[5], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6971.4_f64, 3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4298_f64, 100_f64, 1.9498_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[6], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 2.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 11.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8203_f64, 100_f64, 1.65_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[7], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4960.9_f64, 2.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 11.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.47_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[14].get_regions()[8], &values);

    // ============================================================
    //  Power2
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 39_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[0], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[1], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[2], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[3], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[4], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[5], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[6], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[7], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[8], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[9], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[10], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[11], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[12], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[13], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[14], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[15], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[16], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[17], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[18], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[19], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[20], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[21], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[22], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[23], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[24], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[25], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[26], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[27], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[28], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[29], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[30], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[31], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[32], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[33], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[34], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[35], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[36], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[37], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[38], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[39], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[40], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[41], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[42], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[43], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[44], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[45], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[46], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[47], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[15].get_regions()[48], &values);

    // ============================================================
    //  Room0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[8], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 3_f64, 0_f64, -34_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[10], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.43202_f64, 100_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 2.8795_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[16].get_regions()[60], &values);

    // ============================================================
    //  Room1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[0], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 41_f64, 0_f64, 127_f64, 3_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[1], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 2.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -30.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2303_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[2], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7208.9_f64, 3.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -14.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7305_f64, 100_f64, 2.0705_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[3], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6971.4_f64, 3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4298_f64, 100_f64, 1.9498_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[4], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 2.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 11.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8203_f64, 100_f64, 1.65_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[5], &values);
    let values: [f64; 50] = [689424_f64, 696260_f64, 689427_f64, 696253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4960.9_f64, 2.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 11.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.47_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -6_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[17].get_regions()[6], &values);

    // ============================================================
    //  Standard0
    // ============================================================
    let values: [f64; 50] = [869129_f64, 869730_f64, 869132_f64, 869723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.7301_f64, 0_f64, 0_f64, 27_f64, 27_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[0], &values);
    let values: [f64; 50] = [864424_f64, 869097_f64, 864427_f64, 869090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.5_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 28_f64, 28_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[1], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 375_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 91.6_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 29_f64, 29_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[2], &values);
    let values: [f64; 50] = [861891_f64, 864392_f64, 861894_f64, 864384_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35994_f64, 0_f64, 0_f64, 30_f64, 30_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[3], &values);
    let values: [f64; 50] = [859284_f64, 861859_f64, 859287_f64, 861852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0598_f64, 0_f64, 0_f64, 31_f64, 31_f64, 0_f64, 127_f64, 0_f64, 0_f64, -33_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[4], &values);
    let values: [f64; 50] = [859180_f64, 859252_f64, 859183_f64, 859244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 32_f64, 32_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 34_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[5], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 33_f64, 33_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[6], &values);
    let values: [f64; 50] = [857725_f64, 859148_f64, 857728_f64, 859141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 20.797_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[7], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.6196_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 35_f64, 35_f64, 0_f64, 127_f64, 3_f64, 0_f64, -32_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[8], &values);
    let values: [f64; 50] = [855797_f64, 857693_f64, 855800_f64, 857686_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 36_f64, 36_f64, 0_f64, 127_f64, 3_f64, 0_f64, -34_f64, 0_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[9], &values);
    let values: [f64; 50] = [840612_f64, 844271_f64, 840615_f64, 844264_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 1.47_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 37_f64, 37_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 0_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[10], &values);
    let values: [f64; 50] = [835180_f64, 840580_f64, 835183_f64, 840573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 5_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.43202_f64, 100_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 2.8795_f64, 0_f64, 0_f64, 38_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 0_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[11], &values);
    let values: [f64; 50] = [831418_f64, 835148_f64, 831421_f64, 835141_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.3094_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 39_f64, 39_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[12], &values);
    let values: [f64; 50] = [824583_f64, 831386_f64, 824586_f64, 831379_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.047012_f64, 3.8194_f64, 100_f64, 8.3397_f64, 0_f64, 0_f64, 40_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 21_f64, 0_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[13], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -38.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.2303_f64, 100_f64, 3.4204_f64, 0_f64, 0_f64, 41_f64, 41_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[14], &values);
    let values: [f64; 50] = [821948_f64, 824551_f64, 821951_f64, 824544_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 0.35994_f64, 100_f64, 0.58203_f64, 0_f64, 0_f64, 42_f64, 42_f64, 0_f64, 127_f64, 9_f64, 0_f64, -19_f64, 0_f64, 100_f64, 1_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[15], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13397_f64, 3.0596_f64, 100_f64, 3.2303_f64, 0_f64, 0_f64, 43_f64, 43_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[16], &values);
    let values: [f64; 50] = [819618_f64, 821916_f64, 819621_f64, 821909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.047012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -9_f64, 0_f64, 100_f64, 1_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[17], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -11.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[18], &values);
    let values: [f64; 50] = [809252_f64, 819586_f64, 814767_f64, 819582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 15.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 15.598_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.089985_f64, 4.5002_f64, 100_f64, 4.7596_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 1_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[19], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.4396_f64, 100_f64, 2.5802_f64, 0_f64, 0_f64, 47_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[20], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 28_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 2.1798_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 48_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[21], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 5.1189_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 7.3191_f64, 100_f64, 7.3191_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3.6_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[22], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 38.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13498_f64, 1.9498_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 50_f64, 50_f64, 0_f64, 127_f64, 0_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[23], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 9.9521_f64, 100_f64, 9.9406_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[24], &values);
    let values: [f64; 50] = [704930_f64, 709544_f64, 706242_f64, 709540_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, -15.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 18.496_f64, 100_f64, 16.497_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.025005_f64, 4.2797_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[25], &values);
    let values: [f64; 50] = [844303_f64, 855765_f64, 853099_f64, 855761_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -16.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 9.3286_f64, 100_f64, 9.8719_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[26], &values);
    let values: [f64; 50] = [805332_f64, 809220_f64, 808229_f64, 809212_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[27], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 978.14_f64, 0_f64, 0_f64, 3911_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.015999_f64, 7.4815_f64, 100_f64, 7.4815_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13099_f64, 3.6999_f64, 100_f64, 3.6596_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[28], &values);
    let values: [f64; 50] = [802946_f64, 805300_f64, 804452_f64, 804875_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 20.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[29], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 21.2_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 6.3606_f64, 100_f64, 6.3606_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[30], &values);
    let values: [f64; 50] = [800244_f64, 802914_f64, 800409_f64, 802906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 3375_f64, 0.5_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.11002_f64, 8.3397_f64, 100_f64, 9.3286_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 4.5211_f64, 100_f64, 4.7706_f64, 0_f64, 0_f64, 58_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[31], &values);
    let values: [f64; 50] = [696292_f64, 704898_f64, 698209_f64, 704890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5639.7_f64, 0_f64, 0_f64, 800_f64, 0_f64, 0_f64, 7_f64, -19.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53004_f64, 100_f64, 0.47194_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3687_f64, 100_f64, 8.359_f64, 0_f64, 0_f64, 59_f64, 59_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[32], &values);
    let values: [f64; 50] = [795413_f64, 800212_f64, 795416_f64, 798044_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 60_f64, 60_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[33], &values);
    let values: [f64; 50] = [792467_f64, 795381_f64, 795292_f64, 795373_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 61_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -48_f64, 0_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[34], &values);
    let values: [f64; 50] = [789058_f64, 792435_f64, 789061_f64, 792428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -23.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 0_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[35], &values);
    let values: [f64; 50] = [782982_f64, 789026_f64, 788234_f64, 789018_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 63_f64, 63_f64, 0_f64, 127_f64, 3_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[36], &values);
    let values: [f64; 50] = [777889_f64, 782950_f64, 782209_f64, 782942_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -25.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 64_f64, 64_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[37], &values);
    let values: [f64; 50] = [769130_f64, 777857_f64, 777032_f64, 777849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.3201_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[38], &values);
    let values: [f64; 50] = [759893_f64, 769098_f64, 768250_f64, 769090_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[39], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.4398_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 67_f64, 67_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[40], &values);
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 68_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[41], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -41.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 69_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[42], &values);
    let values: [f64; 50] = [754864_f64, 757297_f64, 754867_f64, 757290_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -39.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 6_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[43], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.045991_f64, 0.5279_f64, 100_f64, 0.5279_f64, 0_f64, 0_f64, 71_f64, 71_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[44], &values);
    let values: [f64; 50] = [753537_f64, 754832_f64, 753644_f64, 754824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.39093_f64, 0.11201_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 2_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[45], &values);
    let values: [f64; 50] = [750102_f64, 753505_f64, 750105_f64, 753498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 73_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, 21_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[46], &values);
    let values: [f64; 50] = [743165_f64, 750070_f64, 743168_f64, 745723_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 19.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 74_f64, 74_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 19_f64, 0_f64, 100_f64, 5_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[47], &values);
    let values: [f64; 50] = [741018_f64, 743133_f64, 741021_f64, 743126_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 75_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[48], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 26.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[49], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 77_f64, 77_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[50], &values);
    let values: [f64; 50] = [737529_f64, 740986_f64, 737532_f64, 740979_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -24.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 78_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 4_f64, 0_f64, 100_f64, 4_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[51], &values);
    let values: [f64; 50] = [734441_f64, 737497_f64, 734444_f64, 737490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -27.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 79_f64, 79_f64, 0_f64, 127_f64, 6_f64, 0_f64, -48_f64, 0_f64, 100_f64, 4_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[52], &values);
    let values: [f64; 50] = [732147_f64, 734409_f64, 732150_f64, 734402_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 80_f64, 80_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 3_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[53], &values);
    let values: [f64; 50] = [730047_f64, 732115_f64, 730379_f64, 732107_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -50_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.0494_f64, 100_f64, 7.8899_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.8895_f64, 100_f64, 3.0596_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 3_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[54], &values);
    let values: [f64; 50] = [757329_f64, 759861_f64, 757332_f64, 759854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 31.9_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 82_f64, 82_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[55], &values);
    let values: [f64; 50] = [723293_f64, 730015_f64, 727862_f64, 730007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 25.6_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0601_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 83_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[56], &values);
    let values: [f64; 50] = [712452_f64, 723261_f64, 722469_f64, 723253_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 24.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 3_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[57], &values);
    let values: [f64; 50] = [709576_f64, 712420_f64, 709579_f64, 712413_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -37.3_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 0_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[58], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, -31_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.28208_f64, 100_f64, 0.65406_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 6_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[59], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 75_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 5.3394_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 2.7305_f64, 100_f64, 2.8895_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 6_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[18].get_regions()[60], &values);

    // ============================================================
    //  Standard1
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 1.65_f64, 100_f64, 1.8404_f64, 0_f64, 0_f64, 34_f64, 34_f64, 0_f64, 127_f64, 15_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[19].get_regions()[0], &values);

    // ============================================================
    //  Gun Shot0
    // ============================================================
    let values: [f64; 50] = [575126_f64, 579693_f64, 579220_f64, 579691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, -35_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, 29_f64, 0_f64, 60_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[20].get_regions()[0], &values);

    // ============================================================
    //  Gun Shot1
    // ============================================================
    let values: [f64; 50] = [575126_f64, 579693_f64, 579220_f64, 579691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 35.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.082995_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, 29_f64, 0_f64, 60_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[21].get_regions()[0], &values);

    // ============================================================
    //  Applause0
    // ============================================================
    let values: [f64; 50] = [869762_f64, 874108_f64, 869762_f64, 874106_f64, 0_f64, 0_f64, 0_f64, 0_f64, -8_f64, 0_f64, 0_f64, 19901_f64, 1.2_f64, 0_f64, 7087_f64, 0.1_f64, 0_f64, 7.8_f64, -16.1_f64, 0.0099978_f64, 2.9395_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60991_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.8596_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 5.2_f64, 0_f64, -30_f64, 1_f64, 10_f64, 0_f64, 111_f64];
    instrument_util::check(&sf.get_instruments()[22].get_regions()[0], &values);

    // ============================================================
    //  Applause1
    // ============================================================
    let values: [f64; 50] = [869762_f64, 874108_f64, 869762_f64, 874106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 0_f64, 0_f64, 19901_f64, 1.5_f64, 56_f64, 7087_f64, 0.1_f64, 0_f64, 7.8_f64, 9.1_f64, 0.0099978_f64, 2.3507_f64, 0.0099978_f64, 3.5301_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 1.1303_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.9397_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, -35_f64, 1_f64, 10_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[23].get_regions()[0], &values);

    // ============================================================
    //  Helicopter
    // ============================================================
    let values: [f64; 50] = [874140_f64, 878305_f64, 874143_f64, 878297_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -8_f64, 69_f64, 2750.7_f64, 0_f64, 1277_f64, 3037_f64, 0.1_f64, 0_f64, 8.6_f64, 0_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 12.302_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 3.5004_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.5601_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, -24_f64, 1_f64, 10_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[24].get_regions()[0], &values);

    // ============================================================
    //  Telephone
    // ============================================================
    let values: [f64; 50] = [878337_f64, 880304_f64, 878410_f64, 880296_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 0_f64, 0.003_f64, 0_f64, 0_f64, 21_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 17_f64, 0_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[25].get_regions()[0], &values);

    // ============================================================
    //  Bird
    // ============================================================
    let values: [f64; 50] = [192905_f64, 206623_f64, 199764_f64, 206622_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 21.003_f64, 0_f64, 0.003_f64, 0_f64, 0_f64, 21_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 41_f64];
    instrument_util::check(&sf.get_instruments()[26].get_regions()[0], &values);
    let values: [f64; 50] = [880336_f64, 885771_f64, 882637_f64, 885763_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 101.59_f64, 0_f64, 0_f64, 49_f64, 127_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[26].get_regions()[1], &values);

    // ============================================================
    //  Seashore
    // ============================================================
    let values: [f64; 50] = [156503_f64, 192873_f64, 175208_f64, 192838_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.3693_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 0.003_f64, 0_f64, 9.6911_f64, 0_f64, 0_f64, 36_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[27].get_regions()[0], &values);

    // ============================================================
    //  Breath Noise0
    // ============================================================
    let values: [f64; 50] = [1016839_f64, 1019561_f64, 1016842_f64, 1019554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19901_f64, 8.1_f64, 0_f64, -57_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.054002_f64, 0.13798_f64, 0.00099997_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0_f64, 65_f64, 0_f64, 127_f64, 29.2_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[28].get_regions()[0], &values);
    let values: [f64; 50] = [1016839_f64, 1019561_f64, 1016842_f64, 1019554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19901_f64, 8.1_f64, 0_f64, 4500_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.047012_f64, 0.10701_f64, 0.00099997_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 66_f64, 108_f64, 0_f64, 127_f64, 29.2_f64, 0_f64, 4_f64, 0_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[28].get_regions()[1], &values);

    // ============================================================
    //  Breath Noise1
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19901_f64, 12.3_f64, 0_f64, 787_f64, 1.3_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.39003_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4895_f64, 97.7_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 71_f64, 0_f64, 127_f64, 37.5_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[29].get_regions()[0], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19901_f64, 12.3_f64, 0_f64, 787_f64, 1.3_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.384_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4594_f64, 97.7_f64, 0.22806_f64, 0_f64, 0_f64, 72_f64, 99_f64, 0_f64, 127_f64, 36.7_f64, 0_f64, -39_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[29].get_regions()[1], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19901_f64, 12_f64, 0_f64, 787_f64, 1.3_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.384_f64, 0_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4594_f64, 97.7_f64, 0.22806_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 34.5_f64, 0_f64, 25_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[29].get_regions()[2], &values);

    // ============================================================
    //  Fret Noise
    // ============================================================
    let values: [f64; 50] = [889495_f64, 892912_f64, 889498_f64, 892904_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5625_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.67987_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 12_f64, 0_f64, 24_f64, 0_f64, 50_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[30].get_regions()[0], &values);

    // ============================================================
    //  Reverse Cymbal
    // ============================================================
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 0.082995_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.5279_f64, 1.2397_f64, 0.095006_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[0], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 0.079018_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.5061_f64, 1.15_f64, 0.089985_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 36_f64, 48_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[1], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 3.4601_f64, 0.00097656_f64, 0.065987_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.48492_f64, 1.0601_f64, 0.084984_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 49_f64, 60_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[2], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 2.6697_f64, 0.00097656_f64, 0.061997_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.96594_f64, 0.084984_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 61_f64, 72_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[3], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 2.1798_f64, 0.00097656_f64, 0.050009_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.67987_f64, 0.78187_f64, 0.079983_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 73_f64, 84_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[4], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 1.5902_f64, 0.00097656_f64, 0.04399_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.58002_f64, 0.69016_f64, 0.079983_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 85_f64, 96_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[5], &values);
    let values: [f64; 50] = [892944_f64, 906176_f64, 899686_f64, 906121_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 201.05_f64, 0_f64, 0_f64, 7087_f64, 0_f64, 12.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.5061_f64, 0.00097656_f64, 0.036991_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.41706_f64, 0.69016_f64, 0.073006_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 10_f64, 1_f64, 50_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[31].get_regions()[6], &values);

    // ============================================================
    //  Synth Drum
    // ============================================================
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 0.30495_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.93196_f64, 100_f64, 0.93196_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 21_f64, 1_f64, 50_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[32].get_regions()[0], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.25305_f64, 100_f64, 0.27707_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.72113_f64, 100_f64, 0.72113_f64, 0_f64, 0_f64, 56_f64, 89_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 21_f64, 1_f64, 50_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[32].get_regions()[1], &values);
    let values: [f64; 50] = [906208_f64, 911488_f64, 911397_f64, 911480_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.23299_f64, 100_f64, 0.23299_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.46598_f64, 100_f64, 0.46598_f64, 0_f64, 0_f64, 90_f64, 108_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 21_f64, 1_f64, 50_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[32].get_regions()[2], &values);

    // ============================================================
    //  Melodic Tom
    // ============================================================
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.94989_f64, 100_f64, 0.77916_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 10.998_f64, 100_f64, 5.6308_f64, 0_f64, 4_f64, 0_f64, 48_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[0], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.79922_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 7.0698_f64, 100_f64, 4.2698_f64, 0_f64, 4_f64, 49_f64, 55_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[1], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5175_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.75393_f64, 0_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 5.7094_f64, 100_f64, 3.6808_f64, 0_f64, 4_f64, 56_f64, 60_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[2], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5175_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.60991_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 4.801_f64, 100_f64, 3.2396_f64, 0_f64, 4_f64, 61_f64, 65_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[3], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5287_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.5061_f64, 100_f64, 0.41706_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 4.1291_f64, 100_f64, 2.8795_f64, 0_f64, 4_f64, 66_f64, 70_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[4], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5400_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 0.43202_f64, 100_f64, 0.35994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 3.8704_f64, 100_f64, 2.74_f64, 0_f64, 4_f64, 71_f64, 74_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[5], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5400_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 0.35994_f64, 100_f64, 0.27707_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 2.7895_f64, 100_f64, 2.0104_f64, 0_f64, 4_f64, 75_f64, 78_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[6], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5512_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 0.29001_f64, 100_f64, 0.23299_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 2.3497_f64, 100_f64, 1.7502_f64, 0_f64, 4_f64, 79_f64, 83_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[7], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5737_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 0.24302_f64, 100_f64, 0.20201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 2.0303_f64, 100_f64, 1.4398_f64, 0_f64, 4_f64, 84_f64, 87_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[8], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 5850_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 0.20901_f64, 100_f64, 0.16997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 1.7102_f64, 100_f64, 1.1899_f64, 0_f64, 4_f64, 88_f64, 91_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[9], &values);
    let values: [f64; 50] = [911520_f64, 917458_f64, 916884_f64, 917454_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 6075_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 0.16099_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.17404_f64, 1.3302_f64, 100_f64, 0.93573_f64, 0_f64, 4_f64, 92_f64, 108_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -23_f64, 1_f64, 50_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[33].get_regions()[10], &values);

    // ============================================================
    //  Taiko Drum
    // ============================================================
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.2114_f64, 100_f64, 7.0698_f64, 0_f64, 0_f64, 0_f64, 60_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[0], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.4396_f64, 100_f64, 2.8795_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8704_f64, 100_f64, 4.801_f64, 0_f64, 0_f64, 61_f64, 71_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[1], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.2396_f64, 100_f64, 3.8704_f64, 0_f64, 0_f64, 72_f64, 77_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[2], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.9397_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.7895_f64, 100_f64, 3.2396_f64, 0_f64, 0_f64, 78_f64, 82_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[3], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7901_f64, 100_f64, 2.1104_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.4495_f64, 100_f64, 2.7895_f64, 0_f64, 0_f64, 83_f64, 86_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[4], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.1798_f64, 100_f64, 2.4495_f64, 0_f64, 0_f64, 87_f64, 91_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[5], &values);
    let values: [f64; 50] = [917490_f64, 923918_f64, 922740_f64, 923910_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 100_f64, 1.2797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.8203_f64, 100_f64, 2.0303_f64, 0_f64, 0_f64, 92_f64, 108_f64, 0_f64, 127_f64, 6_f64, 0_f64, 17_f64, 1_f64, 50_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[34].get_regions()[6], &values);

    // ============================================================
    //  Wood Block
    // ============================================================
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 0_f64, 72_f64, 0_f64, 127_f64, 0_f64, 0_f64, 12_f64, 0_f64, 50_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[35].get_regions()[0], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 73_f64, 84_f64, 0_f64, 127_f64, 0_f64, 0_f64, 12_f64, 0_f64, 50_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[35].get_regions()[1], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 85_f64, 97_f64, 0_f64, 127_f64, 0_f64, 0_f64, 12_f64, 0_f64, 50_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[35].get_regions()[2], &values);
    let values: [f64; 50] = [923950_f64, 925653_f64, 923953_f64, 925646_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 12_f64, 0_f64, 50_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[35].get_regions()[3], &values);

    // ============================================================
    //  Steel Drum
    // ============================================================
    let values: [f64; 50] = [927774_f64, 935445_f64, 934923_f64, 935437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.7195_f64, 100_f64, 2.7195_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.9793_f64, 100_f64, 3.9793_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[0], &values);
    let values: [f64; 50] = [927774_f64, 935445_f64, 934923_f64, 935437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.1104_f64, 100_f64, 2.1104_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0192_f64, 100_f64, 3.0192_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 2.8_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[1], &values);
    let values: [f64; 50] = [927774_f64, 935445_f64, 934923_f64, 935437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.7301_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.4396_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 2.8_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[2], &values);
    let values: [f64; 50] = [927774_f64, 935445_f64, 934923_f64, 935437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6096_f64, 100_f64, 1.6096_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.1597_f64, 100_f64, 2.1597_f64, 0_f64, 0_f64, 84_f64, 90_f64, 0_f64, 127_f64, 2.8_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[3], &values);
    let values: [f64; 50] = [925685_f64, 927742_f64, 927509_f64, 927734_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 1.3597_f64, 100_f64, 1.4398_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.9397_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 91_f64, 99_f64, 0_f64, 127_f64, 2.8_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[4], &values);
    let values: [f64; 50] = [925685_f64, 927742_f64, 927509_f64, 927734_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 1.1102_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.5404_f64, 100_f64, 1.5404_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 2.8_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[36].get_regions()[5], &values);

    // ============================================================
    //  Agogo
    // ============================================================
    let values: [f64; 50] = [935477_f64, 940418_f64, 940076_f64, 940410_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 100_f64, 1.3597_f64, 0_f64, 0_f64, 0_f64, 89_f64, 0_f64, 127_f64, 0.5_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[37].get_regions()[0], &values);

    // ============================================================
    //  Tinker Bell
    // ============================================================
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 0_f64, 49_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[0], &values);
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 4.2797_f64, 100_f64, 3.6196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.05501_f64, 5.3394_f64, 100_f64, 3.8194_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[1], &values);
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5298.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 3.0702_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[2], &values);
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5298.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 100_f64, 2.7195_f64, 0_f64, 0_f64, 74_f64, 85_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[3], &values);
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 5298.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 2.4396_f64, 0_f64, 0_f64, 86_f64, 97_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[4], &values);
    let values: [f64; 50] = [940450_f64, 944574_f64, 943888_f64, 944566_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4471_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.8194_f64, 86.3_f64, 3.2303_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 3.2303_f64, 100_f64, 2.0598_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[38].get_regions()[5], &values);

    // ============================================================
    //  Shenai
    // ============================================================
    let values: [f64; 50] = [948043_f64, 948665_f64, 948563_f64, 948657_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3410_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.35994_f64, 74.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 0_f64, 60_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[0], &values);
    let values: [f64; 50] = [947314_f64, 948011_f64, 947932_f64, 948003_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.35994_f64, 72.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.24302_f64, 0_f64, 0_f64, 61_f64, 64_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[1], &values);
    let values: [f64; 50] = [946649_f64, 947282_f64, 947218_f64, 947274_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.35994_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 65_f64, 69_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[2], &values);
    let values: [f64; 50] = [945806_f64, 946617_f64, 946564_f64, 946609_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.35994_f64, 68.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 70_f64, 73_f64, 0_f64, 127_f64, 2.9_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[3], &values);
    let values: [f64; 50] = [944907_f64, 945774_f64, 945730_f64, 945766_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.35994_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 74_f64, 79_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[4], &values);
    let values: [f64; 50] = [944907_f64, 945774_f64, 945730_f64, 945766_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.35994_f64, 56.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 80_f64, 86_f64, 0_f64, 127_f64, 0_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[5], &values);
    let values: [f64; 50] = [944606_f64, 944875_f64, 944856_f64, 944867_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 3.1_f64, 0_f64, 787_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.549_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.30495_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 1.6702_f64, 2.3_f64, 0.24302_f64, 0_f64, 0_f64, 87_f64, 108_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[39].get_regions()[6], &values);

    // ============================================================
    //  Fiddle
    // ============================================================
    let values: [f64; 50] = [1328712_f64, 1330018_f64, 1329917_f64, 1330011_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 965.23_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 25.4_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 0_f64, 49_f64, 0_f64, 127_f64, 11.5_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[0], &values);
    let values: [f64; 50] = [1328712_f64, 1330018_f64, 1329917_f64, 1330011_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 965.23_f64, 0_f64, -25_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 21.2_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 50_f64, 56_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[1], &values);
    let values: [f64; 50] = [1328712_f64, 1330018_f64, 1329917_f64, 1330011_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 965.23_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 17_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[2], &values);
    let values: [f64; 50] = [1327087_f64, 1328680_f64, 1328597_f64, 1328672_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 408.89_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 12.8_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[3], &values);
    let values: [f64; 50] = [1325529_f64, 1327055_f64, 1326991_f64, 1327047_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 8.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 67_f64, 71_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[4], &values);
    let values: [f64; 50] = [1324154_f64, 1325497_f64, 1325447_f64, 1325489_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 423.06_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 3.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 72_f64, 75_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[5], &values);
    let values: [f64; 50] = [1322791_f64, 1324122_f64, 1324083_f64, 1324114_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 76_f64, 78_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[6], &values);
    let values: [f64; 50] = [1322791_f64, 1324122_f64, 1324083_f64, 1324114_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 79_f64, 82_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[7], &values);
    let values: [f64; 50] = [1321504_f64, 1322759_f64, 1322729_f64, 1322751_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 83_f64, 87_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[8], &values);
    let values: [f64; 50] = [1320018_f64, 1321472_f64, 1321445_f64, 1321464_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 633.88_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 88_f64, 91_f64, 0_f64, 127_f64, 5.2_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[9], &values);
    let values: [f64; 50] = [1319169_f64, 1319986_f64, 1319968_f64, 1319978_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 580.93_f64, 0_f64, 0_f64, 4387_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 92_f64, 95_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[10], &values);
    let values: [f64; 50] = [1319169_f64, 1319986_f64, 1319968_f64, 1319978_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.26107_f64, 5.391_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 5.6113_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 96_f64, 108_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[40].get_regions()[11], &values);

    // ============================================================
    //  Bagpipe0
    // ============================================================
    let values: [f64; 50] = [948697_f64, 950827_f64, 950619_f64, 950819_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 2587_f64, -0.8_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 0.83977_f64, 0.0099978_f64, 0.83977_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 0.5061_f64, 40.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.59805_f64, 4.5289_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 0_f64, 57_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[0], &values);
    let values: [f64; 50] = [952057_f64, 955056_f64, 954991_f64, 955048_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 168_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 3.4495_f64, 0.0099978_f64, 3.4495_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 61.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.015999_f64, 0.00097656_f64, 0.35994_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 58_f64, 75_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 23_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[1], &values);
    let values: [f64; 50] = [952057_f64, 955056_f64, 954991_f64, 955048_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2590.3_f64, 0_f64, 168_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 3.4495_f64, 0.0099978_f64, 3.4495_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 56.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 0.35994_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 76_f64, 86_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[2], &values);
    let values: [f64; 50] = [951392_f64, 952025_f64, 952005_f64, 952017_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 168_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 3.4495_f64, 0.0099978_f64, 3.4495_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014997_f64, 0.5061_f64, 7.3488_f64, 1.3_f64, 0.48492_f64, 0_f64, 0_f64, 87_f64, 97_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[3], &values);
    let values: [f64; 50] = [951392_f64, 952025_f64, 952005_f64, 952017_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 168_f64, 1125_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 3.4495_f64, 0.0099978_f64, 3.4495_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 59_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014997_f64, 0.5061_f64, 7.3488_f64, 1.3_f64, 0.48492_f64, 0_f64, 0_f64, 98_f64, 102_f64, 0_f64, 127_f64, 5_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[4], &values);
    let values: [f64; 50] = [1051041_f64, 1051533_f64, 1051515_f64, 1051525_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2590.3_f64, 6.9_f64, 112_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.23299_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.5061_f64, 5.0107_f64, 1.3_f64, 0.55287_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 22.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[41].get_regions()[5], &values);

    // ============================================================
    //  Bagpipe1
    // ============================================================
    let values: [f64; 50] = [951088_f64, 951360_f64, 951107_f64, 951352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 2970.3_f64, 0_f64, -75_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 100_f64, 0.029994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.031999_f64, 0.00097656_f64, 4.1411_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 0_f64, 57_f64, 0_f64, 127_f64, 27.2_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[0], &values);
    let values: [f64; 50] = [950922_f64, 951056_f64, 950991_f64, 951048_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2005_f64, 0.0099978_f64, 4.2005_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 75.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 0.35994_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 58_f64, 79_f64, 0_f64, 127_f64, 20_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[1], &values);
    let values: [f64; 50] = [950922_f64, 951056_f64, 950991_f64, 951048_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2419.6_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2005_f64, 0.0099978_f64, 4.2005_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 68.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 0.35994_f64, 1.3_f64, 0.39003_f64, 0_f64, 0_f64, 80_f64, 86_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[2], &values);
    let values: [f64; 50] = [950859_f64, 950890_f64, 950870_f64, 950882_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.7116_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.5061_f64, 7.3488_f64, 1.3_f64, 0.48492_f64, 0_f64, 0_f64, 87_f64, 97_f64, 0_f64, 127_f64, 23.7_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[3], &values);
    let values: [f64; 50] = [950859_f64, 950890_f64, 950870_f64, 950882_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 1462_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.7116_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 24.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.5061_f64, 7.3488_f64, 1.3_f64, 0.48492_f64, 0_f64, 0_f64, 98_f64, 102_f64, 0_f64, 127_f64, 23.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[4], &values);
    let values: [f64; 50] = [1079941_f64, 1080358_f64, 1080340_f64, 1080350_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2680.1_f64, 0_f64, 0_f64, 1462_f64, 1.6_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 5.0107_f64, 1.3_f64, 0.55287_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 82.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[42].get_regions()[5], &values);

    // ============================================================
    //  Kalimba
    // ============================================================
    let values: [f64; 50] = [956311_f64, 960744_f64, 960568_f64, 960736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 0_f64, 60_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[43].get_regions()[0], &values);
    let values: [f64; 50] = [956311_f64, 960744_f64, 960568_f64, 960736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.16_f64, 0_f64, 0_f64, 61_f64, 76_f64, 0_f64, 127_f64, 1_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[43].get_regions()[1], &values);
    let values: [f64; 50] = [956311_f64, 960744_f64, 960568_f64, 960736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 100_f64, 1.16_f64, 0_f64, 0_f64, 77_f64, 83_f64, 0_f64, 127_f64, 1_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[43].get_regions()[2], &values);
    let values: [f64; 50] = [955088_f64, 956279_f64, 956219_f64, 956271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.65_f64, 100_f64, 1.65_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.031999_f64, 2.4396_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 84_f64, 96_f64, 0_f64, 127_f64, 1_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[43].get_regions()[3], &values);
    let values: [f64; 50] = [955088_f64, 956279_f64, 956219_f64, 956271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 1_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[43].get_regions()[4], &values);

    // ============================================================
    //  Koto
    // ============================================================
    let values: [f64; 50] = [966354_f64, 969546_f64, 969421_f64, 969538_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3179.8_f64, 0_f64, 0_f64, 1125_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.5508_f64, 100_f64, 2.9299_f64, 0_f64, 0_f64, 0_f64, 58_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -29_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[44].get_regions()[0], &values);
    let values: [f64; 50] = [964175_f64, 966322_f64, 966236_f64, 966314_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3179.8_f64, 0_f64, 0_f64, 1125_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 85.3_f64, 1.0099_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6699_f64, 100_f64, 2.6898_f64, 0_f64, 0_f64, 59_f64, 64_f64, 0_f64, 127_f64, 1_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[44].get_regions()[1], &values);
    let values: [f64; 50] = [961365_f64, 964143_f64, 964077_f64, 964135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 1150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.40801_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.4691_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 65_f64, 96_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[44].get_regions()[2], &values);
    let values: [f64; 50] = [960776_f64, 961333_f64, 961313_f64, 961325_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2909.2_f64, 0_f64, 0_f64, 1137_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.34708_f64, 69.6_f64, 0.96985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.1401_f64, 100_f64, 1.9196_f64, 0_f64, 0_f64, 97_f64, 102_f64, 0_f64, 127_f64, 0_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[44].get_regions()[3], &values);
    let values: [f64; 50] = [960776_f64, 961333_f64, 961313_f64, 961325_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2909.2_f64, 0_f64, 0_f64, 1137_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.33896_f64, 62_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.6396_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[44].get_regions()[4], &values);

    // ============================================================
    //  Shamisen
    // ============================================================
    let values: [f64; 50] = [976656_f64, 979642_f64, 979508_f64, 979634_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[0], &values);
    let values: [f64; 50] = [974121_f64, 976624_f64, 976522_f64, 976616_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 3.8106_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 56_f64, 59_f64, 0_f64, 127_f64, 3_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[1], &values);
    let values: [f64; 50] = [971929_f64, 974089_f64, 974010_f64, 974081_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.5698_f64, 55.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 60_f64, 67_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[2], &values);
    let values: [f64; 50] = [969578_f64, 971897_f64, 971839_f64, 971889_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[3], &values);
    let values: [f64; 50] = [969578_f64, 971897_f64, 971839_f64, 971889_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.4396_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 80_f64, 91_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[4], &values);
    let values: [f64; 50] = [979878_f64, 980382_f64, 980358_f64, 980374_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 40.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 92_f64, 100_f64, 0_f64, 127_f64, 0_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[5], &values);
    let values: [f64; 50] = [979674_f64, 979846_f64, 979828_f64, 979838_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.122_f64, 40.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.7195_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[45].get_regions()[6], &values);

    // ============================================================
    //  Banjo
    // ============================================================
    let values: [f64; 50] = [980414_f64, 985209_f64, 984608_f64, 984709_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.48492_f64, 100_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 2_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[0], &values);
    let values: [f64; 50] = [980414_f64, 985209_f64, 984608_f64, 984709_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.44907_f64, 100_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 56_f64, 63_f64, 0_f64, 127_f64, 2_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[1], &values);
    let values: [f64; 50] = [985241_f64, 988589_f64, 988510_f64, 988581_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.43202_f64, 96.8_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 64_f64, 69_f64, 0_f64, 127_f64, 2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[2], &values);
    let values: [f64; 50] = [985241_f64, 988589_f64, 988510_f64, 988581_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.44907_f64, 87.4_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 70_f64, 76_f64, 0_f64, 127_f64, 2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[3], &values);
    let values: [f64; 50] = [985241_f64, 988589_f64, 988510_f64, 988581_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.39003_f64, 82.1_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 77_f64, 82_f64, 0_f64, 127_f64, 2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[4], &values);
    let values: [f64; 50] = [985241_f64, 988589_f64, 988510_f64, 988581_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 76.9_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.5206_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 83_f64, 87_f64, 0_f64, 127_f64, 2.7_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[5], &values);
    let values: [f64; 50] = [979878_f64, 980382_f64, 980358_f64, 980374_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.37696_f64, 72.7_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.8795_f64, 100_f64, 0.81979_f64, 0_f64, 0_f64, 88_f64, 100_f64, 0_f64, 127_f64, 2_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[6], &values);
    let values: [f64; 50] = [979674_f64, 979846_f64, 979828_f64, 979838_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1669.9_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.37696_f64, 69.5_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 0.61097_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 1.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[46].get_regions()[7], &values);

    // ============================================================
    //  Sitar
    // ============================================================
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 96.8_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0397_f64, 0_f64, 0_f64, 0_f64, 48_f64, 0_f64, 127_f64, 10_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[0], &values);
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 93.7_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 4.4511_f64, 0_f64, 0_f64, 49_f64, 60_f64, 0_f64, 127_f64, 10_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[1], &values);
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 88.4_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 3.9701_f64, 0_f64, 0_f64, 61_f64, 69_f64, 0_f64, 127_f64, 10_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[2], &values);
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 85.3_f64, 4.5289_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 3.9701_f64, 0_f64, 0_f64, 70_f64, 75_f64, 0_f64, 127_f64, 10_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[3], &values);
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 82.1_f64, 4.5289_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 3.5905_f64, 0_f64, 0_f64, 76_f64, 79_f64, 0_f64, 127_f64, 8.5_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[4], &values);
    let values: [f64; 50] = [988919_f64, 990053_f64, 989912_f64, 990045_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 73.7_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 3.0192_f64, 0_f64, 0_f64, 80_f64, 90_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 28_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[5], &values);
    let values: [f64; 50] = [988621_f64, 988887_f64, 988869_f64, 988879_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 686.08_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 69.5_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 2.7895_f64, 0_f64, 0_f64, 91_f64, 108_f64, 0_f64, 127_f64, 1.3_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[47].get_regions()[6], &values);

    // ============================================================
    //  Star Theme0
    // ============================================================
    let values: [f64; 50] = [1444845_f64, 1448498_f64, 1448264_f64, 1448490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 10.697_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[0], &values);
    let values: [f64; 50] = [1441508_f64, 1444813_f64, 1444670_f64, 1444805_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 48_f64, 53_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[1], &values);
    let values: [f64; 50] = [1441508_f64, 1444813_f64, 1444670_f64, 1444805_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 54_f64, 59_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[2], &values);
    let values: [f64; 50] = [1438204_f64, 1441476_f64, 1441383_f64, 1441468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.050009_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 60_f64, 63_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[3], &values);
    let values: [f64; 50] = [1435400_f64, 1438172_f64, 1438100_f64, 1438164_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.047012_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 64_f64, 68_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[4], &values);
    let values: [f64; 50] = [1432561_f64, 1435368_f64, 1435314_f64, 1435360_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 92.6_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.047012_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 69_f64, 78_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[5], &values);
    let values: [f64; 50] = [1432561_f64, 1435368_f64, 1435314_f64, 1435360_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 19.6_f64, 7_f64, 0_f64, 0.010998_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.35994_f64, 91.6_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 19.801_f64, 27.5_f64, 3.0702_f64, 0_f64, 0_f64, 79_f64, 95_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[6], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 813.07_f64, 0_f64, 0_f64, 3172_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.35994_f64, 91.6_f64, 0.43202_f64, 0_f64, 0_f64, 0.00097656_f64, 0.042004_f64, 0.065004_f64, 19.495_f64, 27.8_f64, 3.1095_f64, 0_f64, 0_f64, 96_f64, 108_f64, 0_f64, 127_f64, 10.9_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[48].get_regions()[7], &values);

    // ============================================================
    //  Star Theme1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.8795_f64, 70.6_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.8795_f64, 69.5_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 48_f64, 55_f64, 0_f64, 127_f64, 1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[1], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.7195_f64, 67.4_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[2], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.7195_f64, 66.4_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 62_f64, 67_f64, 0_f64, 127_f64, 1_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[3], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.5698_f64, 63.2_f64, 2.4396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 68_f64, 73_f64, 0_f64, 127_f64, 1_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[4], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.5698_f64, 66.4_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 74_f64, 84_f64, 0_f64, 127_f64, 1_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[5], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.5698_f64, 59_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 85_f64, 96_f64, 0_f64, 127_f64, 1_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[6], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.4396_f64, 56.9_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.23005_f64, 8.709_f64, 2.3_f64, 3.0702_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 1_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[49].get_regions()[7], &values);

    // ============================================================
    //  Echo Drops0
    // ============================================================
    let values: [f64; 50] = [1253096_f64, 1266060_f64, 1253149_f64, 1266052_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4960.9_f64, 0.7_f64, 0_f64, -3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 0_f64, 62_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[0], &values);
    let values: [f64; 50] = [1240264_f64, 1253064_f64, 1240268_f64, 1253056_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4789.2_f64, 0.7_f64, 0_f64, -3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[1], &values);
    let values: [f64; 50] = [1240264_f64, 1253064_f64, 1240268_f64, 1253056_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4789.2_f64, 0.7_f64, 0_f64, -3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 66_f64, 69_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[2], &values);
    let values: [f64; 50] = [1228044_f64, 1240232_f64, 1228063_f64, 1240224_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4628.7_f64, 0.7_f64, 0_f64, -3037_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 70_f64, 73_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[3], &values);
    let values: [f64; 50] = [1215751_f64, 1228012_f64, 1215764_f64, 1228004_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4471_f64, 0.7_f64, 0_f64, -2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 74_f64, 87_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[4], &values);
    let values: [f64; 50] = [1215751_f64, 1228012_f64, 1215764_f64, 1228004_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0.7_f64, 0_f64, -2475_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 88_f64, 98_f64, 0_f64, 127_f64, 5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[5], &values);
    let values: [f64; 50] = [1215221_f64, 1215719_f64, 1215252_f64, 1215717_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4789.2_f64, 0.7_f64, 0_f64, -2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.701_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 19.801_f64, 3.4_f64, 3.8106_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[50].get_regions()[6], &values);

    // ============================================================
    //  Echo Drops1
    // ============================================================
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 371.93_f64, 1.5_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 19.801_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 0_f64, 59_f64, 0_f64, 127_f64, 11_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[51].get_regions()[0], &values);
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 1.5_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 19.801_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 60_f64, 69_f64, 0_f64, 127_f64, 11_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[51].get_regions()[1], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 1.5_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 19.801_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 70_f64, 81_f64, 0_f64, 127_f64, 11_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[51].get_regions()[2], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 456.05_f64, 1.5_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 19.801_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 82_f64, 95_f64, 0_f64, 127_f64, 11_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[51].get_regions()[3], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 397.94_f64, 1.5_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 4.9502_f64, 0.00097656_f64, 19.801_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 19.801_f64, 2.3_f64, 0.39003_f64, 0_f64, 0_f64, 96_f64, 108_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[51].get_regions()[4], &values);

    // ============================================================
    //  Goblin0
    // ============================================================
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 194.99_f64, 4_f64, 0_f64, 5737_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.27997_f64, 8.9125_f64, 0.00097656_f64, 0.047012_f64, 0_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.76711_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.0107_f64, 0_f64, 0_f64, 0_f64, 69_f64, 0_f64, 127_f64, 3_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[52].get_regions()[0], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 4_f64, 0_f64, 5737_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.27997_f64, 8.9125_f64, 0.00097656_f64, 0.047012_f64, 0_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.76711_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.0107_f64, 0_f64, 0_f64, 70_f64, 82_f64, 0_f64, 127_f64, 3_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[52].get_regions()[1], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 255.95_f64, 4_f64, 0_f64, 5737_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 8.9125_f64, 0.00097656_f64, 0.047012_f64, 0_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.76711_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.0107_f64, 0_f64, 0_f64, 83_f64, 93_f64, 0_f64, 127_f64, 3_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[52].get_regions()[2], &values);
    let values: [f64; 50] = [1215221_f64, 1215719_f64, 1215252_f64, 1215717_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 292.99_f64, 4_f64, 0_f64, 5625_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 8.9125_f64, 0.00097656_f64, 0.047012_f64, 0_f64, 3.5206_f64, 0_f64, 0_f64, 0.00097656_f64, 0.88117_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.0107_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[52].get_regions()[3], &values);

    // ============================================================
    //  Goblin1
    // ============================================================
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 609_f64, 0_f64, 108.99_f64, 19_f64, -2756_f64, 4950_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.499_f64, 0.0099978_f64, 8.479_f64, 0.00097656_f64, 8.9125_f64, 2.3497_f64, 28.198_f64, 0.2_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 1.8404_f64, 0.00097656_f64, 19.801_f64, 16_f64, 4.1411_f64, 0_f64, 0_f64, 0_f64, 63_f64, 0_f64, 127_f64, 60_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[53].get_regions()[0], &values);
    let values: [f64; 50] = [990085_f64, 995155_f64, 994632_f64, 995147_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 600_f64, 0_f64, 108.99_f64, 19_f64, -2756_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.499_f64, 0.0099978_f64, 8.479_f64, 0.00097656_f64, 8.9125_f64, 2.3497_f64, 28.198_f64, 0_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 1.8404_f64, 0.00097656_f64, 19.801_f64, 16_f64, 4.1411_f64, 0_f64, 0_f64, 64_f64, 79_f64, 0_f64, 127_f64, 60_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[53].get_regions()[1], &values);
    let values: [f64; 50] = [988919_f64, 990053_f64, 989912_f64, 990045_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 600_f64, 0_f64, 101.99_f64, 19_f64, -2756_f64, 5175_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 10.499_f64, 0.0099978_f64, 8.479_f64, 0.00097656_f64, 8.9125_f64, 2.3497_f64, 28.198_f64, 0_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 1.8404_f64, 0.00097656_f64, 19.801_f64, 12.8_f64, 4.1411_f64, 0_f64, 0_f64, 80_f64, 96_f64, 0_f64, 127_f64, 59.2_f64, 0_f64, 28_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[53].get_regions()[2], &values);
    let values: [f64; 50] = [988621_f64, 988887_f64, 988869_f64, 988879_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 600_f64, 0_f64, 108.99_f64, 19_f64, -2756_f64, 5287_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.27997_f64, 10.603_f64, 0.0099978_f64, 10.701_f64, 0.00097656_f64, 8.9125_f64, 2.3497_f64, 28.198_f64, 0_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 8.9125_f64, 0.00097656_f64, 19.801_f64, 10.7_f64, 4.1411_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 60_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[53].get_regions()[3], &values);

    // ============================================================
    //  Brightness0
    // ============================================================
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.3_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 0_f64, 57_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[0], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.2_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 58_f64, 66_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[1], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.3_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 67_f64, 75_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[2], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.3_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 76_f64, 85_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[3], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.3_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 86_f64, 94_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[4], &values);
    let values: [f64; 50] = [1000098_f64, 1001449_f64, 1000250_f64, 1001441_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 6508.3_f64, 1.3_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.8106_f64, 0_f64, 0_f64, 95_f64, 108_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[54].get_regions()[5], &values);

    // ============================================================
    //  Brightness1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6525_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 0_f64, 25_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6525_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 26_f64, 37_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[1], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6412_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 38_f64, 49_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[2], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6525_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6637_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 62_f64, 71_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[4], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6637_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019996_f64, 0.13798_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 72_f64, 80_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6637_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 81_f64, 99_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[6], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 0_f64, 0_f64, 6637_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 19.801_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 8.709_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[55].get_regions()[7], &values);

    // ============================================================
    //  Atmosphere0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 68.5_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.043011_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 0_f64, 37_f64, 0_f64, 127_f64, 12_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 65.3_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 38_f64, 43_f64, 0_f64, 127_f64, 12_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[1], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 61.1_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 44_f64, 50_f64, 0_f64, 127_f64, 12_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[2], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 58_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 51_f64, 61_f64, 0_f64, 127_f64, 12_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[3], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 56.9_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 12_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[4], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 52.7_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 20.2_f64, 3.3909_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[5], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 49.6_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 84_f64, 92_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[6], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 44.3_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 93_f64, 99_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[7], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.1102_f64, 41.2_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 19.801_f64, 18.1_f64, 3.3909_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[56].get_regions()[8], &values);

    // ============================================================
    //  Atmosphere1
    // ============================================================
    let values: [f64; 50] = [1485937_f64, 1488354_f64, 1488186_f64, 1488346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 0_f64, 43_f64, 0_f64, 127_f64, 6_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[0], &values);
    let values: [f64; 50] = [1485937_f64, 1488354_f64, 1488186_f64, 1488346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 44_f64, 53_f64, 0_f64, 127_f64, 6_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[1], &values);
    let values: [f64; 50] = [1483732_f64, 1485905_f64, 1485772_f64, 1485897_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 54_f64, 56_f64, 0_f64, 127_f64, 6_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[2], &values);
    let values: [f64; 50] = [1481463_f64, 1483700_f64, 1483598_f64, 1483692_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 89.5_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 57_f64, 62_f64, 0_f64, 127_f64, 6_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[3], &values);
    let values: [f64; 50] = [1479239_f64, 1481431_f64, 1481348_f64, 1481423_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 80_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 6_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[4], &values);
    let values: [f64; 50] = [1476986_f64, 1479207_f64, 1479140_f64, 1479199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 75.8_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 66_f64, 69_f64, 0_f64, 127_f64, 6_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[5], &values);
    let values: [f64; 50] = [1474748_f64, 1476954_f64, 1476899_f64, 1476946_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 71.6_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 70_f64, 73_f64, 0_f64, 127_f64, 6_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[6], &values);
    let values: [f64; 50] = [1472538_f64, 1474716_f64, 1474670_f64, 1474708_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 67.4_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 6_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[7], &values);
    let values: [f64; 50] = [1472538_f64, 1474716_f64, 1474670_f64, 1474708_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 63.2_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 84_f64, 96_f64, 0_f64, 127_f64, 6_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[8], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 59_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 97_f64, 104_f64, 0_f64, 127_f64, 6_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[9], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 54.8_f64, 7.3488_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 1.21_f64, 0_f64, 0_f64, 105_f64, 108_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[57].get_regions()[10], &values);

    // ============================================================
    //  Crystal0
    // ============================================================
    let values: [f64; 50] = [1608208_f64, 1617780_f64, 1617100_f64, 1617772_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.16099_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 3.8106_f64, 0_f64, 4_f64, 0_f64, 84_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[58].get_regions()[0], &values);
    let values: [f64; 50] = [1608208_f64, 1617780_f64, 1617100_f64, 1617772_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.16099_f64, 88.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 3.5206_f64, 0_f64, 4_f64, 85_f64, 92_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[58].get_regions()[1], &values);
    let values: [f64; 50] = [1608208_f64, 1617780_f64, 1617100_f64, 1617772_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.16099_f64, 81.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 3.5206_f64, 0_f64, 4_f64, 93_f64, 96_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[58].get_regions()[2], &values);
    let values: [f64; 50] = [1607870_f64, 1608176_f64, 1608157_f64, 1608168_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 3.2792_f64, 0_f64, 4_f64, 97_f64, 108_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 119_f64];
    instrument_util::check(&sf.get_instruments()[58].get_regions()[3], &values);

    // ============================================================
    //  Crystal1
    // ============================================================
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 72.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 5.0107_f64, 0_f64, 4_f64, 0_f64, 80_f64, 0_f64, 127_f64, 1_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[59].get_regions()[0], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 5.0107_f64, 0_f64, 4_f64, 81_f64, 92_f64, 0_f64, 127_f64, 1_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[59].get_regions()[1], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 5.0107_f64, 0_f64, 4_f64, 93_f64, 101_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[59].get_regions()[2], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 5.0107_f64, 0_f64, 4_f64, 102_f64, 108_f64, 0_f64, 127_f64, 2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[59].get_regions()[3], &values);

    // ============================================================
    //  Soundtrack0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.23299_f64, 0.00097656_f64, 3.5206_f64, 66.4_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.5061_f64, 19.801_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.23299_f64, 0.00097656_f64, 3.5206_f64, 58_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 13.897_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 55_f64, 61_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -34_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.23299_f64, 0.00097656_f64, 3.5206_f64, 54.8_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 10.697_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -34_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.23299_f64, 0.00097656_f64, 3.2792_f64, 50.6_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 10.697_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 67_f64, 77_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.23299_f64, 0.00097656_f64, 3.2792_f64, 45.4_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.24302_f64, 0.00097656_f64, 10.697_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 78_f64, 90_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[4], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 3.2792_f64, 7.6_f64, 3.0702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 10.697_f64, 0.2_f64, 5.6113_f64, 0_f64, 0_f64, 91_f64, 100_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 105_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 159.02_f64, 5.1_f64, -3600_f64, 4725_f64, 0_f64, 0_f64, 7_f64, -6.6_f64, 0.047012_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.089985_f64, 0.00097656_f64, 3.2792_f64, 21.2_f64, 6.3606_f64, 0_f64, 0_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 7.3488_f64, 4.4_f64, 5.6113_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 28.5_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 117_f64];
    instrument_util::check(&sf.get_instruments()[60].get_regions()[6], &values);

    // ============================================================
    //  Soundtrack1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1499.8_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 55_f64, 61_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1559.9_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[2], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 67_f64, 77_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2260.2_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 3.8106_f64, 66.4_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 78_f64, 92_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[4], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2590.3_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 93_f64, 101_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3179.8_f64, 1.3_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 13_f64, 0.0099978_f64, 1.6_f64, 0.0099978_f64, 1.6_f64, 0.00097656_f64, 0.098016_f64, 0.00097656_f64, 28.198_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11697_f64, 0.5061_f64, 32.805_f64, 0.2_f64, 5.0107_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[61].get_regions()[6], &values);

    // ============================================================
    //  IceRain
    // ============================================================
    let values: [f64; 50] = [125387_f64, 156471_f64, 130152_f64, 156459_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 4.7204_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 25.194_f64, 4.1_f64, 9.6911_f64, 0_f64, 0_f64, 21_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[62].get_regions()[0], &values);

    // ============================================================
    //  Sweep Pad0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 354.93_f64, 1.9_f64, 1800_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 9.9982_f64, 0.16798_f64, 0.0099978_f64, 0.099999_f64, 0.23502_f64, 13.501_f64, 0.00097656_f64, 19.801_f64, 54.8_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 1_f64, 0.00097656_f64, 22.601_f64, 6.6_f64, 1.8596_f64, 0_f64, -40_f64, 0_f64, 61_f64, 0_f64, 127_f64, 11_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[63].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 422.09_f64, 1.9_f64, 1800_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 9.9982_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.22004_f64, 12.699_f64, 0.00097656_f64, 19.801_f64, 46.4_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 1_f64, 0.00097656_f64, 22.601_f64, 6.6_f64, 1.8596_f64, 0_f64, -40_f64, 62_f64, 73_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[63].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 501.08_f64, 1.9_f64, 1800_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 9.9982_f64, 0.16798_f64, 0.0099978_f64, 0.099999_f64, 0.22004_f64, 12.203_f64, 0.00097656_f64, 19.801_f64, 34.9_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 1_f64, 0.00097656_f64, 22.601_f64, 6.6_f64, 1.8596_f64, 0_f64, -40_f64, 74_f64, 92_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 37_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[63].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 501.08_f64, 1.9_f64, 1800_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 9.9982_f64, 0.16798_f64, 0.0099978_f64, 0.099999_f64, 0.22004_f64, 11.598_f64, 0.00097656_f64, 19.801_f64, 23.3_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.89193_f64, 0.00097656_f64, 22.601_f64, 6.6_f64, 1.8596_f64, 0_f64, -40_f64, 93_f64, 108_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 37_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[63].get_regions()[3], &values);

    // ============================================================
    //  Sweep Pad1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 354.93_f64, 1.3_f64, 3543_f64, 1912_f64, 0_f64, 0_f64, 7_f64, -7.4_f64, 0.0099978_f64, 0.16798_f64, 0.0099978_f64, 0.099999_f64, 0.60885_f64, 11.498_f64, 0.78187_f64, 28.198_f64, 0_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.41394_f64, 24.001_f64, 6.6_f64, 1.9397_f64, 0_f64, -40_f64, 0_f64, 61_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[64].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 415.08_f64, 1.3_f64, 3543_f64, 1912_f64, 0_f64, 0_f64, 7_f64, -7.4_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.52214_f64, 9.3718_f64, 0.78187_f64, 28.198_f64, 0_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.41394_f64, 24.001_f64, 6.6_f64, 1.9397_f64, 0_f64, -40_f64, 62_f64, 73_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[64].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 501.08_f64, 1.3_f64, 3543_f64, 1912_f64, 0_f64, 0_f64, 7_f64, -7.4_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.51198_f64, 8.6388_f64, 0.78187_f64, 28.198_f64, 0_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.41394_f64, 24.001_f64, 6.6_f64, 1.9397_f64, 0_f64, -40_f64, 74_f64, 92_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[64].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 501.08_f64, 1.3_f64, 3543_f64, 1912_f64, 0_f64, 0_f64, 7_f64, -7.4_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 0.099999_f64, 0.45612_f64, 8.5891_f64, 0.69016_f64, 28.198_f64, 0_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.41394_f64, 24.001_f64, 6.6_f64, 1.9397_f64, 0_f64, -40_f64, 93_f64, 108_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[64].get_regions()[3], &values);

    // ============================================================
    //  Halo Pad0
    // ============================================================
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.0197_f64, 80_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 5.5597_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 0_f64, 57_f64, 0_f64, 127_f64, 9_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[0], &values);
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.9397_f64, 70.6_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 5.5597_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 58_f64, 69_f64, 0_f64, 127_f64, 9_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[1], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.9397_f64, 66.4_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 5.5597_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 70_f64, 77_f64, 0_f64, 127_f64, 9_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[2], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.9397_f64, 60.1_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 5.5597_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 78_f64, 85_f64, 0_f64, 127_f64, 9_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[3], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.9397_f64, 54.8_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.13798_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 86_f64, 97_f64, 0_f64, 127_f64, 9_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[4], &values);
    let values: [f64; 50] = [1215221_f64, 1215719_f64, 1215252_f64, 1215717_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 222.95_f64, 11.7_f64, 0_f64, 4612_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.9397_f64, 8.6_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.13798_f64, 13.897_f64, 10.7_f64, 1.4398_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 22.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[65].get_regions()[5], &values);

    // ============================================================
    //  Halo Pad1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 47.5_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 0_f64, 37_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 39.1_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 38_f64, 61_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 32.8_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 25.4_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 0.2_f64, 1.5601_f64, 0_f64, 0_f64, 74_f64, 84_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 17_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 85_f64, 92_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[4], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 13.9_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 93_f64, 98_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 225_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.65406_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 7.6_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.32197_f64, 19.801_f64, 1.3_f64, 1.5601_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 9_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[66].get_regions()[6], &values);

    // ============================================================
    //  Metal Pad0
    // ============================================================
    let values: [f64; 50] = [1459610_f64, 1461616_f64, 1461493_f64, 1461589_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 5175_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.00097656_f64, 3.0702_f64, 56.9_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[0], &values);
    let values: [f64; 50] = [1569731_f64, 1571244_f64, 1571164_f64, 1571236_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.4_f64, 0_f64, 5175_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.00097656_f64, 3.0702_f64, 50.6_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 13.897_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[1], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 5175_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.00097656_f64, 3.0702_f64, 45.4_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 13.897_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 67_f64, 75_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[2], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 5175_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 3.0702_f64, 40.1_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 13.897_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 76_f64, 83_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[3], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 4612_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.00097656_f64, 3.0702_f64, 32.8_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.44907_f64, 0.23005_f64, 13.897_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 84_f64, 87_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[4], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 5287_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.13798_f64, 3.0702_f64, 30.7_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.44907_f64, 0.23005_f64, 13.897_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 88_f64, 96_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[5], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 2.7_f64, 0_f64, 5175_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.014997_f64, 0.00097656_f64, 3.0702_f64, 30.7_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.43202_f64, 0.23005_f64, 10.697_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[67].get_regions()[6], &values);

    // ============================================================
    //  Metal Pad1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.41394_f64, 3.8106_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.48492_f64, 0.41394_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 10_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.41394_f64, 3.8106_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 62_f64, 68_f64, 0_f64, 127_f64, 10.6_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.19502_f64, 0.41394_f64, 3.8106_f64, 84.2_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 69_f64, 73_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.41394_f64, 4.1411_f64, 73.7_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 74_f64, 84_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.41394_f64, 3.8106_f64, 72.7_f64, 3.0702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 85_f64, 92_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[4], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.32197_f64, 3.8106_f64, 66.4_f64, 4.1411_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 93_f64, 99_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 302.98_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.26395_f64, 0.32197_f64, 3.5206_f64, 61.1_f64, 3.8106_f64, 0_f64, 0_f64, 0.00097656_f64, 0.46598_f64, 0.23005_f64, 19.801_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[68].get_regions()[6], &values);

    // ============================================================
    //  Bowed Glass0
    // ============================================================
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 23.3_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 5.0107_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 0_f64, 49_f64, 0_f64, 127_f64, 17_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[0], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 16_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 4.5289_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 17_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[1], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 8.6_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 4.5289_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 17_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[2], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 1.3_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 4.5289_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 74_f64, 87_f64, 0_f64, 127_f64, 17_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[3], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0.1_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 0_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 4.1411_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 88_f64, 96_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[4], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 238.95_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 3.8106_f64, 0_f64, 8.709_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 4.1411_f64, 37_f64, 2.8795_f64, 0_f64, 0_f64, 97_f64, 103_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[69].get_regions()[5], &values);

    // ============================================================
    //  Bowed Glass1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 1800_f64, 0_f64, 10.1_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 0_f64, 49_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 2475_f64, 0_f64, 14.1_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 104.97_f64, 5.8_f64, 0_f64, 2475_f64, 0_f64, 18_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 2925_f64, 0_f64, 23.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.1411_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 3037_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 84_f64, 92_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[4], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 3262_f64, 0_f64, 29_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.69016_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 93_f64, 100_f64, 0_f64, 127_f64, 2.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 101.99_f64, 5.8_f64, 0_f64, 3487_f64, 0_f64, 31.3_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.145_f64, 0.5061_f64, 28.198_f64, 2.3_f64, 2.4895_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[70].get_regions()[6], &values);

    // ============================================================
    //  Space Voice0
    // ============================================================
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1540.2_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 84.2_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[0], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1540.2_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 80_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 62_f64, 69_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[1], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 77.9_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 70_f64, 77_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[2], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1369.8_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 74.8_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 78_f64, 87_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[3], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1289.9_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 70.6_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 88_f64, 97_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[4], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1220.3_f64, 4.8_f64, 0_f64, 2362_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 19.604_f64, 0.0099978_f64, 19.604_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.8106_f64, 67.4_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 8.709_f64, 26.5_f64, 3.2792_f64, 0_f64, 0_f64, 98_f64, 102_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[71].get_regions()[5], &values);

    // ============================================================
    //  Space Voice1
    // ============================================================
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1629.9_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 81.1_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 0_f64, 64_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[72].get_regions()[0], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1530.4_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 76.9_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 65_f64, 81_f64, 0_f64, 127_f64, 8_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[72].get_regions()[1], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1369.8_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.2792_f64, 72.7_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 82_f64, 93_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[72].get_regions()[2], &values);
    let values: [f64; 50] = [1000098_f64, 1001449_f64, 1000250_f64, 1001441_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1289.9_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 69.5_f64, 13.897_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 10_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[72].get_regions()[3], &values);

    // ============================================================
    //  Poly Synth0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 2.5_f64, 3093_f64, 4162_f64, 0_f64, 12.5_f64, 7_f64, 3.5_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 0.80618_f64, 74.8_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2198_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 12_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[73].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 2.5_f64, 3093_f64, 4162_f64, 0_f64, 12.5_f64, 7_f64, 3.5_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 0.80618_f64, 72.7_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2198_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 12_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[73].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 2.5_f64, 3093_f64, 4162_f64, 0_f64, 12.5_f64, 7_f64, 3.5_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 0.80618_f64, 64.3_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2198_f64, 0_f64, 0_f64, 74_f64, 85_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 37_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[73].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 620.12_f64, 2.5_f64, 0_f64, 3937_f64, 0_f64, 10.9_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 0.77916_f64, 64.3_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 1.3_f64, 1.2198_f64, 0_f64, 0_f64, 86_f64, 92_f64, 0_f64, 127_f64, 9_f64, 0_f64, 37_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[73].get_regions()[3], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 620.12_f64, 2.5_f64, 3093_f64, 4162_f64, 0_f64, 12.5_f64, 7_f64, 3.5_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.012_f64, 0.00097656_f64, 0.80618_f64, 58_f64, 0.93196_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2198_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 37_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[73].get_regions()[4], &values);

    // ============================================================
    //  Poly Synth1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -712_f64, 787.19_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.027001_f64, 100_f64, 0.031999_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2797_f64, 0_f64, 0_f64, 0_f64, 59_f64, 0_f64, 127_f64, 12_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[74].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -712_f64, 870.92_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.027001_f64, 100_f64, 0.031999_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2797_f64, 0_f64, 0_f64, 60_f64, 74_f64, 0_f64, 127_f64, 12_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[74].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -712_f64, 1110_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.027001_f64, 100_f64, 0.031999_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2797_f64, 0_f64, 0_f64, 75_f64, 90_f64, 0_f64, 127_f64, 12_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[74].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -702_f64, 1450.4_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, -5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.027001_f64, 100_f64, 0.032994_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 1.2797_f64, 0_f64, 0_f64, 91_f64, 108_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[74].get_regions()[3], &values);

    // ============================================================
    //  Warm Pad
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 121.99_f64, 0.1_f64, 0_f64, 1125_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.7195_f64, 0_f64, 0_f64, 0_f64, 37_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 135.04_f64, 0.1_f64, 0_f64, 1687_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.5698_f64, 0_f64, 0_f64, 38_f64, 49_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[1], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 155.03_f64, 0.1_f64, 0_f64, 2137_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.4396_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[2], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 172.02_f64, 0.1_f64, 0_f64, 2587_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3201_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 176.95_f64, 0.1_f64, 0_f64, 2925_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.1104_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[4], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 197.02_f64, 0.1_f64, 0_f64, 3150_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.0197_f64, 0_f64, 0_f64, 84_f64, 92_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[5], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 209.95_f64, 0.1_f64, 0_f64, 3487_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.9397_f64, 0_f64, 0_f64, 93_f64, 99_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[6], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 225.02_f64, 0.1_f64, 0_f64, 3600_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60605_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.9397_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 0.4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[75].get_regions()[7], &values);

    // ============================================================
    //  Fantasia0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.8_f64, 0_f64, 1012_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[76].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.8_f64, 0_f64, 1350_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 1_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[76].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.7_f64, 0_f64, 1462_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 74_f64, 81_f64, 0_f64, 127_f64, 1_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[76].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.8_f64, 0_f64, 1687_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 82_f64, 92_f64, 0_f64, 127_f64, 0.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[76].get_regions()[3], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 283.01_f64, 2.8_f64, 0_f64, 1800_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 3.2792_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[76].get_regions()[4], &values);

    // ============================================================
    //  Fantasia1
    // ============================================================
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 12.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 13.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[77].get_regions()[0], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 12.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 62_f64, 75_f64, 0_f64, 127_f64, 13.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[77].get_regions()[1], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 12.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 76_f64, 88_f64, 0_f64, 127_f64, 13.2_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[77].get_regions()[2], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.64805_f64, 12.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 89_f64, 101_f64, 0_f64, 127_f64, 25.6_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[77].get_regions()[3], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.64805_f64, 12.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 25.6_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[77].get_regions()[4], &values);

    // ============================================================
    //  Fantasia2
    // ============================================================
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.79416_f64, 10.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 61_f64, 89_f64, 0_f64, 127_f64, 19.3_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[78].get_regions()[0], &values);
    let values: [f64; 50] = [995187_f64, 1000066_f64, 995250_f64, 1000058_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.79416_f64, 10.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 47.5_f64, 3.2792_f64, 0_f64, 0_f64, 90_f64, 100_f64, 0_f64, 127_f64, 19.3_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[78].get_regions()[1], &values);

    // ============================================================
    //  Bass & Lead0
    // ============================================================
    let values: [f64; 50] = [1337219_f64, 1339935_f64, 1339392_f64, 1339927_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 7_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[0], &values);
    let values: [f64; 50] = [1335107_f64, 1337187_f64, 1336911_f64, 1337179_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 87.4_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 43_f64, 54_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[1], &values);
    let values: [f64; 50] = [1332938_f64, 1335075_f64, 1334933_f64, 1335067_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 81.1_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 55_f64, 65_f64, 0_f64, 127_f64, 8_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[2], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 75.8_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 66_f64, 74_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[3], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 70.6_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 75_f64, 81_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[4], &values);
    let values: [f64; 50] = [1330397_f64, 1330519_f64, 1330488_f64, 1330511_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 66.4_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 82_f64, 98_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[5], &values);
    let values: [f64; 50] = [1330050_f64, 1330365_f64, 1330347_f64, 1330357_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, -2.7_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 62.2_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 9.7_f64, 0.00097656_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[79].get_regions()[6], &values);

    // ============================================================
    //  Bass & Lead1
    // ============================================================
    let values: [f64; 50] = [1337219_f64, 1339935_f64, 1339392_f64, 1339927_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 4.5_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[0], &values);
    let values: [f64; 50] = [1335107_f64, 1337187_f64, 1336911_f64, 1337179_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 4.5_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 88.4_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 43_f64, 54_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[1], &values);
    let values: [f64; 50] = [1332938_f64, 1335075_f64, 1334933_f64, 1335067_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 4.5_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 83.2_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 55_f64, 65_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[2], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 4.6_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 76.9_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 66_f64, 74_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[3], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 620.12_f64, 4.5_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 70.6_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 75_f64, 81_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[4], &values);
    let values: [f64; 50] = [1330397_f64, 1330519_f64, 1330488_f64, 1330511_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 4.5_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 65.3_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 82_f64, 98_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -47_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[5], &values);
    let values: [f64; 50] = [1330050_f64, 1330365_f64, 1330347_f64, 1330357_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 620.12_f64, 4.5_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 3.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 61.1_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[80].get_regions()[6], &values);

    // ============================================================
    //  5th Saw Wave0
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 371.93_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[81].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[81].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 88.4_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 74_f64, 80_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[81].get_regions()[2], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 77.9_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 81_f64, 97_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[81].get_regions()[3], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 663.09_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 70.6_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 2.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[81].get_regions()[4], &values);

    // ============================================================
    //  5th Saw Wave1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 292.99_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[82].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 312.94_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.21_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[82].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 371.93_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 84.2_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 74_f64, 98_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[82].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 456.05_f64, 2.1_f64, 0_f64, 5062_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2901_f64, 79_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 2.3_f64, 1.2198_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 117_f64];
    instrument_util::check(&sf.get_instruments()[82].get_regions()[3], &values);

    // ============================================================
    //  Solo Vox0
    // ============================================================
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -112_f64, 3650.5_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.043011_f64, 100_f64, 0.043011_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 65_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[83].get_regions()[0], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -130_f64, 3650.5_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.039991_f64, 100_f64, 0.039991_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 66_f64, 79_f64, 0_f64, 127_f64, 4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[83].get_regions()[1], &values);
    let values: [f64; 50] = [1001481_f64, 1012620_f64, 1001595_f64, 1012612_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -130_f64, 3650.5_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.038009_f64, 100_f64, 0.038009_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 80_f64, 94_f64, 0_f64, 127_f64, 4_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[83].get_regions()[2], &values);
    let values: [f64; 50] = [1000098_f64, 1001449_f64, 1000250_f64, 1001441_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -130_f64, 3520.1_f64, 0_f64, 0_f64, 562_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.034996_f64, 100_f64, 0.034996_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.32197_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 95_f64, 108_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[83].get_regions()[3], &values);

    // ============================================================
    //  Solo Vox1
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0090002_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 65_f64, 0_f64, 127_f64, 13_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[84].get_regions()[0], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0090002_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.13798_f64, 28.198_f64, 1.3_f64, 0.29001_f64, 0_f64, 0_f64, 66_f64, 76_f64, 0_f64, 127_f64, 13_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[84].get_regions()[1], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.026006_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 77_f64, 86_f64, 0_f64, 127_f64, 11.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[84].get_regions()[2], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.026006_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0090002_f64, 0.00097656_f64, 2.5698_f64, 92.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 87_f64, 97_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[84].get_regions()[3], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.026006_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0090002_f64, 0.00097656_f64, 2.5698_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.27707_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 13.4_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[84].get_regions()[4], &values);

    // ============================================================
    //  Charang0
    // ============================================================
    let values: [f64; 50] = [1399317_f64, 1402968_f64, 1402693_f64, 1402960_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 65.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.39003_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 19.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[0], &values);
    let values: [f64; 50] = [1396660_f64, 1399285_f64, 1399077_f64, 1399277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.33994_f64, 0_f64, 0_f64, 43_f64, 47_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[1], &values);
    let values: [f64; 50] = [1394267_f64, 1396628_f64, 1396470_f64, 1396620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1069.8_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 61.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.25305_f64, 0_f64, 0_f64, 48_f64, 51_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[2], &values);
    let values: [f64; 50] = [1394267_f64, 1396628_f64, 1396470_f64, 1396620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 62.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.25305_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[3], &values);
    let values: [f64; 50] = [1391931_f64, 1394235_f64, 1394115_f64, 1394227_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 59_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 3.4_f64, 0.22401_f64, 0_f64, 0_f64, 53_f64, 56_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[4], &values);
    let values: [f64; 50] = [1389838_f64, 1391899_f64, 1391802_f64, 1391891_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1069.8_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 56.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 3.4_f64, 0.16997_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 18_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[5], &values);
    let values: [f64; 50] = [1387284_f64, 1389806_f64, 1389731_f64, 1389798_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 54.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.13197_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[6], &values);
    let values: [f64; 50] = [1384834_f64, 1387252_f64, 1387194_f64, 1387244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.13197_f64, 0_f64, 0_f64, 67_f64, 70_f64, 0_f64, 127_f64, 15_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[7], &values);
    let values: [f64; 50] = [1384834_f64, 1387252_f64, 1387194_f64, 1387244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 50.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 4.4_f64, 0.13197_f64, 0_f64, 0_f64, 71_f64, 72_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[8], &values);
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 48.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.11201_f64, 0_f64, 0_f64, 73_f64, 81_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[9], &values);
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 46.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 3.4_f64, 0.11201_f64, 0_f64, 0_f64, 82_f64, 90_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[10], &values);
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 41.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 3.4_f64, 0.11201_f64, 0_f64, 0_f64, 91_f64, 96_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[11], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 37_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 4.4_f64, 0.076019_f64, 0_f64, 0_f64, 97_f64, 104_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[12], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 32.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 4.4_f64, 0.076019_f64, 0_f64, 0_f64, 105_f64, 108_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[85].get_regions()[13], &values);

    // ============================================================
    //  Charang1
    // ============================================================
    let values: [f64; 50] = [1623239_f64, 1624656_f64, 1624421_f64, 1624648_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 965.23_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 24_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[0], &values);
    let values: [f64; 50] = [1621624_f64, 1623207_f64, 1623032_f64, 1623199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 965.23_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 48_f64, 57_f64, 0_f64, 127_f64, 24_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[1], &values);
    let values: [f64; 50] = [1620047_f64, 1621592_f64, 1621458_f64, 1621584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 965.23_f64, 0_f64, 0_f64, 3262_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 58_f64, 71_f64, 0_f64, 127_f64, 24_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[2], &values);
    let values: [f64; 50] = [1618884_f64, 1620015_f64, 1619918_f64, 1620007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 965.23_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 72_f64, 78_f64, 0_f64, 127_f64, 24_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[3], &values);
    let values: [f64; 50] = [1617812_f64, 1618660_f64, 1618599_f64, 1618652_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 999.27_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 80_f64, 93_f64, 0_f64, 127_f64, 24_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[4], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 999.27_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 94_f64, 101_f64, 0_f64, 127_f64, 24_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 110_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[5], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 66_f64, 999.27_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.5206_f64, 26.5_f64, 0.089985_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 24_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 110_f64];
    instrument_util::check(&sf.get_instruments()[86].get_regions()[6], &values);

    // ============================================================
    //  Chiffer Lead0
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 5488.6_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 25.4_f64, 0.18903_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 5.4_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[0], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 5879.2_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 25.4_f64, 0.18903_f64, 0_f64, 0_f64, 43_f64, 53_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[1], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 5879.2_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 26.5_f64, 0.18903_f64, 0_f64, 0_f64, 54_f64, 61_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[2], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 5879.2_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 27.5_f64, 0.18903_f64, 0_f64, 0_f64, 62_f64, 68_f64, 0_f64, 127_f64, 3.9_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[3], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 6079.5_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 28.6_f64, 0.18903_f64, 0_f64, 0_f64, 69_f64, 76_f64, 0_f64, 127_f64, 3.9_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[4], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 6079.5_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.1102_f64, 29.6_f64, 0.18903_f64, 0_f64, 0_f64, 77_f64, 84_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[5], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 6290.2_f64, 1.2_f64, 0_f64, 1012_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.1102_f64, 30.7_f64, 0.18903_f64, 0_f64, 0_f64, 85_f64, 93_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[6], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1013_f64, 6290.2_f64, 1.2_f64, 0_f64, 562_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 1.16_f64, 33.8_f64, 0.18903_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 10.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[87].get_regions()[7], &values);

    // ============================================================
    //  Chiffer Lead1
    // ============================================================
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 2475_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 100_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[0], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 100_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 43_f64, 53_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[1], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 100_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 54_f64, 62_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[2], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 100_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 63_f64, 68_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[3], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 98.9_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 69_f64, 77_f64, 0_f64, 127_f64, 5.4_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[4], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 96.8_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 78_f64, 86_f64, 0_f64, 127_f64, 3.9_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[5], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.80618_f64, 94.7_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 87_f64, 92_f64, 0_f64, 127_f64, 2.4_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[6], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.3_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.77916_f64, 92.6_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[88].get_regions()[7], &values);

    // ============================================================
    //  Synth Calliope0
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 2.5698_f64, 0.2_f64, 0.18903_f64, 0_f64, 0_f64, 0_f64, 76_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[89].get_regions()[0], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.0197_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 2.5698_f64, 0.2_f64, 0.18903_f64, 0_f64, 0_f64, 77_f64, 97_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 43_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[89].get_regions()[1], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 2.5698_f64, 0.2_f64, 0.18903_f64, 0_f64, 0_f64, 98_f64, 102_f64, 0_f64, 127_f64, 9.7_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[89].get_regions()[2], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.025005_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.13798_f64, 2.5698_f64, 0.2_f64, 0.18903_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 12_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[89].get_regions()[3], &values);

    // ============================================================
    //  Synth Calliope1
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 50_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[0], &values);
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 0_f64, 0_f64, 1687_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 51_f64, 59_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[1], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 51.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.30495_f64, 0_f64, 0_f64, 60_f64, 65_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[2], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 66_f64, 73_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[3], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 47.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 74_f64, 78_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[4], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 2362_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 79_f64, 85_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[5], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 870.92_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 43.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 86_f64, 93_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[6], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 41.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 94_f64, 98_f64, 0_f64, 127_f64, 2.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[7], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3037_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 38_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 99_f64, 102_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[8], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.1102_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.00097656_f64, 1.8596_f64, 0_f64, 0.27707_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 3_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[90].get_regions()[9], &values);

    // ============================================================
    //  Saw Wave0
    // ============================================================
    let values: [f64; 50] = [1081095_f64, 1081438_f64, 1081096_f64, 1081433_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 668.09_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.7294_f64, 82.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 36_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[0], &values);
    let values: [f64; 50] = [1080889_f64, 1081063_f64, 1080890_f64, 1081059_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 749.9_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.4588_f64, 71.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 42_f64, 54_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[1], &values);
    let values: [f64; 50] = [1080767_f64, 1080857_f64, 1080768_f64, 1080852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 794.95_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.4588_f64, 61.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 55_f64, 66_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[2], &values);
    let values: [f64; 50] = [1080687_f64, 1080735_f64, 1080688_f64, 1080730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 891.79_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.2208_f64, 50.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[3], &values);
    let values: [f64; 50] = [1080628_f64, 1080655_f64, 1080629_f64, 1080650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 891.79_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.2208_f64, 40.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 79_f64, 90_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[4], &values);
    let values: [f64; 50] = [1080580_f64, 1080596_f64, 1080581_f64, 1080592_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.85_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.211_f64, 29.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 91_f64, 100_f64, 0_f64, 127_f64, 16.2_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[5], &values);
    let values: [f64; 50] = [1330050_f64, 1330365_f64, 1330347_f64, 1330357_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.85_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.9793_f64, 19.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.38511_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[91].get_regions()[6], &values);

    // ============================================================
    //  Saw Wave1
    // ============================================================
    let values: [f64; 50] = [1081095_f64, 1081438_f64, 1081096_f64, 1081433_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 28_f64, 2779.4_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 36_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[0], &values);
    let values: [f64; 50] = [1080889_f64, 1081063_f64, 1080890_f64, 1081059_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 28_f64, 2870.8_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 42_f64, 54_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[1], &values);
    let values: [f64; 50] = [1080767_f64, 1080857_f64, 1080768_f64, 1080852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 2970.3_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 55_f64, 66_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[2], &values);
    let values: [f64; 50] = [1080687_f64, 1080735_f64, 1080688_f64, 1080730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3080.4_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[3], &values);
    let values: [f64; 50] = [1080628_f64, 1080655_f64, 1080629_f64, 1080650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3080.4_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 79_f64, 90_f64, 0_f64, 127_f64, 17.1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[4], &values);
    let values: [f64; 50] = [1080580_f64, 1080596_f64, 1080581_f64, 1080592_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3179.8_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 91_f64, 100_f64, 0_f64, 127_f64, 14.8_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[5], &values);
    let values: [f64; 50] = [1330050_f64, 1330365_f64, 1330347_f64, 1330357_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3290.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 26.6_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.10701_f64, 100_f64, 0.12696_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 13.2_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[92].get_regions()[6], &values);

    // ============================================================
    //  Square Wave0
    // ============================================================
    let values: [f64; 50] = [1013199_f64, 1013547_f64, 1013202_f64, 1013539_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 9.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 23_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[0], &values);
    let values: [f64; 50] = [1013199_f64, 1013547_f64, 1013202_f64, 1013539_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 9.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 43_f64, 54_f64, 0_f64, 127_f64, 23_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[1], &values);
    let values: [f64; 50] = [1012988_f64, 1013167_f64, 1012991_f64, 1013159_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 9.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 55_f64, 66_f64, 0_f64, 127_f64, 23_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[2], &values);
    let values: [f64; 50] = [1012861_f64, 1012956_f64, 1012864_f64, 1012948_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 2.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 22.2_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[3], &values);
    let values: [f64; 50] = [1012776_f64, 1012829_f64, 1012779_f64, 1012821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 79_f64, 90_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[4], &values);
    let values: [f64; 50] = [1012720_f64, 1012744_f64, 1012723_f64, 1012736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 91_f64, 102_f64, 0_f64, 127_f64, 18.5_f64, 0_f64, -34_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[5], &values);
    let values: [f64; 50] = [1012652_f64, 1012688_f64, 1012670_f64, 1012680_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3770.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.38511_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 18.5_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[93].get_regions()[6], &values);

    // ============================================================
    //  Square Wave1
    // ============================================================
    let values: [f64; 50] = [1013199_f64, 1013547_f64, 1013202_f64, 1013539_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 0_f64, 42_f64, 0_f64, 127_f64, 23_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[0], &values);
    let values: [f64; 50] = [1013199_f64, 1013547_f64, 1013202_f64, 1013539_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 43_f64, 54_f64, 0_f64, 127_f64, 23_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[1], &values);
    let values: [f64; 50] = [1012988_f64, 1013167_f64, 1012991_f64, 1013159_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 55_f64, 66_f64, 0_f64, 127_f64, 23_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[2], &values);
    let values: [f64; 50] = [1012861_f64, 1012956_f64, 1012864_f64, 1012948_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3520.1_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 22.2_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[3], &values);
    let values: [f64; 50] = [1012776_f64, 1012829_f64, 1012779_f64, 1012821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3650.5_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 79_f64, 90_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[4], &values);
    let values: [f64; 50] = [1012720_f64, 1012744_f64, 1012723_f64, 1012736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3770.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 91_f64, 102_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, -29_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[5], &values);
    let values: [f64; 50] = [1012652_f64, 1012688_f64, 1012670_f64, 1012680_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19_f64, 3770.6_f64, 0_f64, 0_f64, 787_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 3.4_f64, 0.38511_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 19.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[94].get_regions()[6], &values);

    // ============================================================
    //  Ocarina
    // ============================================================
    let values: [f64; 50] = [1013960_f64, 1016807_f64, 1015398_f64, 1016799_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3937_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.014997_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.60991_f64, 29.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.5_f64, 0.32197_f64, 0_f64, 0_f64, 0_f64, 78_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[95].get_regions()[0], &values);
    let values: [f64; 50] = [1013960_f64, 1016807_f64, 1015398_f64, 1016799_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3937_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.014997_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 27.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.5_f64, 0.32197_f64, 0_f64, 0_f64, 79_f64, 101_f64, 0_f64, 127_f64, 1_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[95].get_regions()[1], &values);
    let values: [f64; 50] = [1013579_f64, 1013928_f64, 1013910_f64, 1013920_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 3487_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.014997_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.010998_f64, 0.00097656_f64, 1.7301_f64, 3.5_f64, 0.32197_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[95].get_regions()[2], &values);

    // ============================================================
    //  Whistle
    // ============================================================
    let values: [f64; 50] = [116541_f64, 122400_f64, 117979_f64, 119380_f64, 0_f64, 0_f64, -3957_f64, -3012_f64, 9_f64, 0_f64, -177_f64, 2970.3_f64, 0_f64, 56_f64, 0_f64, 0.9_f64, 0_f64, 7_f64, 0_f64, 0.39593_f64, 5.3786_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.052012_f64, 100_f64, 0.049008_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.48492_f64, 0_f64, 0_f64, 0_f64, 78_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[96].get_regions()[0], &values);
    let values: [f64; 50] = [116541_f64, 122400_f64, 116872_f64, 116882_f64, 0_f64, 0_f64, -5064_f64, -5510_f64, 0_f64, 0_f64, -177_f64, 2669.3_f64, 0_f64, 56_f64, 0_f64, 0.9_f64, 0_f64, 7_f64, 0_f64, 0.39593_f64, 5.3786_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.050009_f64, 100_f64, 0.050009_f64, 0_f64, 0_f64, 0.00097656_f64, 0.16099_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.48492_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[96].get_regions()[1], &values);

    // ============================================================
    //  Shakuhachi
    // ============================================================
    let values: [f64; 50] = [366940_f64, 382314_f64, 382281_f64, 382309_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 1.6_f64, 0_f64, 0_f64, 0_f64, 1.3302_f64, 5.999_f64, 1.3302_f64, 4.7204_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 1.3_f64, 0.98396_f64, 0_f64, 0_f64, 21_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[97].get_regions()[0], &values);

    // ============================================================
    //  Bottle Chiff0
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 600_f64, 3349.5_f64, 4_f64, 0_f64, 1950_f64, 0.1_f64, 0_f64, 0_f64, 0_f64, 0.034996_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.029994_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.047012_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 76_f64, 0_f64, 127_f64, 13_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[98].get_regions()[0], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 600_f64, 2819.8_f64, 4_f64, 0_f64, 1800_f64, 0.1_f64, 0_f64, 0_f64, 0_f64, 0.034996_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.028002_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 77_f64, 90_f64, 0_f64, 127_f64, 17.6_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[98].get_regions()[1], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 525_f64, 2919.3_f64, 4.2_f64, 0_f64, 1800_f64, 0.1_f64, 0_f64, 0_f64, 0_f64, 0.034996_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.027001_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 91_f64, 97_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[98].get_regions()[2], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 450_f64, 4109.4_f64, 4.5_f64, 0_f64, 1912_f64, 0.1_f64, 0_f64, 0_f64, 0_f64, 0.034996_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.047012_f64, 0.00097656_f64, 19.801_f64, 0.2_f64, 0.22401_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[98].get_regions()[3], &values);

    // ============================================================
    //  Bottle Chiff1
    // ============================================================
    let values: [f64; 50] = [1016839_f64, 1019561_f64, 1016842_f64, 1019554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 4500_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 2.3_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 76_f64, 0_f64, 127_f64, 12.9_f64, 0_f64, 16_f64, 0_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[99].get_regions()[0], &values);
    let values: [f64; 50] = [1016839_f64, 1019561_f64, 1016842_f64, 1019554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 842.23_f64, 0_f64, 0_f64, 4500_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.00097656_f64, 2.3_f64, 0.22401_f64, 0_f64, 0_f64, 77_f64, 103_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, 16_f64, 0_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[99].get_regions()[1], &values);

    // ============================================================
    //  Pan Flute
    // ============================================================
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.3_f64, 0_f64, 4387_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.029994_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.21601_f64, 21.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.13798_f64, 1.4398_f64, 0_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 58_f64, 0_f64, 127_f64, 12_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[100].get_regions()[0], &values);
    let values: [f64; 50] = [1023184_f64, 1028410_f64, 1025000_f64, 1028406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.3_f64, 0_f64, 4387_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.029994_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.23299_f64, 11.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.13798_f64, 1.4398_f64, 0_f64, 0.22401_f64, 0_f64, 0_f64, 59_f64, 76_f64, 0_f64, 127_f64, 12_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[100].get_regions()[1], &values);
    let values: [f64; 50] = [1019918_f64, 1023152_f64, 1020914_f64, 1023148_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.3_f64, 0_f64, 4500_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.029994_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.20901_f64, 0.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.13798_f64, 1.4398_f64, 0_f64, 0.22401_f64, 0_f64, 0_f64, 77_f64, 97_f64, 0_f64, 127_f64, 12_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[100].get_regions()[2], &values);
    let values: [f64; 50] = [1019593_f64, 1019886_f64, 1019876_f64, 1019881_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.3_f64, 0_f64, 4500_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.029994_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.20901_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.13798_f64, 1.4398_f64, 0_f64, 0.22401_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[100].get_regions()[3], &values);

    // ============================================================
    //  Recorder
    // ============================================================
    let values: [f64; 50] = [1028923_f64, 1031143_f64, 1031082_f64, 1031135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0.5_f64, 0_f64, 7_f64, 0_f64, 0.37393_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.60991_f64, 20.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 2.4396_f64, 2.3_f64, 0.13798_f64, 0_f64, 0_f64, 0_f64, 96_f64, 0_f64, 127_f64, 9_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[101].get_regions()[0], &values);
    let values: [f64; 50] = [1028442_f64, 1028891_f64, 1028872_f64, 1028883_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0.5_f64, 0_f64, 7_f64, 0_f64, 0.37393_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.60991_f64, 9.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 2.4396_f64, 2.3_f64, 0.13798_f64, 0_f64, 0_f64, 97_f64, 107_f64, 0_f64, 127_f64, 9_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[101].get_regions()[1], &values);
    let values: [f64; 50] = [1031175_f64, 1032513_f64, 1032493_f64, 1032505_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0.5_f64, 0_f64, 7_f64, 0_f64, 0.37393_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 2.4396_f64, 2.3_f64, 0.13798_f64, 0_f64, 0_f64, 108_f64, 108_f64, 0_f64, 127_f64, 9_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[101].get_regions()[2], &values);

    // ============================================================
    //  Piccolo
    // ============================================================
    let values: [f64; 50] = [1038150_f64, 1039862_f64, 1039825_f64, 1039854_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.96985_f64, 18.1_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 1.3_f64, 0.32798_f64, 0_f64, 0_f64, 0_f64, 88_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -44_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[0], &values);
    let values: [f64; 50] = [1036275_f64, 1038118_f64, 1038086_f64, 1038110_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 19.1_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 1.3_f64, 0.32798_f64, 0_f64, 0_f64, 89_f64, 92_f64, 0_f64, 127_f64, 11_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[1], &values);
    let values: [f64; 50] = [1034267_f64, 1036243_f64, 1036216_f64, 1036235_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 25.4_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 1.3_f64, 0.32798_f64, 0_f64, 0_f64, 93_f64, 96_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[2], &values);
    let values: [f64; 50] = [1032545_f64, 1034235_f64, 1034212_f64, 1034227_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.8971_f64, 21.2_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 1.3_f64, 0.32798_f64, 0_f64, 0_f64, 97_f64, 99_f64, 0_f64, 127_f64, 10_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 102_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[3], &values);
    let values: [f64; 50] = [1031175_f64, 1032513_f64, 1032493_f64, 1032505_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 17_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 1.3_f64, 0.32798_f64, 0_f64, 0_f64, 100_f64, 104_f64, 0_f64, 127_f64, 10_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[4], &values);
    let values: [f64; 50] = [1031175_f64, 1032513_f64, 1032493_f64, 1032505_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.43603_f64, 5.3291_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 49.6_f64, 0.86404_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 1.3_f64, 0.30993_f64, 0_f64, 0_f64, 105_f64, 108_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[102].get_regions()[5], &values);

    // ============================================================
    //  Clarinet
    // ============================================================
    let values: [f64; 50] = [1049285_f64, 1051009_f64, 1050867_f64, 1051001_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[0], &values);
    let values: [f64; 50] = [1049285_f64, 1051009_f64, 1050867_f64, 1051001_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 48_f64, 58_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[1], &values);
    let values: [f64; 50] = [1047534_f64, 1049253_f64, 1049167_f64, 1049245_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 59_f64, 63_f64, 0_f64, 127_f64, 7.9_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[2], &values);
    let values: [f64; 50] = [1046362_f64, 1047502_f64, 1047441_f64, 1047494_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 902.15_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 64_f64, 68_f64, 0_f64, 127_f64, 9.8_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[3], &values);
    let values: [f64; 50] = [1045083_f64, 1046330_f64, 1046275_f64, 1046322_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 69_f64, 72_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[4], &values);
    let values: [f64; 50] = [1043748_f64, 1045051_f64, 1045003_f64, 1045043_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 33.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 73_f64, 75_f64, 0_f64, 127_f64, 7.9_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[5], &values);
    let values: [f64; 50] = [1042500_f64, 1043716_f64, 1043674_f64, 1043708_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 28.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 76_f64, 79_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[6], &values);
    let values: [f64; 50] = [1040521_f64, 1042468_f64, 1042429_f64, 1042460_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 21.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 80_f64, 96_f64, 0_f64, 127_f64, 6.4_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[7], &values);
    let values: [f64; 50] = [1039894_f64, 1040489_f64, 1040471_f64, 1040481_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 17_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 2.3_f64, 0.35994_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 10.9_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[103].get_regions()[8], &values);

    // ============================================================
    //  Bassoon
    // ============================================================
    let values: [f64; 50] = [1062941_f64, 1065070_f64, 1064840_f64, 1065062_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 79_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 46_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[0], &values);
    let values: [f64; 50] = [1060862_f64, 1062909_f64, 1062724_f64, 1062901_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 76.9_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 47_f64, 50_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -12_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[1], &values);
    let values: [f64; 50] = [1058590_f64, 1060830_f64, 1060681_f64, 1060822_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 74.8_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 51_f64, 54_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[2], &values);
    let values: [f64; 50] = [1055769_f64, 1058558_f64, 1058438_f64, 1058550_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 72.7_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.19502_f64, 0_f64, 0_f64, 55_f64, 58_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[3], &values);
    let values: [f64; 50] = [1053770_f64, 1055737_f64, 1055639_f64, 1055729_f64, 0_f64, 0_f64, 0_f64, 0_f64, 11_f64, 0_f64, 0_f64, 1669.9_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 70.6_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 59_f64, 62_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[4], &values);
    let values: [f64; 50] = [1052007_f64, 1053738_f64, 1053658_f64, 1053730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1610.2_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 66.4_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 63_f64, 77_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[5], &values);
    let values: [f64; 50] = [1052007_f64, 1053738_f64, 1053658_f64, 1053730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1559.9_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.014997_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 53.8_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 78_f64, 89_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[6], &values);
    let values: [f64; 50] = [1051565_f64, 1051975_f64, 1051950_f64, 1051967_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 43.3_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 90_f64, 99_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 100_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[7], &values);
    let values: [f64; 50] = [1051041_f64, 1051533_f64, 1051515_f64, 1051525_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1220.3_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.53713_f64, 5.2104_f64, 0.0099978_f64, 5.2104_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 34.9_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 1.3_f64, 0.22401_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 10.9_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[104].get_regions()[8], &values);

    // ============================================================
    //  English Horn
    // ============================================================
    let values: [f64; 50] = [1077816_f64, 1079909_f64, 1079758_f64, 1079901_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[0], &values);
    let values: [f64; 50] = [1075613_f64, 1077784_f64, 1077672_f64, 1077776_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 55_f64, 57_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -33_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[1], &values);
    let values: [f64; 50] = [1073954_f64, 1075581_f64, 1075480_f64, 1075573_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 93.7_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 58_f64, 59_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -26_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[2], &values);
    let values: [f64; 50] = [1072468_f64, 1073922_f64, 1073831_f64, 1073914_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 90.5_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 60_f64, 61_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[3], &values);
    let values: [f64; 50] = [1070879_f64, 1072436_f64, 1072354_f64, 1072428_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 86.3_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 62_f64, 64_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[4], &values);
    let values: [f64; 50] = [1069402_f64, 1070847_f64, 1070780_f64, 1070839_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 83.2_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 65_f64, 68_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[5], &values);
    let values: [f64; 50] = [1067911_f64, 1069370_f64, 1069309_f64, 1069362_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 76.9_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 69_f64, 71_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[6], &values);
    let values: [f64; 50] = [1066619_f64, 1067879_f64, 1067829_f64, 1067871_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 71.6_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 72_f64, 75_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[7], &values);
    let values: [f64; 50] = [1065102_f64, 1066587_f64, 1066545_f64, 1066579_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 67.4_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 76_f64, 81_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[8], &values);
    let values: [f64; 50] = [1065102_f64, 1066587_f64, 1066545_f64, 1066579_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 62.2_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 82_f64, 88_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[9], &values);
    let values: [f64; 50] = [1065102_f64, 1066587_f64, 1066545_f64, 1066579_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 59_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 89_f64, 96_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[10], &values);
    let values: [f64; 50] = [1079941_f64, 1080358_f64, 1080340_f64, 1080350_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1910.5_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.50992_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 56.9_f64, 0.55287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.8795_f64, 1.3_f64, 0.35994_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[105].get_regions()[11], &values);

    // ============================================================
    //  Oboe (Orch)
    // ============================================================
    let values: [f64; 50] = [382346_f64, 409355_f64, 404485_f64, 409350_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 36_f64, 63_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[0], &values);
    let values: [f64; 50] = [409387_f64, 435737_f64, 431255_f64, 435732_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 64_f64, 68_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[1], &values);
    let values: [f64; 50] = [435769_f64, 454895_f64, 450290_f64, 454890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 69_f64, 73_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[2], &values);
    let values: [f64; 50] = [454927_f64, 480476_f64, 476381_f64, 480471_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 74_f64, 78_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[3], &values);
    let values: [f64; 50] = [480508_f64, 504073_f64, 499809_f64, 504068_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 79_f64, 83_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[4], &values);
    let values: [f64; 50] = [504105_f64, 524199_f64, 519553_f64, 524194_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 5.999_f64, 0.0099978_f64, 4.2493_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 39.993_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 84_f64, 89_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[5], &values);
    let values: [f64; 50] = [524231_f64, 532789_f64, 531593_f64, 532770_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.88884_f64, 5.999_f64, 0.88884_f64, 5.999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 12.597_f64, 17.5_f64, 0.58304_f64, 0_f64, 0_f64, 90_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[106].get_regions()[6], &values);

    // ============================================================
    //  French Horns0
    // ============================================================
    let values: [f64; 50] = [2181060_f64, 2195645_f64, 2190284_f64, 2195642_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00099997_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 0_f64, 52_f64, 0_f64, 127_f64, 9_f64, 0_f64, 17_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[107].get_regions()[0], &values);
    let values: [f64; 50] = [2195677_f64, 2208863_f64, 2202979_f64, 2208855_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00099997_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 53_f64, 59_f64, 0_f64, 127_f64, 5.2_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[107].get_regions()[1], &values);
    let values: [f64; 50] = [2208895_f64, 2223299_f64, 2217553_f64, 2223296_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00099997_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 60_f64, 64_f64, 0_f64, 127_f64, 3_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[107].get_regions()[2], &values);
    let values: [f64; 50] = [2223331_f64, 2239107_f64, 2232922_f64, 2239105_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00099997_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00099997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 65_f64, 117_f64, 0_f64, 127_f64, 0_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[107].get_regions()[3], &values);

    // ============================================================
    //  French Horns1
    // ============================================================
    let values: [f64; 50] = [2239139_f64, 2258022_f64, 2248397_f64, 2257990_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 0_f64, 50_f64, 0_f64, 127_f64, 32.4_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[108].get_regions()[0], &values);
    let values: [f64; 50] = [2258054_f64, 2275244_f64, 2264615_f64, 2275193_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 51_f64, 56_f64, 0_f64, 127_f64, 12.6_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[108].get_regions()[1], &values);
    let values: [f64; 50] = [2275276_f64, 2291183_f64, 2281306_f64, 2291138_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 57_f64, 63_f64, 0_f64, 127_f64, 29.8_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[108].get_regions()[2], &values);
    let values: [f64; 50] = [2291215_f64, 2306941_f64, 2298023_f64, 2306909_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 64_f64, 69_f64, 0_f64, 127_f64, 20_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[108].get_regions()[3], &values);
    let values: [f64; 50] = [2306973_f64, 2324357_f64, 2313440_f64, 2324310_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7998.8_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 23_f64, 10_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.37_f64, 0_f64, 0_f64, 70_f64, 127_f64, 0_f64, 127_f64, 15.2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[108].get_regions()[4], &values);

    // ============================================================
    //  French Horns2
    // ============================================================
    let values: [f64; 50] = [2324389_f64, 2327387_f64, 2327303_f64, 2327383_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 79_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 3_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[0], &values);
    let values: [f64; 50] = [2324389_f64, 2327387_f64, 2327303_f64, 2327383_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 73.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 42_f64, 52_f64, 0_f64, 127_f64, 3_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[1], &values);
    let values: [f64; 50] = [2327419_f64, 2330812_f64, 2330744_f64, 2330807_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 53_f64, 55_f64, 0_f64, 127_f64, 3_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[2], &values);
    let values: [f64; 50] = [2330844_f64, 2334040_f64, 2333985_f64, 2334035_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 56_f64, 60_f64, 0_f64, 127_f64, 3_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[3], &values);
    let values: [f64; 50] = [2334072_f64, 2336026_f64, 2335982_f64, 2336022_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 59_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 61_f64, 66_f64, 0_f64, 127_f64, 3_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[4], &values);
    let values: [f64; 50] = [2336058_f64, 2338425_f64, 2338396_f64, 2338421_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 55.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 67_f64, 77_f64, 0_f64, 127_f64, 3_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[5], &values);
    let values: [f64; 50] = [2336058_f64, 2338425_f64, 2338396_f64, 2338421_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 51.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 78_f64, 96_f64, 0_f64, 127_f64, 3_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[6], &values);
    let values: [f64; 50] = [2338457_f64, 2338660_f64, 2338650_f64, 2338656_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 17_f64, -8.8_f64, 0.0099978_f64, 2.5194_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 44.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 1.3_f64, 0.64283_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[109].get_regions()[7], &values);

    // ============================================================
    //  French Horns3
    // ============================================================
    let values: [f64; 50] = [2176662_f64, 2177969_f64, 2177813_f64, 2177965_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.24302_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 0_f64, 33_f64, 0_f64, 127_f64, 20.2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[0], &values);
    let values: [f64; 50] = [2174216_f64, 2176630_f64, 2176489_f64, 2176626_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15204_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 34_f64, 40_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[1], &values);
    let values: [f64; 50] = [2172085_f64, 2174184_f64, 2174071_f64, 2174179_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -9.6_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.076019_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 41_f64, 44_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[2], &values);
    let values: [f64; 50] = [2169557_f64, 2172053_f64, 2171962_f64, 2172048_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 45_f64, 53_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[3], &values);
    let values: [f64; 50] = [2179614_f64, 2181028_f64, 2180988_f64, 2181024_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1610.2_f64, 0_f64, 0_f64, 675_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.034996_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 54_f64, 61_f64, 0_f64, 127_f64, 23.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[4], &values);
    let values: [f64; 50] = [2179614_f64, 2181028_f64, 2180988_f64, 2181024_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1610.2_f64, 0_f64, 0_f64, 675_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.034996_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.37696_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 62_f64, 67_f64, 0_f64, 127_f64, 23.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[5], &values);
    let values: [f64; 50] = [2178001_f64, 2179582_f64, 2179551_f64, 2179578_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1610.2_f64, 0_f64, 0_f64, 675_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.034996_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.37696_f64, 82.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 68_f64, 72_f64, 0_f64, 127_f64, 23.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[6], &values);
    let values: [f64; 50] = [1178991_f64, 1179176_f64, 1179166_f64, 1179172_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.034996_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.061002_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 73_f64, 96_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[7], &values);
    let values: [f64; 50] = [1178991_f64, 1179176_f64, 1179166_f64, 1179172_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3179.8_f64, 0_f64, 0_f64, 225_f64, 0_f64, 0_f64, 17_f64, -10_f64, 0.034996_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.061002_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 0_f64, 0.32197_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[110].get_regions()[8], &values);

    // ============================================================
    //  Synth Brass 2
    // ============================================================
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.30993_f64, 0.00097656_f64, 1.7301_f64, 92.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.5279_f64, 0_f64, 0_f64, 0_f64, 43_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[0], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.30495_f64, 0.00097656_f64, 0.83412_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 44_f64, 52_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[1], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.27707_f64, 0.00097656_f64, 0.80618_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 53_f64, 60_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[2], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.25305_f64, 0.00097656_f64, 0.75393_f64, 97.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 61_f64, 68_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[3], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.21601_f64, 0.00097656_f64, 0.67987_f64, 93.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 69_f64, 77_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[4], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 2937_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.18903_f64, 0.00097656_f64, 0.60991_f64, 90.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 78_f64, 86_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[5], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 3050_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.16099_f64, 0.00097656_f64, 0.55287_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 87_f64, 93_f64, 0_f64, 127_f64, 3_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[6], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 3050_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.13197_f64, 0.00097656_f64, 0.48492_f64, 87.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 94_f64, 100_f64, 0_f64, 127_f64, 2.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[7], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 3612_f64, 0_f64, 25.8_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 0.46598_f64, 85.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 2.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[111].get_regions()[8], &values);

    // ============================================================
    //  Synth Brass 10
    // ============================================================
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.7301_f64, 93.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.5279_f64, 0_f64, 0_f64, 0_f64, 43_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[0], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 91.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 44_f64, 52_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[1], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 53_f64, 60_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[2], &values);
    let values: [f64; 50] = [1095211_f64, 1108765_f64, 1098379_f64, 1108760_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 87.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 61_f64, 68_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[3], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 85.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 69_f64, 77_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[4], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 78_f64, 86_f64, 0_f64, 127_f64, 8.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[5], &values);
    let values: [f64; 50] = [1081470_f64, 1095179_f64, 1084222_f64, 1095175_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 81.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.55287_f64, 0_f64, 0_f64, 87_f64, 93_f64, 0_f64, 127_f64, 4.9_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[6], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5096_f64, 79_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.49312_f64, 0_f64, 0_f64, 94_f64, 100_f64, 0_f64, 127_f64, 8.4_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[7], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 76.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 1.6702_f64, 0_f64, 0.49312_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[112].get_regions()[8], &values);

    // ============================================================
    //  Synth Brass 11
    // ============================================================
    let values: [f64; 50] = [1081095_f64, 1081438_f64, 1081096_f64, 1081433_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.5601_f64, 87.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 0_f64, 43_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 36_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[0], &values);
    let values: [f64; 50] = [1080889_f64, 1081063_f64, 1080890_f64, 1081059_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.5096_f64, 85.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 44_f64, 54_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[1], &values);
    let values: [f64; 50] = [1080767_f64, 1080857_f64, 1080768_f64, 1080852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.6096_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 55_f64, 61_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[2], &values);
    let values: [f64; 50] = [1080767_f64, 1080857_f64, 1080768_f64, 1080852_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.5601_f64, 81.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[3], &values);
    let values: [f64; 50] = [1080687_f64, 1080735_f64, 1080688_f64, 1080730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.038009_f64, 0.00097656_f64, 1.5601_f64, 79_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 67_f64, 72_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[4], &values);
    let values: [f64; 50] = [1080687_f64, 1080735_f64, 1080688_f64, 1080730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.036001_f64, 0.00097656_f64, 1.5601_f64, 76.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 73_f64, 78_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[5], &values);
    let values: [f64; 50] = [1080628_f64, 1080655_f64, 1080629_f64, 1080650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1.5601_f64, 73.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.48492_f64, 0_f64, 0_f64, 79_f64, 89_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[6], &values);
    let values: [f64; 50] = [1080580_f64, 1080596_f64, 1080581_f64, 1080592_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1.5601_f64, 71.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.45797_f64, 0_f64, 0_f64, 90_f64, 100_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[7], &values);
    let values: [f64; 50] = [1080390_f64, 1080548_f64, 1080538_f64, 1080543_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 1.8_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1.5601_f64, 69.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 1.7301_f64, 3.4_f64, 0.45797_f64, 0_f64, 0_f64, 101_f64, 108_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[113].get_regions()[8], &values);

    // ============================================================
    //  Brass
    // ============================================================
    let values: [f64; 50] = [1129037_f64, 1143108_f64, 1133254_f64, 1143104_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.59805_f64, 6.4197_f64, 27.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.8971_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 0_f64, 65_f64, 0_f64, 127_f64, 7_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[0], &values);
    let values: [f64; 50] = [1129037_f64, 1143108_f64, 1133254_f64, 1143104_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.59805_f64, 4.4898_f64, 27.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.8971_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 66_f64, 70_f64, 0_f64, 127_f64, 7_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[1], &values);
    let values: [f64; 50] = [1118747_f64, 1129005_f64, 1121891_f64, 1129001_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.59805_f64, 4.4898_f64, 27.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.8971_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 71_f64, 72_f64, 0_f64, 127_f64, 7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[2], &values);
    let values: [f64; 50] = [1118747_f64, 1129005_f64, 1121891_f64, 1129001_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 4.4898_f64, 26.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.86404_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 73_f64, 75_f64, 0_f64, 127_f64, 7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[3], &values);
    let values: [f64; 50] = [1108797_f64, 1118715_f64, 1111336_f64, 1118711_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 4.4898_f64, 25.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.86404_f64, 2.3_f64, 0.25305_f64, 0_f64, 0_f64, 76_f64, 86_f64, 0_f64, 127_f64, 7_f64, 0_f64, 22_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[4], &values);
    let values: [f64; 50] = [1108797_f64, 1118715_f64, 1111336_f64, 1118711_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.41394_f64, 4.4898_f64, 22.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.86404_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 87_f64, 93_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[5], &values);
    let values: [f64; 50] = [1143140_f64, 1143825_f64, 1143815_f64, 1143821_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 4.4898_f64, 20.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 1.3_f64, 0.25305_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[114].get_regions()[6], &values);

    // ============================================================
    //  Mute Trumpet
    // ============================================================
    let values: [f64; 50] = [1153415_f64, 1155989_f64, 1155875_f64, 1155981_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 0_f64, 62_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[0], &values);
    let values: [f64; 50] = [1151245_f64, 1153383_f64, 1153305_f64, 1153375_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 63_f64, 66_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[1], &values);
    let values: [f64; 50] = [1149063_f64, 1151213_f64, 1151149_f64, 1151205_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 67_f64, 70_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[2], &values);
    let values: [f64; 50] = [1146285_f64, 1149031_f64, 1148978_f64, 1149023_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.6205_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 71_f64, 75_f64, 0_f64, 127_f64, 5_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[3], &values);
    let values: [f64; 50] = [1146285_f64, 1149031_f64, 1148978_f64, 1149023_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[4], &values);
    let values: [f64; 50] = [1143857_f64, 1146253_f64, 1146219_f64, 1146245_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1400.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 77_f64, 96_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, -33_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[5], &values);
    let values: [f64; 50] = [1178991_f64, 1179176_f64, 1179166_f64, 1179172_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1610.2_f64, 0_f64, 0_f64, 2250_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 5.1894_f64, 0.0099978_f64, 4.6205_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 81.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 1.3_f64, 0.20495_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 15.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[115].get_regions()[6], &values);

    // ============================================================
    //  Tuba
    // ============================================================
    let values: [f64; 50] = [1165094_f64, 1167708_f64, 1167397_f64, 1167700_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2650_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 33_f64, 0_f64, 127_f64, 2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[0], &values);
    let values: [f64; 50] = [1162317_f64, 1165062_f64, 1164781_f64, 1165054_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2650_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 34_f64, 40_f64, 0_f64, 127_f64, 2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[1], &values);
    let values: [f64; 50] = [1159930_f64, 1162285_f64, 1162061_f64, 1162277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2650_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 41_f64, 44_f64, 0_f64, 127_f64, 2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[2], &values);
    let values: [f64; 50] = [1156856_f64, 1159898_f64, 1159718_f64, 1159890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2650_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 45_f64, 51_f64, 0_f64, 127_f64, 2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[3], &values);
    let values: [f64; 50] = [1156856_f64, 1159898_f64, 1159718_f64, 1159890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2650_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 52_f64, 59_f64, 0_f64, 127_f64, 2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[4], &values);
    let values: [f64; 50] = [1156856_f64, 1159898_f64, 1159718_f64, 1159890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2762_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.67987_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.29001_f64, 0_f64, 0_f64, 60_f64, 66_f64, 0_f64, 127_f64, 2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[5], &values);
    let values: [f64; 50] = [1156021_f64, 1156824_f64, 1156777_f64, 1156816_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1310.2_f64, 0_f64, 0_f64, 2737_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.72113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.27707_f64, 0_f64, 0_f64, 67_f64, 84_f64, 0_f64, 127_f64, 2_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[6], &values);
    let values: [f64; 50] = [1156021_f64, 1156824_f64, 1156777_f64, 1156816_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1270_f64, 0_f64, 0_f64, 2825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.67987_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.27707_f64, 0_f64, 0_f64, 85_f64, 97_f64, 0_f64, 127_f64, 2_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[7], &values);
    let values: [f64; 50] = [1178991_f64, 1179176_f64, 1179166_f64, 1179172_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1270_f64, 0_f64, 0_f64, 2825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 6.3606_f64, 2.3_f64, 0.27707_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 2.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[116].get_regions()[8], &values);

    // ============================================================
    //  Trombone
    // ============================================================
    let values: [f64; 50] = [1177814_f64, 1178959_f64, 1178814_f64, 1178951_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 3.5206_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[0], &values);
    let values: [f64; 50] = [1175230_f64, 1177782_f64, 1177670_f64, 1177774_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 1687_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 3.5206_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 55_f64, 59_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[1], &values);
    let values: [f64; 50] = [1172756_f64, 1175198_f64, 1175112_f64, 1175190_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1559.9_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 60_f64, 64_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[2], &values);
    let values: [f64; 50] = [1170406_f64, 1172724_f64, 1172657_f64, 1172716_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1499.8_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 65_f64, 69_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[3], &values);
    let values: [f64; 50] = [1167740_f64, 1170374_f64, 1170321_f64, 1170366_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1490.3_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 70_f64, 89_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[4], &values);
    let values: [f64; 50] = [1167740_f64, 1170374_f64, 1170321_f64, 1170366_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1409.9_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 90_f64, 95_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[5], &values);
    let values: [f64; 50] = [1178991_f64, 1179176_f64, 1179166_f64, 1179172_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1330_f64, 0_f64, 0_f64, 1687_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.55511_f64, 4.8699_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.29001_f64, 0_f64, 0_f64, 96_f64, 108_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[117].get_regions()[6], &values);

    // ============================================================
    //  SoloTrumpet
    // ============================================================
    let values: [f64; 50] = [206655_f64, 224498_f64, 220322_f64, 224419_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 12_f64, 56_f64, 0_f64, 127_f64, 0_f64, 0_f64, -16_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[0], &values);
    let values: [f64; 50] = [224530_f64, 250660_f64, 246288_f64, 250660_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 57_f64, 63_f64, 0_f64, 127_f64, 0_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[1], &values);
    let values: [f64; 50] = [250692_f64, 271027_f64, 266840_f64, 271026_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 64_f64, 67_f64, 0_f64, 127_f64, 0_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[2], &values);
    let values: [f64; 50] = [271059_f64, 289182_f64, 285157_f64, 289061_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 68_f64, 71_f64, 0_f64, 127_f64, 0_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[3], &values);
    let values: [f64; 50] = [289214_f64, 309878_f64, 305546_f64, 309877_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 72_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -19_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[4], &values);
    let values: [f64; 50] = [309910_f64, 339653_f64, 334956_f64, 339652_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 76_f64, 81_f64, 0_f64, 127_f64, 0_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[5], &values);
    let values: [f64; 50] = [339685_f64, 351570_f64, 349600_f64, 351512_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 20_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 15.698_f64, 1.3_f64, 0.54211_f64, 0_f64, 0_f64, 82_f64, 119_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[118].get_regions()[6], &values);

    // ============================================================
    //  Orchestra Hit0
    // ============================================================
    let values: [f64; 50] = [1179208_f64, 1186785_f64, 1185478_f64, 1185983_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.057016_f64, 29.995_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 0_f64, 96_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[119].get_regions()[0], &values);
    let values: [f64; 50] = [1179208_f64, 1186785_f64, 1185478_f64, 1185983_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.057016_f64, 29.995_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[119].get_regions()[1], &values);

    // ============================================================
    //  Orchestra Hit1
    // ============================================================
    let values: [f64; 50] = [1179208_f64, 1186785_f64, 1185478_f64, 1185983_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.057016_f64, 29.995_f64, 100_f64, 2.3094_f64, 0_f64, 0_f64, 0_f64, 77_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[120].get_regions()[0], &values);
    let values: [f64; 50] = [1179208_f64, 1186785_f64, 1185478_f64, 1185983_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.057016_f64, 29.995_f64, 100_f64, 1.7401_f64, 0_f64, 0_f64, 78_f64, 91_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[120].get_regions()[1], &values);
    let values: [f64; 50] = [1179208_f64, 1186785_f64, 1185478_f64, 1185983_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 32.805_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.057016_f64, 29.995_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 92_f64, 108_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, 1_f64, 0_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[120].get_regions()[2], &values);

    // ============================================================
    //  Synth Vox
    // ============================================================
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 38_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.32197_f64, 6.3606_f64, 1.3_f64, 1.9397_f64, 0_f64, 0_f64, 0_f64, 69_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[121].get_regions()[0], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.049008_f64, 0.32197_f64, 6.3606_f64, 1.3_f64, 1.9397_f64, 0_f64, 0_f64, 70_f64, 92_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[121].get_regions()[1], &values);
    let values: [f64; 50] = [1215221_f64, 1215719_f64, 1215252_f64, 1215717_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.501_f64, 35.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.35294_f64, 6.3606_f64, 1.3_f64, 1.1102_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[121].get_regions()[2], &values);

    // ============================================================
    //  Voice Oohs0
    // ============================================================
    let values: [f64; 50] = [1201722_f64, 1204857_f64, 1203010_f64, 1204855_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 12_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[0], &values);
    let values: [f64; 50] = [1198069_f64, 1201690_f64, 1199609_f64, 1201688_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 62_f64, 64_f64, 0_f64, 127_f64, 12_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[1], &values);
    let values: [f64; 50] = [1194702_f64, 1198037_f64, 1195952_f64, 1198034_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 65_f64, 68_f64, 0_f64, 127_f64, 12_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[2], &values);
    let values: [f64; 50] = [1191393_f64, 1194670_f64, 1192841_f64, 1194667_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.0079997_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 69_f64, 73_f64, 0_f64, 127_f64, 12_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[3], &values);
    let values: [f64; 50] = [1187883_f64, 1191361_f64, 1189081_f64, 1191359_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 74_f64, 84_f64, 0_f64, 127_f64, 12_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[4], &values);
    let values: [f64; 50] = [1187883_f64, 1191361_f64, 1189081_f64, 1191359_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 85_f64, 96_f64, 0_f64, 127_f64, 12_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[5], &values);
    let values: [f64; 50] = [1186817_f64, 1187851_f64, 1187175_f64, 1187849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.78187_f64, 28.198_f64, 1.3_f64, 0.83412_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 12_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[122].get_regions()[6], &values);

    // ============================================================
    //  Voice Oohs1
    // ============================================================
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 16_f64, 0.83412_f64, 0_f64, 0_f64, 0_f64, 63_f64, 0_f64, 127_f64, 27.7_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[0], &values);
    let values: [f64; 50] = [1211174_f64, 1215189_f64, 1211192_f64, 1215186_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 16_f64, 0.83412_f64, 0_f64, 0_f64, 64_f64, 69_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[1], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 16_f64, 0.83412_f64, 0_f64, 0_f64, 70_f64, 74_f64, 0_f64, 127_f64, 24_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[2], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 17_f64, 0.83412_f64, 0_f64, 0_f64, 75_f64, 83_f64, 0_f64, 127_f64, 24_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[3], &values);
    let values: [f64; 50] = [1204889_f64, 1211142_f64, 1204892_f64, 1211140_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 441.03_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 16_f64, 0.83412_f64, 0_f64, 0_f64, 84_f64, 92_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[4], &values);
    let values: [f64; 50] = [1215221_f64, 1215719_f64, 1215252_f64, 1215717_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 359.06_f64, 5.4_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 32.805_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.026006_f64, 0.00097656_f64, 28.198_f64, 18.1_f64, 0.83412_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 28.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 122_f64];
    instrument_util::check(&sf.get_instruments()[123].get_regions()[5], &values);

    // ============================================================
    //  Synth Strings 20
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 2193_f64, 3375_f64, 0_f64, 10.1_f64, 7_f64, -16.9_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.027001_f64, 0.00097656_f64, 1.2198_f64, 71.6_f64, 1.7901_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20901_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 3.0702_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 8_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[124].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 3.7_f64, 2193_f64, 3600_f64, 0_f64, 10.9_f64, 7_f64, -16.9_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.027001_f64, 0.00097656_f64, 1.2198_f64, 70.6_f64, 1.7901_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20201_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 2.8795_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 7.9_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[124].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 3.7_f64, 2193_f64, 3712_f64, 0_f64, 10.1_f64, 7_f64, -16.9_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.027001_f64, 0.00097656_f64, 1.2198_f64, 68.5_f64, 1.7901_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20201_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 2.8795_f64, 0_f64, 0_f64, 74_f64, 92_f64, 0_f64, 127_f64, 7.5_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[124].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 3.7_f64, 2193_f64, 3825_f64, 0_f64, 10.1_f64, 7_f64, -16.9_f64, 0.8409_f64, 0.099999_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.027001_f64, 0.00097656_f64, 1.2198_f64, 66.4_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20201_f64, 0.00097656_f64, 28.198_f64, 0.2_f64, 2.8795_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[124].get_regions()[3], &values);

    // ============================================================
    //  Synth Strings 21
    // ============================================================
    let values: [f64; 50] = [1275507_f64, 1281143_f64, 1275516_f64, 1281139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -646_f64, 709.86_f64, 0.9_f64, 0_f64, 675_f64, 0_f64, 0_f64, 7_f64, 17.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.049008_f64, 100_f64, 0.049008_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15204_f64, 0.00097656_f64, 28.198_f64, 0_f64, 2.7195_f64, 0_f64, 0_f64, 0_f64, 61_f64, 0_f64, 127_f64, 8_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[125].get_regions()[0], &values);
    let values: [f64; 50] = [1270809_f64, 1275475_f64, 1270818_f64, 1275470_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -646_f64, 734.9_f64, 0.9_f64, 0_f64, 900_f64, 0_f64, 0_f64, 7_f64, 17.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.049008_f64, 100_f64, 0.049008_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15204_f64, 0.00097656_f64, 28.198_f64, 0_f64, 2.7195_f64, 0_f64, 0_f64, 62_f64, 73_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -29_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[125].get_regions()[1], &values);
    let values: [f64; 50] = [1266092_f64, 1270777_f64, 1266103_f64, 1270773_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -646_f64, 787.19_f64, 0.9_f64, 0_f64, 900_f64, 0_f64, 0_f64, 7_f64, 17.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.049008_f64, 100_f64, 0.049008_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15204_f64, 0.00097656_f64, 28.198_f64, 0_f64, 2.7195_f64, 0_f64, 0_f64, 74_f64, 92_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[125].get_regions()[2], &values);
    let values: [f64; 50] = [1300705_f64, 1303418_f64, 1300755_f64, 1303414_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -646_f64, 842.23_f64, 0.9_f64, 0_f64, 900_f64, 0_f64, 0_f64, 7_f64, 17.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.049008_f64, 100_f64, 0.049008_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15204_f64, 0.00097656_f64, 28.198_f64, 0_f64, 2.7195_f64, 0_f64, 0_f64, 93_f64, 108_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 112_f64];
    instrument_util::check(&sf.get_instruments()[125].get_regions()[3], &values);

    // ============================================================
    //  Timpani
    // ============================================================
    let values: [f64; 50] = [1281175_f64, 1288928_f64, 1287609_f64, 1288921_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 4025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55_f64, 100_f64, 0.81601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 5.0107_f64, 0_f64, 0_f64, 0_f64, 45_f64, 0_f64, 127_f64, 3_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[126].get_regions()[0], &values);
    let values: [f64; 50] = [1281175_f64, 1288928_f64, 1287609_f64, 1288921_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 870.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44391_f64, 100_f64, 0.80804_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 4.1411_f64, 0_f64, 0_f64, 46_f64, 56_f64, 0_f64, 127_f64, 2_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[126].get_regions()[1], &values);
    let values: [f64; 50] = [1281175_f64, 1288928_f64, 1287609_f64, 1288921_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 965.23_f64, 0_f64, 0_f64, 3550_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29406_f64, 89.9_f64, 0.60395_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 57_f64, 74_f64, 0_f64, 127_f64, 2_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[126].get_regions()[2], &values);
    let values: [f64; 50] = [1281175_f64, 1288928_f64, 1287609_f64, 1288921_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3350_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29902_f64, 100_f64, 0.51287_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 100_f64, 2.1104_f64, 0_f64, 0_f64, 75_f64, 108_f64, 0_f64, 127_f64, 2_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[126].get_regions()[3], &values);

    // ============================================================
    //  Harp LP
    // ============================================================
    let values: [f64; 50] = [122432_f64, 123379_f64, 123268_f64, 123371_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -16.6_f64, 0.0099978_f64, 5.3693_f64, 0.0099978_f64, 5.3693_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 8.3977_f64, 100_f64, 2.6193_f64, 0_f64, 0_f64, 0_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[127].get_regions()[0], &values);
    let values: [f64; 50] = [123411_f64, 124011_f64, 123940_f64, 124003_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -16.6_f64, 0.0099978_f64, 5.3693_f64, 0.0099978_f64, 5.3693_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 7.8717_f64, 100_f64, 2.6193_f64, 0_f64, 0_f64, 49_f64, 51_f64, 0_f64, 127_f64, 0_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[127].get_regions()[1], &values);
    let values: [f64; 50] = [124043_f64, 124965_f64, 124922_f64, 124957_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -16.6_f64, 0.0099978_f64, 5.3693_f64, 0.0099978_f64, 5.3693_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 6.2985_f64, 100_f64, 2.6193_f64, 0_f64, 0_f64, 52_f64, 93_f64, 0_f64, 127_f64, 0_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[127].get_regions()[2], &values);
    let values: [f64; 50] = [124997_f64, 125355_f64, 125337_f64, 125347_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -16.6_f64, 0.0099978_f64, 5.3693_f64, 0.0099978_f64, 5.3693_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 4.3394_f64, 100_f64, 2.6193_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[127].get_regions()[3], &values);

    // ============================================================
    //  Pizzicato
    // ============================================================
    let values: [f64; 50] = [1294986_f64, 1300673_f64, 1300594_f64, 1300665_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3680.2_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1101_f64, 100_f64, 2.94_f64, 0_f64, 70_f64, 0_f64, 68_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[128].get_regions()[0], &values);
    let values: [f64; 50] = [1290347_f64, 1294954_f64, 1294904_f64, 1294946_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3680.2_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.929_f64, 100_f64, 2.8497_f64, 0_f64, 70_f64, 69_f64, 83_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[128].get_regions()[1], &values);
    let values: [f64; 50] = [1288960_f64, 1290315_f64, 1290291_f64, 1290307_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3280.6_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.24302_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 100_f64, 1.4498_f64, 0_f64, 70_f64, 84_f64, 93_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[128].get_regions()[2], &values);
    let values: [f64; 50] = [1288960_f64, 1290315_f64, 1290291_f64, 1290307_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3100_f64, 0_f64, 0_f64, 1462_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.22401_f64, 100_f64, 0.23299_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3295_f64, 100_f64, 1.3096_f64, 0_f64, 70_f64, 94_f64, 108_f64, 0_f64, 127_f64, 5.5_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 101_f64];
    instrument_util::check(&sf.get_instruments()[128].get_regions()[3], &values);

    // ============================================================
    //  Contrabass
    // ============================================================
    let values: [f64; 50] = [1309640_f64, 1313738_f64, 1313430_f64, 1313730_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 932.89_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.0914_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 31.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 1.3_f64, 0.57302_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[129].get_regions()[0], &values);
    let values: [f64; 50] = [1304139_f64, 1309608_f64, 1309362_f64, 1309600_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 932.89_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.0914_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 30.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.13798_f64, 28.198_f64, 1.3_f64, 0.57302_f64, 0_f64, 0_f64, 41_f64, 73_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[129].get_regions()[1], &values);
    let values: [f64; 50] = [1303450_f64, 1304107_f64, 1304069_f64, 1304099_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 932.89_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.0914_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 28.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.13798_f64, 28.198_f64, 1.3_f64, 0.57302_f64, 0_f64, 0_f64, 74_f64, 88_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[129].get_regions()[2], &values);
    let values: [f64; 50] = [1303450_f64, 1304107_f64, 1304069_f64, 1304099_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.0914_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 22.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.13798_f64, 19.801_f64, 1.3_f64, 0.57302_f64, 0_f64, 0_f64, 89_f64, 96_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[129].get_regions()[3], &values);
    let values: [f64; 50] = [1318878_f64, 1319137_f64, 1319119_f64, 1319129_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 999.27_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.0914_f64, 0.0099978_f64, 5.549_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 20.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.13798_f64, 19.801_f64, 1.3_f64, 0.57302_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[129].get_regions()[4], &values);

    // ============================================================
    //  Cello
    // ============================================================
    let values: [f64; 50] = [1316333_f64, 1318846_f64, 1318600_f64, 1318838_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 503.11_f64, 0_f64, 0_f64, 4413_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 29.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.23005_f64, 28.198_f64, 1.3_f64, 0.48492_f64, 0_f64, 0_f64, 0_f64, 44_f64, 0_f64, 127_f64, 10_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[130].get_regions()[0], &values);
    let values: [f64; 50] = [1314779_f64, 1316301_f64, 1316104_f64, 1316293_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 503.11_f64, 0_f64, 0_f64, 4300_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 3.4502_f64, 26.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.23005_f64, 28.198_f64, 0.2_f64, 0.48492_f64, 0_f64, 0_f64, 45_f64, 56_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[130].get_regions()[1], &values);
    let values: [f64; 50] = [1314779_f64, 1316301_f64, 1316104_f64, 1316293_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 538.91_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 25.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.23005_f64, 28.198_f64, 0.2_f64, 0.51406_f64, 0_f64, 0_f64, 57_f64, 73_f64, 0_f64, 127_f64, 9.2_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[130].get_regions()[2], &values);
    let values: [f64; 50] = [1313770_f64, 1314747_f64, 1314688_f64, 1314726_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 775.9_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 24.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.23005_f64, 28.198_f64, 0.2_f64, 0.48492_f64, 0_f64, 0_f64, 74_f64, 87_f64, 0_f64, 127_f64, 8.5_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[130].get_regions()[3], &values);
    let values: [f64; 50] = [1318878_f64, 1319137_f64, 1319119_f64, 1319129_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 902.15_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 23.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.23005_f64, 28.198_f64, 0.2_f64, 0.48492_f64, 0_f64, 0_f64, 88_f64, 108_f64, 0_f64, 127_f64, 8.5_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[130].get_regions()[4], &values);

    // ============================================================
    //  Viola
    // ============================================================
    let values: [f64; 50] = [1328712_f64, 1330018_f64, 1329917_f64, 1330011_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 29.6_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.027001_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 0_f64, 58_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[0], &values);
    let values: [f64; 50] = [1327087_f64, 1328680_f64, 1328597_f64, 1328672_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 28.6_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 59_f64, 65_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[1], &values);
    let values: [f64; 50] = [1325529_f64, 1327055_f64, 1326991_f64, 1327047_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 27.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 66_f64, 68_f64, 0_f64, 127_f64, 8_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[2], &values);
    let values: [f64; 50] = [1324154_f64, 1325497_f64, 1325447_f64, 1325489_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 27.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014997_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 69_f64, 73_f64, 0_f64, 127_f64, 8_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[3], &values);
    let values: [f64; 50] = [1322791_f64, 1324122_f64, 1324083_f64, 1324114_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 26.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014001_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 74_f64, 79_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -29_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[4], &values);
    let values: [f64; 50] = [1321504_f64, 1322759_f64, 1322729_f64, 1322751_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 25.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019996_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 80_f64, 92_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[5], &values);
    let values: [f64; 50] = [1320018_f64, 1321472_f64, 1321445_f64, 1321464_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 24.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 93_f64, 96_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[6], &values);
    let values: [f64; 50] = [1319169_f64, 1319986_f64, 1319968_f64, 1319978_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 881.04_f64, 0_f64, 0_f64, 4500_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.384_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 23.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.027001_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.35601_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[131].get_regions()[7], &values);

    // ============================================================
    //  Violin
    // ============================================================
    let values: [f64; 50] = [1328712_f64, 1330018_f64, 1329917_f64, 1330011_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.014997_f64, 0.41394_f64, 28.198_f64, 1.3_f64, 0.26996_f64, 0_f64, 0_f64, 0_f64, 60_f64, 0_f64, 127_f64, 9_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[0], &values);
    let values: [f64; 50] = [1327087_f64, 1328680_f64, 1328597_f64, 1328672_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.41394_f64, 28.198_f64, 1.3_f64, 0.26996_f64, 0_f64, 0_f64, 61_f64, 66_f64, 0_f64, 127_f64, 9_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[1], &values);
    let values: [f64; 50] = [1325529_f64, 1327055_f64, 1326991_f64, 1327047_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.1_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.044993_f64, 0.41394_f64, 28.198_f64, 1.3_f64, 0.26996_f64, 0_f64, 0_f64, 67_f64, 70_f64, 0_f64, 127_f64, 9_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[2], &values);
    let values: [f64; 50] = [1324154_f64, 1325497_f64, 1325447_f64, 1325489_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 71_f64, 75_f64, 0_f64, 127_f64, 8.2_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[3], &values);
    let values: [f64; 50] = [1322791_f64, 1324122_f64, 1324083_f64, 1324114_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1595_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 76_f64, 80_f64, 0_f64, 127_f64, 9.5_f64, 0_f64, -29_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[4], &values);
    let values: [f64; 50] = [1321504_f64, 1322759_f64, 1322729_f64, 1322751_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 3650.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 97.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021002_f64, 0.5061_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 81_f64, 85_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[5], &values);
    let values: [f64; 50] = [1320018_f64, 1321472_f64, 1321445_f64, 1321464_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1914_f64, 0.1_f64, 0_f64, 7_f64, 0.4_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.3201_f64, 90.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.021995_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 86_f64, 88_f64, 0_f64, 127_f64, 2.1_f64, 0_f64, 22_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[6], &values);
    let values: [f64; 50] = [1320018_f64, 1321472_f64, 1321445_f64, 1321464_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.1714_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 86.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.022996_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 89_f64, 96_f64, 0_f64, 127_f64, 3_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[7], &values);
    let values: [f64; 50] = [1319169_f64, 1319986_f64, 1319968_f64, 1319978_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1914_f64, 0.3_f64, 0_f64, 7_f64, 0_f64, 0.37501_f64, 5.2104_f64, 0.0099978_f64, 5.7116_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 72.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.028002_f64, 0.41394_f64, 28.198_f64, 0.2_f64, 0.26996_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 3.5_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[132].get_regions()[8], &values);

    // ============================================================
    //  Synth Bass 20
    // ============================================================
    let values: [f64; 50] = [1366527_f64, 1370510_f64, 1370197_f64, 1370502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 34_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[0], &values);
    let values: [f64; 50] = [1366527_f64, 1370510_f64, 1370197_f64, 1370502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 9.8719_f64, 66.4_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 34.9_f64, 0.22806_f64, 0_f64, 0_f64, 35_f64, 38_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[1], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 9.8719_f64, 66.4_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 8.3397_f64, 34.9_f64, 0.22806_f64, 0_f64, 0_f64, 39_f64, 41_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[2], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 42_f64, 45_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[3], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 46_f64, 48_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[4], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 49_f64, 52_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[5], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 53_f64, 56_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[6], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[7], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 62_f64, 67_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[8], &values);
    let values: [f64; 50] = [1359768_f64, 1360623_f64, 1360550_f64, 1360615_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 68_f64, 83_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[9], &values);
    let values: [f64; 50] = [1374240_f64, 1374354_f64, 1374336_f64, 1374346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 117.02_f64, 0.7_f64, 0_f64, 4950_f64, 0_f64, 0_f64, 1.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 34.9_f64, 0.22401_f64, 0_f64, 0_f64, 84_f64, 108_f64, 0_f64, 127_f64, 4.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[133].get_regions()[10], &values);

    // ============================================================
    //  Synth Bass 21
    // ============================================================
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 214.98_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.86404_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 0_f64, 34_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[0], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 292.99_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.83412_f64, 91.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 35_f64, 42_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[1], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 335.98_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.72113_f64, 88.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 43_f64, 49_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[2], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 385.05_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.64283_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 50_f64, 56_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[3], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 456.05_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.48492_f64, 79_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 57_f64, 65_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[4], &values);
    let values: [f64; 50] = [1374386_f64, 1374885_f64, 1374831_f64, 1374877_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 522.96_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.39003_f64, 74.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 29.6_f64, 0.25305_f64, 0_f64, 0_f64, 66_f64, 79_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[5], &values);
    let values: [f64; 50] = [1374386_f64, 1374885_f64, 1374831_f64, 1374877_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 640.87_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.33994_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 32.8_f64, 0.25305_f64, 0_f64, 0_f64, 80_f64, 93_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[6], &values);
    let values: [f64; 50] = [1374240_f64, 1374354_f64, 1374336_f64, 1374346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 814.01_f64, 12.9_f64, 0_f64, 4725_f64, 0_f64, 0_f64, 2.3_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.27707_f64, 65.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 32.8_f64, 0.25305_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[134].get_regions()[7], &values);

    // ============================================================
    //  Synth Bass 1
    // ============================================================
    let values: [f64; 50] = [1337219_f64, 1339935_f64, 1339392_f64, 1339927_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6300_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.33994_f64, 96.8_f64, 0.18903_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 5.0107_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 0_f64, 33_f64, 0_f64, 127_f64, 3_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[0], &values);
    let values: [f64; 50] = [1337219_f64, 1339935_f64, 1339392_f64, 1339927_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6300_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 95.8_f64, 0.18101_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 4.5289_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 34_f64, 42_f64, 0_f64, 127_f64, 3_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 40_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[1], &values);
    let values: [f64; 50] = [1335107_f64, 1337187_f64, 1336911_f64, 1337179_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6300_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30495_f64, 94.7_f64, 0.18101_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 4.1411_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 43_f64, 54_f64, 0_f64, 127_f64, 3_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[2], &values);
    let values: [f64; 50] = [1332938_f64, 1335075_f64, 1334933_f64, 1335067_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6300_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 93.7_f64, 0.16997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 3.5206_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 55_f64, 59_f64, 0_f64, 127_f64, 3_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[3], &values);
    let values: [f64; 50] = [1332938_f64, 1335075_f64, 1334933_f64, 1335067_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6300_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.29001_f64, 92.6_f64, 0.16997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 3.0702_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 60_f64, 65_f64, 0_f64, 127_f64, 3_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[4], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6187_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.27707_f64, 90.5_f64, 0.16997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 2.5698_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 66_f64, 74_f64, 0_f64, 127_f64, 3_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[5], &values);
    let values: [f64; 50] = [1330551_f64, 1332906_f64, 1332747_f64, 1332898_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6187_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.27707_f64, 88.4_f64, 0.16997_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 2.1104_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 75_f64, 83_f64, 0_f64, 127_f64, 3_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[6], &values);
    let values: [f64; 50] = [1330397_f64, 1330519_f64, 1330488_f64, 1330511_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6187_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26395_f64, 86.3_f64, 0.16099_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 1.7301_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 84_f64, 98_f64, 0_f64, 127_f64, 3_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[7], &values);
    let values: [f64; 50] = [1330050_f64, 1330365_f64, 1330347_f64, 1330357_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 134.03_f64, 2.5_f64, 0_f64, 6187_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.25305_f64, 83.2_f64, 0.145_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.067999_f64, 1.6096_f64, 32.8_f64, 0.18101_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 3_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[135].get_regions()[8], &values);

    // ============================================================
    //  Slap Bass 2
    // ============================================================
    let values: [f64; 50] = [1343758_f64, 1346085_f64, 1345627_f64, 1346077_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.53188_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 0_f64, 38_f64, 0_f64, 127_f64, 0_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[0], &values);
    let values: [f64; 50] = [1341251_f64, 1343726_f64, 1343467_f64, 1343718_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 39_f64, 47_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[1], &values);
    let values: [f64; 50] = [1341251_f64, 1343726_f64, 1343467_f64, 1343718_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.48492_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 48_f64, 59_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[2], &values);
    let values: [f64; 50] = [1341251_f64, 1343726_f64, 1343467_f64, 1343718_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 60_f64, 71_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[3], &values);
    let values: [f64; 50] = [1340178_f64, 1341219_f64, 1341164_f64, 1341211_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 72_f64, 89_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -11_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[4], &values);
    let values: [f64; 50] = [1339967_f64, 1340146_f64, 1340127_f64, 1340138_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 3.5_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 63.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 33.8_f64, 0.15204_f64, 0_f64, 0_f64, 90_f64, 108_f64, 0_f64, 127_f64, 0.3_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[136].get_regions()[5], &values);

    // ============================================================
    //  Slap Bass 1
    // ============================================================
    let values: [f64; 50] = [1351392_f64, 1359542_f64, 1359080_f64, 1359534_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 3037_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.60991_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 0_f64, 37_f64, 0_f64, 127_f64, 1.6_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[0], &values);
    let values: [f64; 50] = [1346766_f64, 1351360_f64, 1351012_f64, 1351352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 38_f64, 49_f64, 0_f64, 127_f64, 2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[1], &values);
    let values: [f64; 50] = [1346766_f64, 1351360_f64, 1351012_f64, 1351352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1110_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 70.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 50_f64, 61_f64, 0_f64, 127_f64, 2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[2], &values);
    let values: [f64; 50] = [1346766_f64, 1351360_f64, 1351012_f64, 1351352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1069.8_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.55287_f64, 71.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 62_f64, 71_f64, 0_f64, 127_f64, 2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[3], &values);
    let values: [f64; 50] = [1346301_f64, 1346734_f64, 1346684_f64, 1346726_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1029.7_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5061_f64, 71.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 72_f64, 96_f64, 0_f64, 127_f64, 2_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[4], &values);
    let values: [f64; 50] = [1346117_f64, 1346269_f64, 1346250_f64, 1346261_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1029.7_f64, 0_f64, 0_f64, 2700_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 33.8_f64, 0.065987_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[137].get_regions()[5], &values);

    // ============================================================
    //  Fretless Bass
    // ============================================================
    let values: [f64; 50] = [1366527_f64, 1370510_f64, 1370197_f64, 1370502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 709.86_f64, 0_f64, 0_f64, 3437_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.024_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 9.5082_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 39.993_f64, 99_f64, 0.17801_f64, 0_f64, 0_f64, 0_f64, 38_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[0], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 709.86_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.2902_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 31.396_f64, 99_f64, 0.17801_f64, 0_f64, 0_f64, 39_f64, 50_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[1], &values);
    let values: [f64; 50] = [1360655_f64, 1366495_f64, 1366271_f64, 1366487_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 0_f64, 0_f64, 3412_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.7799_f64, 93.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 21.996_f64, 99_f64, 0.17801_f64, 0_f64, 0_f64, 51_f64, 63_f64, 0_f64, 127_f64, 1.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[2], &values);
    let values: [f64; 50] = [1359768_f64, 1360623_f64, 1360550_f64, 1360615_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 576.92_f64, 0_f64, 0_f64, 3452_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 94.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 17_f64, 100_f64, 0.17801_f64, 0_f64, 0_f64, 64_f64, 75_f64, 0_f64, 127_f64, 1.3_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[3], &values);
    let values: [f64; 50] = [1359768_f64, 1360623_f64, 1360550_f64, 1360615_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 2800_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.0994_f64, 94.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 17_f64, 100_f64, 0.17801_f64, 0_f64, 0_f64, 76_f64, 82_f64, 0_f64, 127_f64, 1_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[4], &values);
    let values: [f64; 50] = [1359574_f64, 1359736_f64, 1359717_f64, 1359728_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 540.15_f64, 0_f64, 0_f64, 3587_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2_f64, 79.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 11.699_f64, 99_f64, 0.17801_f64, 0_f64, 0_f64, 83_f64, 108_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[138].get_regions()[5], &values);

    // ============================================================
    //  Picked Bass
    // ============================================================
    let values: [f64; 50] = [1371477_f64, 1374208_f64, 1373812_f64, 1374200_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 3.6_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.5279_f64, 58_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 0_f64, 36_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[0], &values);
    let values: [f64; 50] = [1371477_f64, 1374208_f64, 1373812_f64, 1374200_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 3.6_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.46598_f64, 54.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 37_f64, 44_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[1], &values);
    let values: [f64; 50] = [1371477_f64, 1374208_f64, 1373812_f64, 1374200_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 45_f64, 51_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[2], &values);
    let values: [f64; 50] = [1371477_f64, 1374208_f64, 1373812_f64, 1374200_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 411.97_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.37696_f64, 50.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 52_f64, 59_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[3], &values);
    let values: [f64; 50] = [1371477_f64, 1374208_f64, 1373812_f64, 1374200_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 397.94_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.33994_f64, 47.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 60_f64, 67_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 46_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[4], &values);
    let values: [f64; 50] = [1370542_f64, 1371445_f64, 1371389_f64, 1371437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 371.93_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 68_f64, 77_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[5], &values);
    let values: [f64; 50] = [1370542_f64, 1371445_f64, 1371389_f64, 1371437_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 359.06_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30495_f64, 41.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 78_f64, 84_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[6], &values);
    let values: [f64; 50] = [1376594_f64, 1376733_f64, 1376714_f64, 1376725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 347.02_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.27707_f64, 26.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 85_f64, 100_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[7], &values);
    let values: [f64; 50] = [1376594_f64, 1376733_f64, 1376714_f64, 1376725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 335.98_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.24302_f64, 23.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 29.6_f64, 0.11602_f64, 0_f64, 0_f64, 101_f64, 104_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[8], &values);
    let values: [f64; 50] = [1376594_f64, 1376733_f64, 1376714_f64, 1376725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 323.97_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 3.6_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 77.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 33.8_f64, 0.11602_f64, 0_f64, 0_f64, 105_f64, 108_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[139].get_regions()[9], &values);

    // ============================================================
    //  Fingered Bass
    // ============================================================
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 88_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 32.8_f64, 0.16304_f64, 0_f64, 0_f64, 0_f64, 34_f64, 0_f64, 127_f64, 0_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[140].get_regions()[0], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.4398_f64, 83.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 32.8_f64, 0.16304_f64, 0_f64, 0_f64, 35_f64, 52_f64, 0_f64, 127_f64, 0_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[140].get_regions()[1], &values);
    let values: [f64; 50] = [1374917_f64, 1376562_f64, 1376216_f64, 1376554_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.4398_f64, 76.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 32.8_f64, 0.16304_f64, 0_f64, 0_f64, 53_f64, 65_f64, 0_f64, 127_f64, 0.2_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[140].get_regions()[2], &values);
    let values: [f64; 50] = [1374386_f64, 1374885_f64, 1374831_f64, 1374877_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 753.81_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.3597_f64, 76.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 32.8_f64, 0.16304_f64, 0_f64, 0_f64, 66_f64, 87_f64, 0_f64, 127_f64, 0.2_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[140].get_regions()[3], &values);
    let values: [f64; 50] = [1374240_f64, 1374354_f64, 1374336_f64, 1374346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 814.01_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 3.1_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.3597_f64, 80.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 32.8_f64, 0.16304_f64, 0_f64, 0_f64, 88_f64, 108_f64, 0_f64, 127_f64, 0.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[140].get_regions()[4], &values);

    // ============================================================
    //  Acoustic Bass
    // ============================================================
    let values: [f64; 50] = [568821_f64, 574032_f64, 573824_f64, 574024_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1459.6_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 3.9_f64, 0.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 32.8_f64, 0.27707_f64, 0_f64, 0_f64, 0_f64, 51_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[141].get_regions()[0], &values);
    let values: [f64; 50] = [568821_f64, 574032_f64, 573824_f64, 574024_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1320.1_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 3.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 32.8_f64, 0.27707_f64, 0_f64, 0_f64, 52_f64, 63_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[141].get_regions()[1], &values);
    let values: [f64; 50] = [574064_f64, 575094_f64, 575045_f64, 575086_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1119.7_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 3.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 32.8_f64, 0.27707_f64, 0_f64, 0_f64, 64_f64, 75_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[141].get_regions()[2], &values);
    let values: [f64; 50] = [574064_f64, 575094_f64, 575045_f64, 575086_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 907.9_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 3.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.1104_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 32.8_f64, 0.27707_f64, 0_f64, 0_f64, 76_f64, 91_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[141].get_regions()[3], &values);
    let values: [f64; 50] = [568502_f64, 568789_f64, 568769_f64, 568781_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1280.3_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 3.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7901_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.0107_f64, 32.8_f64, 0.27707_f64, 0_f64, 0_f64, 92_f64, 108_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[141].get_regions()[4], &values);

    // ============================================================
    //  Guitar Harmonics
    // ============================================================
    let values: [f64; 50] = [1382041_f64, 1384802_f64, 1384645_f64, 1384794_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 10.697_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 0_f64, 58_f64, 0_f64, 127_f64, 11.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[0], &values);
    let values: [f64; 50] = [1379313_f64, 1382009_f64, 1381628_f64, 1382001_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 10.697_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 59_f64, 62_f64, 0_f64, 127_f64, 11.8_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[1], &values);
    let values: [f64; 50] = [1378197_f64, 1379281_f64, 1379175_f64, 1379273_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 8.709_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 63_f64, 67_f64, 0_f64, 127_f64, 11.9_f64, 0_f64, -26_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[2], &values);
    let values: [f64; 50] = [1377311_f64, 1378165_f64, 1377990_f64, 1378157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 68_f64, 89_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[3], &values);
    let values: [f64; 50] = [1376939_f64, 1377279_f64, 1377238_f64, 1377271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 90_f64, 94_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[4], &values);
    let values: [f64; 50] = [1376939_f64, 1377279_f64, 1377238_f64, 1377271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 95_f64, 97_f64, 0_f64, 127_f64, 6_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[5], &values);
    let values: [f64; 50] = [1376765_f64, 1376907_f64, 1376883_f64, 1376899_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 98_f64, 102_f64, 0_f64, 127_f64, 23.2_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 105_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[6], &values);
    let values: [f64; 50] = [1376594_f64, 1376733_f64, 1376714_f64, 1376725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 103_f64, 108_f64, 0_f64, 127_f64, 21.7_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 111_f64];
    instrument_util::check(&sf.get_instruments()[142].get_regions()[7], &values);

    // ============================================================
    //  DistortionGuitar0
    // ============================================================
    let values: [f64; 50] = [1399317_f64, 1402968_f64, 1402693_f64, 1402960_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[0], &values);
    let values: [f64; 50] = [1399317_f64, 1402968_f64, 1402693_f64, 1402960_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 36_f64, 42_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[1], &values);
    let values: [f64; 50] = [1396660_f64, 1399285_f64, 1399077_f64, 1399277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 96.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 43_f64, 47_f64, 0_f64, 127_f64, 16.2_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[2], &values);
    let values: [f64; 50] = [1394267_f64, 1396628_f64, 1396470_f64, 1396620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 94.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 48_f64, 52_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[3], &values);
    let values: [f64; 50] = [1391931_f64, 1394235_f64, 1394115_f64, 1394227_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 92.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 53_f64, 56_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[4], &values);
    let values: [f64; 50] = [1389838_f64, 1391899_f64, 1391802_f64, 1391891_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 91.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 57_f64, 58_f64, 0_f64, 127_f64, 14_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[5], &values);
    let values: [f64; 50] = [1389838_f64, 1391899_f64, 1391802_f64, 1391891_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 91.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 59_f64, 61_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[6], &values);
    let values: [f64; 50] = [1387284_f64, 1389806_f64, 1389731_f64, 1389798_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 90.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 62_f64, 64_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[7], &values);
    let values: [f64; 50] = [1387284_f64, 1389806_f64, 1389731_f64, 1389798_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 65_f64, 66_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[8], &values);
    let values: [f64; 50] = [1384834_f64, 1387252_f64, 1387194_f64, 1387244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 88.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 67_f64, 70_f64, 0_f64, 127_f64, 11_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[9], &values);
    let values: [f64; 50] = [1384834_f64, 1387252_f64, 1387194_f64, 1387244_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 88.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.191_f64, 0_f64, 0_f64, 71_f64, 74_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[10], &values);
    let values: [f64; 50] = [1404534_f64, 1405285_f64, 1405244_f64, 1405277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 87.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.16201_f64, 0_f64, 0_f64, 75_f64, 82_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[11], &values);
    let values: [f64; 50] = [1404534_f64, 1405285_f64, 1405244_f64, 1405277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 487.94_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 85.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.15398_f64, 0_f64, 0_f64, 83_f64, 92_f64, 0_f64, 127_f64, 10.6_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[12], &values);
    let values: [f64; 50] = [1404278_f64, 1404502_f64, 1404484_f64, 1404494_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 487.94_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 84.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.15398_f64, 0_f64, 0_f64, 93_f64, 97_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[13], &values);
    let values: [f64; 50] = [1404278_f64, 1404502_f64, 1404484_f64, 1404494_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 487.94_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.14703_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 11_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[143].get_regions()[14], &values);

    // ============================================================
    //  DistortionGuitar1
    // ============================================================
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 90.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0.2_f64, 0.15398_f64, 0_f64, 0_f64, 75_f64, 82_f64, 0_f64, 127_f64, 17.7_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[144].get_regions()[0], &values);
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0.2_f64, 0.15398_f64, 0_f64, 0_f64, 83_f64, 93_f64, 0_f64, 127_f64, 18.5_f64, 0_f64, -20_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[144].get_regions()[1], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 86.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0.2_f64, 0.15398_f64, 0_f64, 0_f64, 94_f64, 101_f64, 0_f64, 127_f64, 22.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[144].get_regions()[2], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 84.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0.2_f64, 0.15398_f64, 0_f64, 0_f64, 102_f64, 108_f64, 0_f64, 127_f64, 23_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[144].get_regions()[3], &values);

    // ============================================================
    //  Overdrive Guitar0
    // ============================================================
    let values: [f64; 50] = [1417380_f64, 1420996_f64, 1420721_f64, 1420988_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.41394_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 12_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[0], &values);
    let values: [f64; 50] = [1417380_f64, 1420996_f64, 1420721_f64, 1420988_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.69016_f64, 8.709_f64, 98.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 3.4_f64, 0.24204_f64, 0_f64, 0_f64, 36_f64, 44_f64, 0_f64, 127_f64, 12_f64, 0_f64, -2_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[1], &values);
    let values: [f64; 50] = [1414900_f64, 1417348_f64, 1417177_f64, 1417340_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 8.709_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.32197_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 45_f64, 49_f64, 0_f64, 127_f64, 12_f64, 0_f64, 45_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[2], &values);
    let values: [f64; 50] = [1412799_f64, 1414868_f64, 1414737_f64, 1414860_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 8.709_f64, 98.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 50_f64, 54_f64, 0_f64, 127_f64, 12_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[3], &values);
    let values: [f64; 50] = [1410854_f64, 1412767_f64, 1412667_f64, 1412759_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 8.709_f64, 93.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 55_f64, 58_f64, 0_f64, 127_f64, 12_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[4], &values);
    let values: [f64; 50] = [1408689_f64, 1410822_f64, 1410737_f64, 1410814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 8.709_f64, 91.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 59_f64, 63_f64, 0_f64, 127_f64, 10.5_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[5], &values);
    let values: [f64; 50] = [1407056_f64, 1408657_f64, 1408591_f64, 1408649_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 64_f64, 68_f64, 0_f64, 127_f64, 12_f64, 0_f64, -44_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[6], &values);
    let values: [f64; 50] = [1405317_f64, 1407024_f64, 1406972_f64, 1407016_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 87.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 69_f64, 74_f64, 0_f64, 127_f64, 12_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[7], &values);
    let values: [f64; 50] = [1404534_f64, 1405285_f64, 1405244_f64, 1405277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 85.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 75_f64, 85_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[8], &values);
    let values: [f64; 50] = [1404534_f64, 1405285_f64, 1405244_f64, 1405277_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 86_f64, 93_f64, 0_f64, 127_f64, 9.1_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[9], &values);
    let values: [f64; 50] = [1404278_f64, 1404502_f64, 1404484_f64, 1404494_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 82.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 94_f64, 96_f64, 0_f64, 127_f64, 12.6_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[10], &values);
    let values: [f64; 50] = [1404278_f64, 1404502_f64, 1404484_f64, 1404494_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 472.14_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 80_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 2.3_f64, 0.24204_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[145].get_regions()[11], &values);

    // ============================================================
    //  Overdrive Guitar1
    // ============================================================
    let values: [f64; 50] = [1403311_f64, 1404246_f64, 1404205_f64, 1404238_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 274.01_f64, 0_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 65.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.23005_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 75_f64, 92_f64, 0_f64, 127_f64, 21.6_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[146].get_regions()[0], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 274.01_f64, 0_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 62.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 93_f64, 99_f64, 0_f64, 127_f64, 28.1_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[146].get_regions()[1], &values);
    let values: [f64; 50] = [1403000_f64, 1403279_f64, 1403261_f64, 1403271_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 274.01_f64, 0_f64, 0_f64, 4837_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 0_f64, 0.24204_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 21_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[146].get_regions()[2], &values);

    // ============================================================
    //  Guitar Mutes
    // ============================================================
    let values: [f64; 50] = [1430082_f64, 1432529_f64, 1432297_f64, 1432521_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 2.3_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[0], &values);
    let values: [f64; 50] = [1427564_f64, 1430050_f64, 1429892_f64, 1430042_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 48_f64, 53_f64, 0_f64, 127_f64, 2.3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[1], &values);
    let values: [f64; 50] = [1425239_f64, 1427532_f64, 1427412_f64, 1427524_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 54_f64, 57_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[2], &values);
    let values: [f64; 50] = [1423037_f64, 1425207_f64, 1425110_f64, 1425199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 92.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 58_f64, 68_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[3], &values);
    let values: [f64; 50] = [1421028_f64, 1423005_f64, 1422951_f64, 1422997_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.20201_f64, 64.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 69_f64, 76_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[4], &values);
    let values: [f64; 50] = [1421028_f64, 1423005_f64, 1422951_f64, 1422997_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.20201_f64, 58_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 77_f64, 85_f64, 0_f64, 127_f64, 1.2_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[5], &values);
    let values: [f64; 50] = [1421028_f64, 1423005_f64, 1422951_f64, 1422997_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.19502_f64, 50.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 86_f64, 98_f64, 0_f64, 127_f64, 0.9_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[6], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3342_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.16997_f64, 44.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 0.24302_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 9.4_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[147].get_regions()[7], &values);

    // ============================================================
    //  Clean Guitar
    // ============================================================
    let values: [f64; 50] = [1444845_f64, 1448498_f64, 1448264_f64, 1448490_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 5062_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.49397_f64, 77.9_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 6.7_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[0], &values);
    let values: [f64; 50] = [1441508_f64, 1444813_f64, 1444670_f64, 1444805_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 5062_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 75.8_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 48_f64, 59_f64, 0_f64, 127_f64, 6_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[1], &values);
    let values: [f64; 50] = [1438204_f64, 1441476_f64, 1441383_f64, 1441468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 5062_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 73.7_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 60_f64, 63_f64, 0_f64, 127_f64, 6_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[2], &values);
    let values: [f64; 50] = [1435400_f64, 1438172_f64, 1438100_f64, 1438164_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 5062_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 70.6_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 64_f64, 68_f64, 0_f64, 127_f64, 6_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[3], &values);
    let values: [f64; 50] = [1432561_f64, 1435368_f64, 1435314_f64, 1435360_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 5075_f64, 0_f64, 25_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 70.5_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 69_f64, 80_f64, 0_f64, 127_f64, 5.4_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[4], &values);
    let values: [f64; 50] = [1432561_f64, 1435368_f64, 1435314_f64, 1435360_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4987_f64, 0_f64, 23_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.39003_f64, 71.3_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 0.48492_f64, 0_f64, 0_f64, 81_f64, 93_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, -45_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[5], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 2.5_f64, 0_f64, 4875_f64, 0_f64, 21.1_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.37696_f64, 75.1_f64, 1.7301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 0.43202_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[148].get_regions()[6], &values);

    // ============================================================
    //  Jazz Guitar
    // ============================================================
    let values: [f64; 50] = [1457345_f64, 1459578_f64, 1458475_f64, 1458637_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 100_f64, 0.21601_f64, 0_f64, 0_f64, 0_f64, 48_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 34_f64, 3_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[0], &values);
    let values: [f64; 50] = [1457345_f64, 1459578_f64, 1458475_f64, 1458637_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 49_f64, 49_f64, 0_f64, 127_f64, 3_f64, 0_f64, 34_f64, 3_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[1], &values);
    let values: [f64; 50] = [1455964_f64, 1457313_f64, 1457176_f64, 1457305_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 50_f64, 52_f64, 0_f64, 127_f64, 3_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[2], &values);
    let values: [f64; 50] = [1455964_f64, 1457313_f64, 1457176_f64, 1457305_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 53_f64, 53_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[3], &values);
    let values: [f64; 50] = [1454567_f64, 1455932_f64, 1455831_f64, 1455924_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 54_f64, 58_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[4], &values);
    let values: [f64; 50] = [1454567_f64, 1455932_f64, 1455831_f64, 1455924_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 59_f64, 60_f64, 0_f64, 127_f64, 4.5_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[5], &values);
    let values: [f64; 50] = [1453125_f64, 1454535_f64, 1454457_f64, 1454527_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 61_f64, 65_f64, 0_f64, 127_f64, 3_f64, 0_f64, -19_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[6], &values);
    let values: [f64; 50] = [1451694_f64, 1453093_f64, 1453026_f64, 1453085_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 66_f64, 68_f64, 0_f64, 127_f64, 3_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[7], &values);
    let values: [f64; 50] = [1450308_f64, 1451662_f64, 1451610_f64, 1451654_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 69_f64, 71_f64, 0_f64, 127_f64, 3_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[8], &values);
    let values: [f64; 50] = [1450308_f64, 1451662_f64, 1451610_f64, 1451654_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 83.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 72_f64, 73_f64, 0_f64, 127_f64, 3_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[9], &values);
    let values: [f64; 50] = [1448956_f64, 1450276_f64, 1450235_f64, 1450268_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 79_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 74_f64, 85_f64, 0_f64, 127_f64, 3_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[10], &values);
    let values: [f64; 50] = [1448956_f64, 1450276_f64, 1450235_f64, 1450268_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 546.12_f64, 0_f64, 0_f64, 3486_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.5698_f64, 72.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 86_f64, 99_f64, 0_f64, 127_f64, 3.2_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 88_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[11], &values);
    let values: [f64; 50] = [1448530_f64, 1448924_f64, 1448906_f64, 1448916_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 504.86_f64, 0_f64, 0_f64, 3037_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 55.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 0.32197_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 1.5_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[149].get_regions()[12], &values);

    // ============================================================
    //  Steel Guitar
    // ============================================================
    let values: [f64; 50] = [1465968_f64, 1472506_f64, 1472280_f64, 1472498_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 64.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 13.897_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 48_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[0], &values);
    let values: [f64; 50] = [1463810_f64, 1465936_f64, 1465764_f64, 1465928_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 61.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 48_f64, 52_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[1], &values);
    let values: [f64; 50] = [1461648_f64, 1463778_f64, 1463651_f64, 1463770_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 59_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 53_f64, 58_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[2], &values);
    let values: [f64; 50] = [1459610_f64, 1461616_f64, 1461493_f64, 1461589_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 55.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 59_f64, 61_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 28_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[3], &values);
    let values: [f64; 50] = [1569731_f64, 1571244_f64, 1571164_f64, 1571236_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 53.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 62_f64, 66_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[4], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 51.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.3488_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 67_f64, 79_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[5], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3262_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 80_f64, 89_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[6], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3487_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 44.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 90_f64, 96_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[7], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 787.19_f64, 0_f64, 0_f64, 3375_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 42.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[150].get_regions()[8], &values);

    // ============================================================
    //  Nylon Guitar
    // ============================================================
    let values: [f64; 50] = [1485937_f64, 1488354_f64, 1488186_f64, 1488346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 73.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 0_f64, 43_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[0], &values);
    let values: [f64; 50] = [1485937_f64, 1488354_f64, 1488186_f64, 1488346_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 71.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 44_f64, 53_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[1], &values);
    let values: [f64; 50] = [1483732_f64, 1485905_f64, 1485772_f64, 1485897_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.44907_f64, 68.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 54_f64, 56_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, -16_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[2], &values);
    let values: [f64; 50] = [1481463_f64, 1483700_f64, 1483598_f64, 1483692_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.43202_f64, 66.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 57_f64, 62_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[3], &values);
    let values: [f64; 50] = [1479239_f64, 1481431_f64, 1481348_f64, 1481423_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 60.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[4], &values);
    let values: [f64; 50] = [1476986_f64, 1479207_f64, 1479140_f64, 1479199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 56.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 66_f64, 69_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[5], &values);
    let values: [f64; 50] = [1474748_f64, 1476954_f64, 1476899_f64, 1476946_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 53.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 70_f64, 71_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[6], &values);
    let values: [f64; 50] = [1474748_f64, 1476954_f64, 1476899_f64, 1476946_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 50.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 72_f64, 74_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[7], &values);
    let values: [f64; 50] = [1472538_f64, 1474716_f64, 1474670_f64, 1474708_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 48.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 75_f64, 84_f64, 0_f64, 127_f64, 7.2_f64, 0_f64, 23_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[8], &values);
    let values: [f64; 50] = [1472538_f64, 1474716_f64, 1474670_f64, 1474708_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 46.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 85_f64, 97_f64, 0_f64, 127_f64, 8_f64, 0_f64, 23_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[9], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3725_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.41706_f64, 55.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5905_f64, 100_f64, 0.60991_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -22_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[151].get_regions()[10], &values);

    // ============================================================
    //  Bandoneon0
    // ============================================================
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3449.6_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 7.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[0], &values);
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3449.6_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 7.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 48_f64, 56_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[1], &values);
    let values: [f64; 50] = [1497755_f64, 1498678_f64, 1498626_f64, 1498674_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3449.6_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 7_f64, 7.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[2], &values);
    let values: [f64; 50] = [1496897_f64, 1497723_f64, 1497689_f64, 1497719_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1250_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.23502_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 62_f64, 65_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, 8_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[3], &values);
    let values: [f64; 50] = [1496032_f64, 1496865_f64, 1496837_f64, 1496861_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1250_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.18396_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 66_f64, 72_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[4], &values);
    let values: [f64; 50] = [1495375_f64, 1496000_f64, 1495976_f64, 1495996_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1250_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.20901_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0070005_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.145_f64, 0_f64, 0_f64, 73_f64, 76_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -36_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[5], &values);
    let values: [f64; 50] = [1494775_f64, 1495343_f64, 1495323_f64, 1495339_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1250_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.19705_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -33_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[6], &values);
    let values: [f64; 50] = [1494224_f64, 1494743_f64, 1494726_f64, 1494739_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1247_f64, 0_f64, 0_f64, 7_f64, 7.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.19705_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 81_f64, 84_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[7], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1250_f64, 0_f64, 0_f64, 7_f64, 7.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.20901_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.00097656_f64, 2.8008_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 85_f64, 99_f64, 0_f64, 127_f64, 11.4_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[8], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3509.9_f64, 0_f64, 0_f64, 1251_f64, 0_f64, 0_f64, 7_f64, 7.4_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.23502_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.00097656_f64, 2.6497_f64, 4.5_f64, 0.14703_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 9.6_f64, 0_f64, 9_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[152].get_regions()[9], &values);

    // ============================================================
    //  Bandoneon1
    // ============================================================
    let values: [f64; 50] = [1492354_f64, 1493479_f64, 1493411_f64, 1493474_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.3094_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 20.4_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 53_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[0], &values);
    let values: [f64; 50] = [1491309_f64, 1492322_f64, 1492280_f64, 1492317_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.3094_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 48_f64, 52_f64, 0_f64, 127_f64, 21.9_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[1], &values);
    let values: [f64; 50] = [1490333_f64, 1491277_f64, 1491246_f64, 1491273_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.3094_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 53_f64, 58_f64, 0_f64, 127_f64, 26.4_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[2], &values);
    let values: [f64; 50] = [1489618_f64, 1490301_f64, 1490274_f64, 1490297_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.3094_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 59_f64, 61_f64, 0_f64, 127_f64, 27.9_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[3], &values);
    let values: [f64; 50] = [1488656_f64, 1489586_f64, 1489563_f64, 1489582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.1798_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 62_f64, 67_f64, 0_f64, 127_f64, 29.4_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[4], &values);
    let values: [f64; 50] = [1488656_f64, 1489586_f64, 1489563_f64, 1489582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.1798_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 68_f64, 72_f64, 0_f64, 127_f64, 30.2_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[5], &values);
    let values: [f64; 50] = [1488656_f64, 1489586_f64, 1489563_f64, 1489582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 5.4_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 2.1798_f64, 0_f64, 0.19797_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.019005_f64, 2.8497_f64, 4.3_f64, 0.15003_f64, 0_f64, 0_f64, 73_f64, 78_f64, 0_f64, 127_f64, 30.9_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[6], &values);
    let values: [f64; 50] = [1488386_f64, 1488624_f64, 1488615_f64, 1488620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3821_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 4.7_f64, -12.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 0_f64, 0.19502_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 2.8008_f64, 3.2_f64, 0.15204_f64, 0_f64, 0_f64, 79_f64, 99_f64, 0_f64, 127_f64, 32.4_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[7], &values);
    let values: [f64; 50] = [1488386_f64, 1488624_f64, 1488615_f64, 1488620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4090.5_f64, 0_f64, 0_f64, 1237_f64, 0_f64, 0_f64, 4.7_f64, -12.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 0_f64, 0.19502_f64, 0_f64, 0_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 2.8008_f64, 4.3_f64, 0.15204_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 35.4_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[153].get_regions()[8], &values);

    // ============================================================
    //  Harmonica
    // ============================================================
    let values: [f64; 50] = [1492354_f64, 1493479_f64, 1493411_f64, 1493474_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 49.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019005_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 0_f64, 59_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[0], &values);
    let values: [f64; 50] = [1491309_f64, 1492322_f64, 1492280_f64, 1492317_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 47.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 60_f64, 64_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[1], &values);
    let values: [f64; 50] = [1490333_f64, 1491277_f64, 1491246_f64, 1491273_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 45.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 65_f64, 70_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[2], &values);
    let values: [f64; 50] = [1489618_f64, 1490301_f64, 1490274_f64, 1490297_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 43.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.012_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 71_f64, 73_f64, 0_f64, 127_f64, 9_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[3], &values);
    let values: [f64; 50] = [1488656_f64, 1489586_f64, 1489563_f64, 1489582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 42.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 74_f64, 83_f64, 0_f64, 127_f64, 8.9_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[4], &values);
    let values: [f64; 50] = [1488656_f64, 1489586_f64, 1489563_f64, 1489582_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2025_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 41.2_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0079997_f64, 0.41394_f64, 10.697_f64, 0_f64, 0.16997_f64, 0_f64, 0_f64, 84_f64, 90_f64, 0_f64, 127_f64, 8.8_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[5], &values);
    let values: [f64; 50] = [1488386_f64, 1488624_f64, 1488615_f64, 1488620_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1780.5_f64, 0_f64, 25_f64, 2137_f64, 0.7_f64, 0_f64, 7_f64, 0.4_f64, 0.63288_f64, 5.4004_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 40.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0090002_f64, 0.41394_f64, 10.697_f64, 0.2_f64, 0.16997_f64, 0_f64, 0_f64, 91_f64, 108_f64, 0_f64, 127_f64, 10.6_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[154].get_regions()[6], &values);

    // ============================================================
    //  Accordion0
    // ============================================================
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 0_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[0], &values);
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 45_f64, 56_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[1], &values);
    let values: [f64; 50] = [1497755_f64, 1498678_f64, 1498626_f64, 1498674_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[2], &values);
    let values: [f64; 50] = [1496897_f64, 1497723_f64, 1497689_f64, 1497719_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 62_f64, 68_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[3], &values);
    let values: [f64; 50] = [1496032_f64, 1496865_f64, 1496837_f64, 1496861_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 69_f64, 72_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[4], &values);
    let values: [f64; 50] = [1495375_f64, 1496000_f64, 1495976_f64, 1495996_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.19502_f64, 0_f64, 0_f64, 73_f64, 76_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -34_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[5], &values);
    let values: [f64; 50] = [1494775_f64, 1495343_f64, 1495323_f64, 1495339_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[6], &values);
    let values: [f64; 50] = [1494224_f64, 1494743_f64, 1494726_f64, 1494739_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 81_f64, 84_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[7], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 85_f64, 93_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[8], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 94_f64, 96_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[9], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 97_f64, 98_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[10], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3999.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 2.9_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7401_f64, 0_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.96_f64, 2.4_f64, 0.22401_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[155].get_regions()[11], &values);

    // ============================================================
    //  Accordion1
    // ============================================================
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 0_f64, 44_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 4_f64, 1_f64, 100_f64, 0_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[0], &values);
    let values: [f64; 50] = [1497755_f64, 1498678_f64, 1498626_f64, 1498674_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 45_f64, 50_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 14_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[1], &values);
    let values: [f64; 50] = [1496897_f64, 1497723_f64, 1497689_f64, 1497719_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 51_f64, 56_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[2], &values);
    let values: [f64; 50] = [1496032_f64, 1496865_f64, 1496837_f64, 1496861_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 57_f64, 60_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[3], &values);
    let values: [f64; 50] = [1495375_f64, 1496000_f64, 1495976_f64, 1495996_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.18396_f64, 0_f64, 0_f64, 61_f64, 64_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[4], &values);
    let values: [f64; 50] = [1494775_f64, 1495343_f64, 1495323_f64, 1495339_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 65_f64, 68_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[5], &values);
    let values: [f64; 50] = [1494224_f64, 1494743_f64, 1494726_f64, 1494739_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 69_f64, 72_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[6], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.1_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 73_f64, 80_f64, 0_f64, 127_f64, 21.4_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[7], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 81_f64, 84_f64, 0_f64, 127_f64, 22.2_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[8], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 85_f64, 88_f64, 0_f64, 127_f64, 22.9_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[9], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4341.3_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 89_f64, 98_f64, 0_f64, 127_f64, 25.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[10], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4489.2_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -4.5_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.30708_f64, 100_f64, 0.089985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.98509_f64, 1.8_f64, 0.21095_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 29.7_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[156].get_regions()[11], &values);

    // ============================================================
    //  Reed Organ0
    // ============================================================
    let values: [f64; 50] = [1500646_f64, 1500933_f64, 1500713_f64, 1500925_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.056004_f64, 0.00097656_f64, 2.7195_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[0], &values);
    let values: [f64; 50] = [1500426_f64, 1500614_f64, 1500500_f64, 1500606_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.00097656_f64, 2.4396_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[1], &values);
    let values: [f64; 50] = [1500232_f64, 1500394_f64, 1500311_f64, 1500386_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.056004_f64, 0.00097656_f64, 2.4396_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 62_f64, 67_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[2], &values);
    let values: [f64; 50] = [1500082_f64, 1500200_f64, 1500139_f64, 1500192_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.056004_f64, 0.00097656_f64, 2.4396_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 68_f64, 73_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[3], &values);
    let values: [f64; 50] = [1499962_f64, 1500050_f64, 1500004_f64, 1500042_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.056004_f64, 0.00097656_f64, 2.4396_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 74_f64, 79_f64, 0_f64, 127_f64, 11.7_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[4], &values);
    let values: [f64; 50] = [1499864_f64, 1499930_f64, 1499895_f64, 1499922_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 634.98_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.058012_f64, 0.00097656_f64, 2.3201_f64, 0.5_f64, 0.27707_f64, 0_f64, 0_f64, 80_f64, 84_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[5], &values);
    let values: [f64; 50] = [1499864_f64, 1499930_f64, 1499895_f64, 1499922_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 634.98_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.056004_f64, 0.00097656_f64, 2.3201_f64, 1.6_f64, 0.27707_f64, 0_f64, 0_f64, 85_f64, 98_f64, 0_f64, 127_f64, 11_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[6], &values);
    let values: [f64; 50] = [1499793_f64, 1499832_f64, 1499811_f64, 1499824_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 671.96_f64, 0_f64, 0_f64, 4275_f64, 0.1_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.054002_f64, 0.00097656_f64, 2.1104_f64, 1.6_f64, 0.27707_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 12.5_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[157].get_regions()[7], &values);

    // ============================================================
    //  Reed Organ1
    // ============================================================
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.030998_f64, 0.00097656_f64, 1.4398_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 23.6_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[0], &values);
    let values: [f64; 50] = [1498710_f64, 1499761_f64, 1499697_f64, 1499757_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 56_f64, 58_f64, 0_f64, 127_f64, 22.8_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[1], &values);
    let values: [f64; 50] = [1497755_f64, 1498678_f64, 1498626_f64, 1498674_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.030998_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 59_f64, 60_f64, 0_f64, 127_f64, 22.8_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[2], &values);
    let values: [f64; 50] = [1496897_f64, 1497723_f64, 1497689_f64, 1497719_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 61_f64, 64_f64, 0_f64, 127_f64, 22.1_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[3], &values);
    let values: [f64; 50] = [1496897_f64, 1497723_f64, 1497689_f64, 1497719_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 65_f64, 68_f64, 0_f64, 127_f64, 21.3_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[4], &values);
    let values: [f64; 50] = [1496032_f64, 1496865_f64, 1496837_f64, 1496861_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 69_f64, 72_f64, 0_f64, 127_f64, 22.1_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[5], &values);
    let values: [f64; 50] = [1495375_f64, 1496000_f64, 1495976_f64, 1495996_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.24302_f64, 0_f64, 0_f64, 73_f64, 76_f64, 0_f64, 127_f64, 22.1_f64, 0_f64, -31_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[6], &values);
    let values: [f64; 50] = [1494775_f64, 1495343_f64, 1495323_f64, 1495339_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 22.1_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[7], &values);
    let values: [f64; 50] = [1494224_f64, 1494743_f64, 1494726_f64, 1494739_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 20.2_f64, 0.27707_f64, 0_f64, 0_f64, 81_f64, 84_f64, 0_f64, 127_f64, 22.1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[8], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 1.6_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.028002_f64, 0.00097656_f64, 1.3597_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 85_f64, 96_f64, 0_f64, 127_f64, 20.6_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[9], &values);
    let values: [f64; 50] = [1493686_f64, 1494192_f64, 1494175_f64, 1494188_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 97_f64, 105_f64, 0_f64, 127_f64, 20.6_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[10], &values);
    let values: [f64; 50] = [1493511_f64, 1493654_f64, 1493645_f64, 1493650_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 3_f64, 0_f64, 225_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 5.3786_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.93196_f64, 7.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.027001_f64, 0.00097656_f64, 1.2797_f64, 18.1_f64, 0.27707_f64, 0_f64, 0_f64, 106_f64, 108_f64, 0_f64, 127_f64, 21.3_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[158].get_regions()[11], &values);

    // ============================================================
    //  Church Organ0
    // ============================================================
    let values: [f64; 50] = [1559650_f64, 1559735_f64, 1559687_f64, 1559727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 1.5102_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.043011_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 0_f64, 56_f64, 0_f64, 127_f64, 39.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[0], &values);
    let values: [f64; 50] = [1559650_f64, 1559735_f64, 1559687_f64, 1559727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 1.5102_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 57_f64, 68_f64, 0_f64, 127_f64, 41.5_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[1], &values);
    let values: [f64; 50] = [1559650_f64, 1559735_f64, 1559687_f64, 1559727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 1.5102_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 69_f64, 80_f64, 0_f64, 127_f64, 45.2_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[2], &values);
    let values: [f64; 50] = [1559650_f64, 1559735_f64, 1559687_f64, 1559727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 1.5102_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.038009_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 81_f64, 91_f64, 0_f64, 127_f64, 52.7_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[3], &values);
    let values: [f64; 50] = [1504629_f64, 1504657_f64, 1504637_f64, 1504649_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 1.5102_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.036001_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 92_f64, 105_f64, 0_f64, 127_f64, 55.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 118_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[4], &values);
    let values: [f64; 50] = [1504629_f64, 1504657_f64, 1504637_f64, 1504649_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 0_f64, 5130_f64, 0_f64, 0_f64, 450_f64, 0_f64, 0_f64, 7_f64, 4.3_f64, 0.0099978_f64, 1.5102_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.031999_f64, 0.00097656_f64, 1.2797_f64, 1.3_f64, 0.72113_f64, 0_f64, 0_f64, 106_f64, 108_f64, 0_f64, 127_f64, 55.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 118_f64];
    instrument_util::check(&sf.get_instruments()[159].get_regions()[5], &values);

    // ============================================================
    //  Church Organ1
    // ============================================================
    let values: [f64; 50] = [1510745_f64, 1515665_f64, 1515274_f64, 1515657_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1012_f64, 0_f64, 0_f64, 7.8_f64, -1.9_f64, 0.0099978_f64, 0.67194_f64, 0.0099978_f64, 0.67194_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 37_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 0_f64, 56_f64, 0_f64, 127_f64, 13_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[160].get_regions()[0], &values);
    let values: [f64; 50] = [1507710_f64, 1510713_f64, 1510537_f64, 1510705_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1012_f64, 0_f64, 0_f64, 7.8_f64, -1.9_f64, 0.0099978_f64, 0.67194_f64, 0.0099978_f64, 0.67194_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 37_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 57_f64, 68_f64, 0_f64, 127_f64, 13_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[160].get_regions()[1], &values);
    let values: [f64; 50] = [1504689_f64, 1507678_f64, 1507586_f64, 1507670_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1012_f64, 0_f64, 0_f64, 7.8_f64, -1.9_f64, 0.0099978_f64, 0.67194_f64, 0.0099978_f64, 0.67194_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 37_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 69_f64, 80_f64, 0_f64, 127_f64, 13_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[160].get_regions()[2], &values);
    let values: [f64; 50] = [1501905_f64, 1504597_f64, 1504561_f64, 1504589_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1012_f64, 0_f64, 0_f64, 7.8_f64, -1.9_f64, 0.0099978_f64, 0.67194_f64, 0.0099978_f64, 0.67194_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.697_f64, 37_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.64283_f64, 0_f64, 0_f64, 81_f64, 94_f64, 0_f64, 127_f64, 12.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 103_f64];
    instrument_util::check(&sf.get_instruments()[160].get_regions()[3], &values);
    let values: [f64; 50] = [1500965_f64, 1501873_f64, 1501845_f64, 1501865_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1012_f64, 0_f64, 0_f64, 7.8_f64, -1.9_f64, 0.0099978_f64, 0.67194_f64, 0.0099978_f64, 0.67194_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 37_f64, 1.0401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.65406_f64, 0_f64, 0_f64, 95_f64, 108_f64, 0_f64, 127_f64, 12.2_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[160].get_regions()[4], &values);

    // ============================================================
    //  Organ 30
    // ============================================================
    let values: [f64; 50] = [1558138_f64, 1559618_f64, 1559488_f64, 1559610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 18_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 58_f64, 4950_f64, 0.7_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1091_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.20096_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 0_f64, 23_f64, 0_f64, 127_f64, 24.5_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[161].get_regions()[0], &values);
    let values: [f64; 50] = [1558138_f64, 1559618_f64, 1559488_f64, 1559610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 18_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 58_f64, 4950_f64, 0.7_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1091_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.20096_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 24_f64, 80_f64, 0_f64, 127_f64, 24.7_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[161].get_regions()[1], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 18_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 58_f64, 4950_f64, 0.7_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1091_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.20096_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 81_f64, 87_f64, 0_f64, 127_f64, 25.8_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[161].get_regions()[2], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 18_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 58_f64, 4950_f64, 0.7_f64, 11.7_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1091_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.20096_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 88_f64, 99_f64, 0_f64, 127_f64, 25_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[161].get_regions()[3], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 18_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 58_f64, 4950_f64, 0.7_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1091_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.20096_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 2.3_f64, 0.18903_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 25_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[161].get_regions()[4], &values);

    // ============================================================
    //  Organ 31
    // ============================================================
    let values: [f64; 50] = [1545415_f64, 1556140_f64, 1545905_f64, 1556136_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2189.5_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 0_f64, 58_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[0], &values);
    let values: [f64; 50] = [1535352_f64, 1545383_f64, 1535698_f64, 1545379_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 2189.5_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 59_f64, 62_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[1], &values);
    let values: [f64; 50] = [1535352_f64, 1545383_f64, 1535698_f64, 1545379_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 63_f64, 66_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[2], &values);
    let values: [f64; 50] = [1527087_f64, 1535320_f64, 1527545_f64, 1535316_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 67_f64, 71_f64, 0_f64, 127_f64, 12_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[3], &values);
    let values: [f64; 50] = [1527087_f64, 1535320_f64, 1527545_f64, 1535316_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.017_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 72_f64, 76_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 86_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[4], &values);
    let values: [f64; 50] = [1517021_f64, 1527055_f64, 1517997_f64, 1527051_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 13_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 77_f64, 85_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 95_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[5], &values);
    let values: [f64; 50] = [1515697_f64, 1516989_f64, 1516955_f64, 1516981_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2339.9_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 41.1_f64, 7_f64, 2.7_f64, 0.0099978_f64, 5.46_f64, 0.0099978_f64, 5.46_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 0.2_f64, 0.13197_f64, 0_f64, 0_f64, 86_f64, 108_f64, 0_f64, 127_f64, 18.9_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[162].get_regions()[6], &values);

    // ============================================================
    //  Organ 2
    // ============================================================
    let values: [f64; 50] = [1558138_f64, 1559618_f64, 1559488_f64, 1559610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 56_f64, 4950_f64, 0.3_f64, 12.5_f64, 7_f64, 0_f64, 0.27997_f64, 7.2295_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.35994_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 0_f64, 23_f64, 0_f64, 127_f64, 3.7_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[163].get_regions()[0], &values);
    let values: [f64; 50] = [1558138_f64, 1559618_f64, 1559488_f64, 1559610_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 56_f64, 4950_f64, 0.3_f64, 12.5_f64, 7_f64, 0_f64, 0.27997_f64, 7.2295_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 24_f64, 80_f64, 0_f64, 127_f64, 3.9_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[163].get_regions()[1], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 56_f64, 4950_f64, 0.3_f64, 12.5_f64, 7_f64, 0_f64, 0.27997_f64, 7.2295_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 81_f64, 87_f64, 0_f64, 127_f64, 5_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[163].get_regions()[2], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 56_f64, 4950_f64, 0.3_f64, 11.7_f64, 7_f64, 0_f64, 0.27997_f64, 7.2295_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 0_f64, 0.18903_f64, 0_f64, 0_f64, 88_f64, 99_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[163].get_regions()[3], &values);
    let values: [f64; 50] = [1556172_f64, 1558106_f64, 1558038_f64, 1558098_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 56_f64, 4950_f64, 0.3_f64, 12.5_f64, 7_f64, 0_f64, 0.27997_f64, 7.2295_f64, 0.0099978_f64, 7.2295_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.32197_f64, 2.3_f64, 0.18903_f64, 0_f64, 0_f64, 100_f64, 108_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[163].get_regions()[4], &values);

    // ============================================================
    //  Organ 1
    // ============================================================
    let values: [f64; 50] = [1559913_f64, 1560470_f64, 1560250_f64, 1560462_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4950_f64, 0.8_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 7.0603_f64, 0.0099978_f64, 7.0603_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 22_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0899_f64, 1.7_f64, 0.24302_f64, 0_f64, 0_f64, 0_f64, 72_f64, 0_f64, 127_f64, 9.9_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[164].get_regions()[0], &values);
    let values: [f64; 50] = [1559913_f64, 1560470_f64, 1560250_f64, 1560462_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4950_f64, 0.8_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 7.0603_f64, 0.0099978_f64, 7.0603_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 22_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0899_f64, 0.6_f64, 0.24302_f64, 0_f64, 0_f64, 73_f64, 91_f64, 0_f64, 127_f64, 11_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[164].get_regions()[1], &values);
    let values: [f64; 50] = [1559767_f64, 1559881_f64, 1559812_f64, 1559873_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4950_f64, 0.8_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 7.0603_f64, 0.0099978_f64, 7.0603_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 22_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.0899_f64, 0.6_f64, 0.24302_f64, 0_f64, 0_f64, 92_f64, 104_f64, 0_f64, 127_f64, 14.3_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 90_f64];
    instrument_util::check(&sf.get_instruments()[164].get_regions()[2], &values);
    let values: [f64; 50] = [1559650_f64, 1559735_f64, 1559687_f64, 1559727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4950_f64, 0.8_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 7.0603_f64, 0.0099978_f64, 7.0603_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 22_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0899_f64, 0.6_f64, 0.25305_f64, 0_f64, 0_f64, 105_f64, 108_f64, 0_f64, 127_f64, 16.4_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 97_f64];
    instrument_util::check(&sf.get_instruments()[164].get_regions()[3], &values);

    // ============================================================
    //  Dulcimer0
    // ============================================================
    let values: [f64; 50] = [1569731_f64, 1571244_f64, 1571164_f64, 1571236_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 100_f64, 2.5698_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 0_f64, 52_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[0], &values);
    let values: [f64; 50] = [1569731_f64, 1571244_f64, 1571164_f64, 1571236_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7901_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 100_f64, 1.8596_f64, 0_f64, 0_f64, 53_f64, 58_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[1], &values);
    let values: [f64; 50] = [1569731_f64, 1571244_f64, 1571164_f64, 1571236_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7301_f64, 97.9_f64, 2.2102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 100_f64, 1.7901_f64, 0_f64, 0_f64, 59_f64, 66_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 30_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[2], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 92.6_f64, 2.1104_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 67_f64, 74_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[3], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 89.5_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.16_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 75_f64, 82_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[4], &values);
    let values: [f64; 50] = [1568431_f64, 1569699_f64, 1569637_f64, 1569691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 86.3_f64, 1.9397_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.1102_f64, 100_f64, 1.6096_f64, 0_f64, 0_f64, 83_f64, 89_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[5], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 79_f64, 1.8596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0601_f64, 100_f64, 1.8596_f64, 0_f64, 0_f64, 90_f64, 96_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[6], &values);
    let values: [f64; 50] = [1568151_f64, 1568399_f64, 1568380_f64, 1568391_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 73.7_f64, 1.6702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0099_f64, 100_f64, 1.8596_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 107_f64];
    instrument_util::check(&sf.get_instruments()[165].get_regions()[7], &values);

    // ============================================================
    //  Dulcimer1
    // ============================================================
    let values: [f64; 50] = [1561676_f64, 1568119_f64, 1568055_f64, 1568111_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 81.1_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[0], &values);
    let values: [f64; 50] = [1561676_f64, 1568119_f64, 1568055_f64, 1568111_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 73.7_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[1], &values);
    let values: [f64; 50] = [1561676_f64, 1568119_f64, 1568055_f64, 1568111_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 68.5_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 1.8596_f64, 0_f64, 0_f64, 62_f64, 69_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[2], &values);
    let values: [f64; 50] = [1561676_f64, 1568119_f64, 1568055_f64, 1568111_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5096_f64, 63.2_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 1.7901_f64, 0_f64, 0_f64, 70_f64, 77_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[3], &values);
    let values: [f64; 50] = [1561676_f64, 1568119_f64, 1568055_f64, 1568111_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.4398_f64, 59_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 78_f64, 85_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[4], &values);
    let values: [f64; 50] = [1560502_f64, 1561644_f64, 1561622_f64, 1561636_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.3597_f64, 54.8_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 86_f64, 89_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 103_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[5], &values);
    let values: [f64; 50] = [1560502_f64, 1561644_f64, 1561622_f64, 1561636_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 50.6_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.6096_f64, 0_f64, 0_f64, 90_f64, 96_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 103_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[6], &values);
    let values: [f64; 50] = [1560502_f64, 1561644_f64, 1561622_f64, 1561636_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2198_f64, 85.3_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 100_f64, 1.5601_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 103_f64];
    instrument_util::check(&sf.get_instruments()[166].get_regions()[7], &values);

    // ============================================================
    //  Tubular Bells
    // ============================================================
    let values: [f64; 50] = [532821_f64, 568470_f64, 557857_f64, 568453_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1719.8_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7301_f64, 100_f64, 1.6096_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 18.496_f64, 100_f64, 9.7698_f64, 0_f64, 0_f64, 0_f64, 108_f64, 0_f64, 127_f64, 0_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[167].get_regions()[0], &values);

    // ============================================================
    //  Xylophone0
    // ============================================================
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0601_f64, 100_f64, 1.16_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0_f64, 56_f64, 0_f64, 127_f64, 7_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[168].get_regions()[0], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.96985_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 57_f64, 66_f64, 0_f64, 127_f64, 7_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[168].get_regions()[1], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.8971_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5096_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 7_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[168].get_regions()[2], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 100_f64, 0.8971_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 100_f64, 1.5096_f64, 0_f64, 0_f64, 79_f64, 87_f64, 0_f64, 127_f64, 6.2_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[168].get_regions()[3], &values);

    // ============================================================
    //  Xylophone1
    // ============================================================
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 0.80618_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0601_f64, 100_f64, 1.2797_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 4_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[169].get_regions()[0], &values);
    let values: [f64; 50] = [1571276_f64, 1571632_f64, 1571612_f64, 1571624_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3150.6_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, -41.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 100_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 88_f64, 108_f64, 0_f64, 127_f64, 21.8_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[169].get_regions()[1], &values);

    // ============================================================
    //  Xylophone2
    // ============================================================
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0601_f64, 100_f64, 1.16_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6702_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0_f64, 56_f64, 0_f64, 127_f64, 5_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[170].get_regions()[0], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.96985_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.6096_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 57_f64, 66_f64, 0_f64, 127_f64, 5_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[170].get_regions()[1], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.8971_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5096_f64, 100_f64, 1.6702_f64, 0_f64, 0_f64, 67_f64, 78_f64, 0_f64, 127_f64, 5_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[170].get_regions()[2], &values);
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.83412_f64, 100_f64, 0.8971_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.2797_f64, 100_f64, 1.5096_f64, 0_f64, 0_f64, 79_f64, 87_f64, 0_f64, 127_f64, 4.2_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[170].get_regions()[3], &values);

    // ============================================================
    //  Xylophone3
    // ============================================================
    let values: [f64; 50] = [1571664_f64, 1574114_f64, 1574051_f64, 1574106_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3080.4_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 0.80618_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.0601_f64, 100_f64, 1.2797_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 2_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[171].get_regions()[0], &values);
    let values: [f64; 50] = [1571276_f64, 1571632_f64, 1571612_f64, 1571624_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3150.6_f64, 0_f64, 0_f64, 1350_f64, 0_f64, 0_f64, 7_f64, 31.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.58002_f64, 100_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.75393_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 88_f64, 108_f64, 0_f64, 127_f64, 19.8_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[171].get_regions()[1], &values);

    // ============================================================
    //  Marimba
    // ============================================================
    let values: [f64; 50] = [1579661_f64, 1585435_f64, 1585242_f64, 1585427_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.46598_f64, 100_f64, 0.39003_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 2.7195_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 4.6_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[172].get_regions()[0], &values);
    let values: [f64; 50] = [1574762_f64, 1579629_f64, 1579537_f64, 1579621_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.33994_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.7301_f64, 0_f64, 0_f64, 55_f64, 75_f64, 0_f64, 127_f64, 4.6_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[172].get_regions()[1], &values);
    let values: [f64; 50] = [1574762_f64, 1579629_f64, 1579537_f64, 1579621_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26395_f64, 100_f64, 0.20201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 100_f64, 1.5601_f64, 0_f64, 0_f64, 76_f64, 89_f64, 0_f64, 127_f64, 4.4_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[172].get_regions()[2], &values);
    let values: [f64; 50] = [1574146_f64, 1574730_f64, 1574712_f64, 1574722_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.20901_f64, 100_f64, 0.16099_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.9397_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 90_f64, 108_f64, 0_f64, 127_f64, 9.1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[172].get_regions()[3], &values);

    // ============================================================
    //  Vibraphone
    // ============================================================
    let values: [f64; 50] = [1590508_f64, 1597905_f64, 1597828_f64, 1597897_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 1.5601_f64, 0_f64, 0_f64, 0_f64, 54_f64, 0_f64, 127_f64, 8.6_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[0], &values);
    let values: [f64; 50] = [1590508_f64, 1597905_f64, 1597828_f64, 1597897_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 1.5601_f64, 0_f64, 0_f64, 55_f64, 63_f64, 0_f64, 127_f64, 7.9_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[1], &values);
    let values: [f64; 50] = [1590508_f64, 1597905_f64, 1597828_f64, 1597897_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 1.4398_f64, 0_f64, 0_f64, 64_f64, 69_f64, 0_f64, 127_f64, 7.1_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[2], &values);
    let values: [f64; 50] = [1585930_f64, 1590476_f64, 1590428_f64, 1590468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 0.8971_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 1.2797_f64, 0_f64, 0_f64, 70_f64, 75_f64, 0_f64, 127_f64, 7.1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[3], &values);
    let values: [f64; 50] = [1585930_f64, 1590476_f64, 1590428_f64, 1590468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 1.16_f64, 0_f64, 0_f64, 76_f64, 83_f64, 0_f64, 127_f64, 7.1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[4], &values);
    let values: [f64; 50] = [1585930_f64, 1590476_f64, 1590428_f64, 1590468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.0197_f64, 100_f64, 0.77916_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 84_f64, 90_f64, 0_f64, 127_f64, 7.1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[5], &values);
    let values: [f64; 50] = [1585467_f64, 1585898_f64, 1585880_f64, 1585890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 25_f64, 1375_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 100_f64, 0.72113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 100_f64, 0.96985_f64, 0_f64, 0_f64, 91_f64, 97_f64, 0_f64, 127_f64, 9.6_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[6], &values);
    let values: [f64; 50] = [1585467_f64, 1585898_f64, 1585880_f64, 1585890_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 25_f64, 1350_f64, 2.3_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.2104_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.8596_f64, 100_f64, 0.67987_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 0.8971_f64, 0_f64, 0_f64, 98_f64, 108_f64, 0_f64, 127_f64, 10.1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[173].get_regions()[7], &values);

    // ============================================================
    //  MusicBox
    // ============================================================
    let values: [f64; 50] = [351602_f64, 366908_f64, 360141_f64, 366901_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0.0099978_f64, 0.099999_f64, 0.0099978_f64, 4.7204_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 5.6113_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0039999_f64, 0.00097656_f64, 21.003_f64, 6.6_f64, 6.0594_f64, 0_f64, 0_f64, 12_f64, 119_f64, 0_f64, 127_f64, 10_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[174].get_regions()[0], &values);

    // ============================================================
    //  Glockenspiel
    // ============================================================
    let values: [f64; 50] = [1599070_f64, 1607838_f64, 1607379_f64, 1607830_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 1462_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 10.998_f64, 100_f64, 33.301_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00099997_f64, 25.398_f64, 100_f64, 24.904_f64, 0_f64, 25_f64, 0_f64, 50_f64, 0_f64, 127_f64, 3_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[175].get_regions()[0], &values);
    let values: [f64; 50] = [1599070_f64, 1607838_f64, 1607379_f64, 1607830_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 1462_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.0092_f64, 100_f64, 23.304_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00099997_f64, 15.102_f64, 100_f64, 19.005_f64, 0_f64, 25_f64, 51_f64, 71_f64, 0_f64, 127_f64, 2.5_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[175].get_regions()[1], &values);
    let values: [f64; 50] = [1599070_f64, 1607838_f64, 1607379_f64, 1607830_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 1462_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3203_f64, 100_f64, 14.596_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00099997_f64, 11.897_f64, 100_f64, 8.0092_f64, 0_f64, 25_f64, 72_f64, 84_f64, 0_f64, 127_f64, 2_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[175].get_regions()[2], &values);
    let values: [f64; 50] = [1599070_f64, 1607838_f64, 1607379_f64, 1607830_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 2137_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.2114_f64, 100_f64, 12.402_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00099997_f64, 9.0526_f64, 100_f64, 5.7094_f64, 0_f64, 25_f64, 85_f64, 95_f64, 0_f64, 127_f64, 0_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[175].get_regions()[3], &values);
    let values: [f64; 50] = [1597937_f64, 1599038_f64, 1598953_f64, 1599030_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2779.4_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.26304_f64, 100_f64, 0.39207_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00099997_f64, 6.4606_f64, 100_f64, 4.4408_f64, 0_f64, 25_f64, 96_f64, 108_f64, 0_f64, 127_f64, 6.5_f64, 0_f64, -36_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[175].get_regions()[4], &values);

    // ============================================================
    //  Celesta
    // ============================================================
    let values: [f64; 50] = [1608208_f64, 1617780_f64, 1617100_f64, 1617772_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 2.3201_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 3.5206_f64, 0_f64, 0_f64, 0_f64, 71_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[176].get_regions()[0], &values);
    let values: [f64; 50] = [1608208_f64, 1617780_f64, 1617100_f64, 1617772_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 2.4396_f64, 100_f64, 2.0197_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 2.7195_f64, 0_f64, 0_f64, 72_f64, 96_f64, 0_f64, 127_f64, 15_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[176].get_regions()[1], &values);
    let values: [f64; 50] = [1607870_f64, 1608176_f64, 1608157_f64, 1608168_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2970.3_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.0197_f64, 100_f64, 1.9397_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 2.2102_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 119_f64];
    instrument_util::check(&sf.get_instruments()[176].get_regions()[2], &values);

    // ============================================================
    //  Clavinet
    // ============================================================
    let values: [f64; 50] = [1625979_f64, 1627741_f64, 1627279_f64, 1627733_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 93.7_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[0], &values);
    let values: [f64; 50] = [1624688_f64, 1625947_f64, 1625606_f64, 1625939_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 88.4_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 36_f64, 39_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[1], &values);
    let values: [f64; 50] = [1624688_f64, 1625947_f64, 1625606_f64, 1625939_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3600_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 81.1_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 40_f64, 41_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[2], &values);
    let values: [f64; 50] = [1623239_f64, 1624656_f64, 1624421_f64, 1624648_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 79_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 42_f64, 45_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[3], &values);
    let values: [f64; 50] = [1623239_f64, 1624656_f64, 1624421_f64, 1624648_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 79_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 46_f64, 48_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 55_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[4], &values);
    let values: [f64; 50] = [1621624_f64, 1623207_f64, 1623032_f64, 1623199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 76.9_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 49_f64, 51_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[5], &values);
    let values: [f64; 50] = [1621624_f64, 1623207_f64, 1623032_f64, 1623199_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 74.8_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 52_f64, 55_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[6], &values);
    let values: [f64; 50] = [1620047_f64, 1621592_f64, 1621458_f64, 1621584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 72.7_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 56_f64, 57_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[7], &values);
    let values: [f64; 50] = [1620047_f64, 1621592_f64, 1621458_f64, 1621584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 70.6_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 58_f64, 59_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[8], &values);
    let values: [f64; 50] = [1618884_f64, 1620015_f64, 1619918_f64, 1620007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.5698_f64, 68.5_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 60_f64, 63_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[9], &values);
    let values: [f64; 50] = [1618884_f64, 1620015_f64, 1619918_f64, 1620007_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 3825_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 65.3_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 64_f64, 66_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[10], &values);
    let values: [f64; 50] = [1617812_f64, 1618660_f64, 1618599_f64, 1618652_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4396_f64, 65.3_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 67_f64, 69_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[11], &values);
    let values: [f64; 50] = [1617812_f64, 1618660_f64, 1618599_f64, 1618652_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2102_f64, 64.3_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 70_f64, 78_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[12], &values);
    let values: [f64; 50] = [1617812_f64, 1618660_f64, 1618599_f64, 1618652_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.9397_f64, 62.2_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.1411_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 79_f64, 85_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[13], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 598.99_f64, 0_f64, 0_f64, 4162_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.7901_f64, 62.2_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.2792_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 86_f64, 95_f64, 0_f64, 127_f64, 15.9_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[14], &values);
    let values: [f64; 50] = [1618692_f64, 1618852_f64, 1618834_f64, 1618844_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 3712_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.5601_f64, 61.1_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 3.0702_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 96_f64, 108_f64, 0_f64, 127_f64, 16.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[177].get_regions()[15], &values);

    // ============================================================
    //  Harpsichord
    // ============================================================
    let values: [f64; 50] = [1628441_f64, 1630601_f64, 1630333_f64, 1630593_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 18.2_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[0], &values);
    let values: [f64; 50] = [1628441_f64, 1630601_f64, 1630333_f64, 1630593_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 42_f64, 47_f64, 0_f64, 127_f64, 17.5_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[1], &values);
    let values: [f64; 50] = [1635508_f64, 1636886_f64, 1636741_f64, 1636878_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.7195_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 48_f64, 55_f64, 0_f64, 127_f64, 17.5_f64, 0_f64, 44_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[2], &values);
    let values: [f64; 50] = [1633776_f64, 1635476_f64, 1635381_f64, 1635468_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 2.2102_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.709_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 56_f64, 67_f64, 0_f64, 127_f64, 17.5_f64, 0_f64, -42_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[3], &values);
    let values: [f64; 50] = [1632269_f64, 1633744_f64, 1633684_f64, 1633736_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2925_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.6702_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 68_f64, 80_f64, 0_f64, 127_f64, 14.7_f64, 0_f64, -32_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[4], &values);
    let values: [f64; 50] = [1630633_f64, 1632237_f64, 1632204_f64, 1632229_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1180.1_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 1.3597_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 81_f64, 93_f64, 0_f64, 127_f64, 13.7_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 93_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[5], &values);
    let values: [f64; 50] = [1627773_f64, 1628409_f64, 1628391_f64, 1628401_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1250.3_f64, 0_f64, 0_f64, 2812_f64, 0_f64, 0_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 0.83412_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 0.25305_f64, 0_f64, 0_f64, 94_f64, 108_f64, 0_f64, 127_f64, 11_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[178].get_regions()[6], &values);

    // ============================================================
    //  E.Piano 2
    // ============================================================
    let values: [f64; 50] = [1645808_f64, 1648610_f64, 1648411_f64, 1648602_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2260.2_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 14.1_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 46.4_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 0_f64, 53_f64, 0_f64, 127_f64, 13.4_f64, 0_f64, 19_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[0], &values);
    let values: [f64; 50] = [1643480_f64, 1645776_f64, 1645663_f64, 1645768_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2260.2_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 13.3_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 35.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 54_f64, 63_f64, 0_f64, 127_f64, 12.4_f64, 0_f64, -17_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[1], &values);
    let values: [f64; 50] = [1641280_f64, 1643448_f64, 1643377_f64, 1643440_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2260.2_f64, 0_f64, 0_f64, 1575_f64, 0_f64, 12.5_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 30.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 64_f64, 69_f64, 0_f64, 127_f64, 15.1_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[2], &values);
    let values: [f64; 50] = [1639679_f64, 1641248_f64, 1641195_f64, 1641240_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2260.2_f64, 0_f64, 0_f64, 1525_f64, 0_f64, 10.9_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 26.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 7.3488_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 70_f64, 78_f64, 0_f64, 127_f64, 8.9_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[3], &values);
    let values: [f64; 50] = [1637593_f64, 1639647_f64, 1639607_f64, 1639639_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2189.5_f64, 0_f64, 0_f64, 1375_f64, 0_f64, 10.1_f64, 7_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 24.4_f64, 1.1102_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 5.6113_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 79_f64, 94_f64, 0_f64, 127_f64, 7.9_f64, 0_f64, 27_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[4], &values);
    let values: [f64; 50] = [1636918_f64, 1637561_f64, 1637543_f64, 1637553_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2189.5_f64, 0_f64, 0_f64, 1025_f64, 0_f64, 9.4_f64, 7_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 43.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 4.5289_f64, 100_f64, 0.44907_f64, 0_f64, 0_f64, 95_f64, 108_f64, 0_f64, 127_f64, 8.8_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[179].get_regions()[5], &values);

    // ============================================================
    //  E.Piano 10
    // ============================================================
    let values: [f64; 50] = [1659889_f64, 1662117_f64, 1661742_f64, 1662109_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 100_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 28.198_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 14.2_f64, 0_f64, 50_f64, 1_f64, 100_f64, 0_f64, 47_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[0], &values);
    let values: [f64; 50] = [1658457_f64, 1659857_f64, 1659688_f64, 1659849_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.13197_f64, 97.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 42_f64, 51_f64, 0_f64, 127_f64, 15_f64, 0_f64, 24_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[1], &values);
    let values: [f64; 50] = [1657179_f64, 1658425_f64, 1658322_f64, 1658417_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.12696_f64, 95.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 19.801_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 52_f64, 56_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[2], &values);
    let values: [f64; 50] = [1657179_f64, 1658425_f64, 1658322_f64, 1658417_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.122_f64, 92.6_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 10_f64, 1_f64, 100_f64, 0_f64, 70_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[3], &values);
    let values: [f64; 50] = [1655890_f64, 1657147_f64, 1657071_f64, 1657139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.11697_f64, 89.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 13.897_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 62_f64, 65_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[4], &values);
    let values: [f64; 50] = [1655890_f64, 1657147_f64, 1657071_f64, 1657139_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2870.8_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.11201_f64, 86.3_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 10.697_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 66_f64, 70_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 32_f64, 1_f64, 100_f64, 0_f64, 76_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[5], &values);
    let values: [f64; 50] = [1654554_f64, 1655858_f64, 1655802_f64, 1655850_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1840.1_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.11697_f64, 82.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 8.709_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 71_f64, 78_f64, 0_f64, 127_f64, 15.7_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[6], &values);
    let values: [f64; 50] = [1654554_f64, 1655858_f64, 1655802_f64, 1655850_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1559.9_f64, 0_f64, 0_f64, 1687_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.11201_f64, 82.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.13798_f64, 6.3606_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 79_f64, 91_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[7], &values);
    let values: [f64; 50] = [1654193_f64, 1654522_f64, 1654502_f64, 1654514_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2590.3_f64, 0_f64, 0_f64, 1800_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.108_f64, 77.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.29001_f64, 0_f64, 0_f64, 92_f64, 108_f64, 0_f64, 127_f64, 11.2_f64, 0_f64, 29_f64, 1_f64, 100_f64, 0_f64, 106_f64];
    instrument_util::check(&sf.get_instruments()[180].get_regions()[8], &values);

    // ============================================================
    //  E.Piano 11
    // ============================================================
    let values: [f64; 50] = [1652263_f64, 1654161_f64, 1653961_f64, 1654153_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.6113_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 0_f64, 41_f64, 0_f64, 127_f64, 30_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[0], &values);
    let values: [f64; 50] = [1652263_f64, 1654161_f64, 1653961_f64, 1654153_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.0107_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 42_f64, 51_f64, 0_f64, 127_f64, 30.7_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[1], &values);
    let values: [f64; 50] = [1652263_f64, 1654161_f64, 1653961_f64, 1654153_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 52_f64, 56_f64, 0_f64, 127_f64, 33.7_f64, 0_f64, 26_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[2], &values);
    let values: [f64; 50] = [1651346_f64, 1652231_f64, 1652147_f64, 1652223_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 57_f64, 61_f64, 0_f64, 127_f64, 38.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[3], &values);
    let values: [f64; 50] = [1650447_f64, 1651314_f64, 1651246_f64, 1651306_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.8106_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 62_f64, 65_f64, 0_f64, 127_f64, 39.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[4], &values);
    let values: [f64; 50] = [1649545_f64, 1650415_f64, 1650356_f64, 1650407_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2510.7_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 0.58002_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.5206_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 66_f64, 68_f64, 0_f64, 127_f64, 40.5_f64, 0_f64, 31_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[5], &values);
    let values: [f64; 50] = [1648838_f64, 1649513_f64, 1649463_f64, 1649505_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1559.9_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.2792_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 69_f64, 78_f64, 0_f64, 127_f64, 43.5_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[6], &values);
    let values: [f64; 50] = [1648838_f64, 1649513_f64, 1649463_f64, 1649505_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1069.8_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 6.3606_f64, 100_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.0702_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 79_f64, 90_f64, 0_f64, 127_f64, 45_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[7], &values);
    let values: [f64; 50] = [1648642_f64, 1648806_f64, 1648788_f64, 1648798_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1450.4_f64, 0_f64, 0_f64, 2025_f64, 0_f64, 0_f64, 7_f64, -10.5_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 100_f64, 28.198_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.8795_f64, 100_f64, 0.64283_f64, 0_f64, 0_f64, 91_f64, 108_f64, 0_f64, 127_f64, 47.2_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[181].get_regions()[8], &values);

    // ============================================================
    //  Honky Tonk0
    // ============================================================
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 26.508_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 32_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 29_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[0], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 23.507_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 28.198_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 30_f64, 35_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[1], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 36_f64, 38_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[2], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 39_f64, 43_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 43_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[3], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 43_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[4], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 45_f64, 50_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[5], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[6], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 52_f64, 55_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[7], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 56_f64, 57_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[8], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 58_f64, 62_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[9], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 63_f64, 64_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 46_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[10], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 65_f64, 67_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[11], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 68_f64, 69_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -43_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[12], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[13], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 71_f64, 80_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[14], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 81_f64, 83_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[15], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 84_f64, 86_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[16], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[17], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[18], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 89_f64, 89_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[19], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[20], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 92_f64, 93_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[21], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 94_f64, 95_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[22], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 96_f64, 96_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[23], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[24], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[25], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, -5.8_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 18_f64, 0_f64, 40_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[182].get_regions()[26], &values);

    // ============================================================
    //  Honky Tonk1
    // ============================================================
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 26.508_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 32_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 29_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -17_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[0], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 23.507_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 28.198_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 30_f64, 35_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -17_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[1], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 36_f64, 38_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -17_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[2], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 39_f64, 43_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[3], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 36_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[4], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 45_f64, 50_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[5], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[6], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 52_f64, 55_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[7], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 56_f64, 57_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 5_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[8], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 58_f64, 62_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[9], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 63_f64, 64_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, 39_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[10], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 65_f64, 67_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[11], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 68_f64, 69_f64, 0_f64, 127_f64, 18.7_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[12], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[13], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 71_f64, 80_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[14], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 81_f64, 83_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[15], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 84_f64, 86_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[16], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[17], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[18], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 89_f64, 89_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[19], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[20], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.3899_f64, 0_f64, 0_f64, 92_f64, 93_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[21], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 94_f64, 95_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[22], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 96_f64, 96_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[23], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[24], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[25], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1149.8_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 6.7_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 18_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[183].get_regions()[26], &values);

    // ============================================================
    //  Piano 30
    // ============================================================
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1270_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 29.995_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 18_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[0], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1270_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 26.508_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 36_f64, 37_f64, 0_f64, 127_f64, 18_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[1], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1270_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 26.508_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 38_f64, 39_f64, 0_f64, 127_f64, 18_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[2], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1230.2_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 25.005_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 40_f64, 41_f64, 0_f64, 127_f64, 18_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[3], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1230.2_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 25.005_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 42_f64, 43_f64, 0_f64, 127_f64, 18_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[4], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1230.2_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 25.005_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 18_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[5], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1230.2_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 25.005_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 18_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[6], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1230.2_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 25.005_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 18_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[7], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 47_f64, 50_f64, 0_f64, 127_f64, 18_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[8], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 18_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[9], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 18_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[10], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 53_f64, 54_f64, 0_f64, 127_f64, 18_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[11], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 18_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[12], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 18_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[13], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 20.797_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 57_f64, 58_f64, 0_f64, 127_f64, 18_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[14], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 59_f64, 61_f64, 0_f64, 127_f64, 18_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[15], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 18_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[16], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 18_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[17], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 23.507_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 18_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[18], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 19.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 67_f64, 71_f64, 0_f64, 127_f64, 18_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[19], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.072001_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 19.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 18_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[20], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 17.499_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 73_f64, 76_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[21], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 1_f64, 17.499_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[22], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[23], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 82_f64, 83_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[24], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[25], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[26], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[27], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.91595_f64, 14.698_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 87_f64, 89_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[28], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.51614_f64, 11.1_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[29], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.51614_f64, 11.1_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 92_f64, 96_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[30], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.11998_f64, 5.3394_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[31], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.11998_f64, 5.3394_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[32], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1360.3_f64, 0_f64, 0_f64, 2587_f64, 0_f64, 0_f64, 7_f64, 5.1_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0019999_f64, 0.11998_f64, 5.3394_f64, 100_f64, 0.9298_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 18_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[184].get_regions()[33], &values);

    // ============================================================
    //  Piano 31
    // ============================================================
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 0_f64, 35_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[0], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 36_f64, 37_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[1], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 38_f64, 39_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[2], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 40_f64, 41_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[3], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 42_f64, 43_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[4], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 16.497_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[5], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 45_f64, 45_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[6], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 46_f64, 46_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[7], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 47_f64, 50_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[8], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[9], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[10], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 53_f64, 54_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[11], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 55_f64, 55_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[12], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[13], &values);
    let values: [f64; 50] = [1664732_f64, 1665396_f64, 1665230_f64, 1665388_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.012_f64, 15.598_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 57_f64, 58_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -9_f64, 1_f64, 100_f64, 0_f64, 61_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[14], &values);
    let values: [f64; 50] = [1664186_f64, 1664700_f64, 1664591_f64, 1664692_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 59_f64, 61_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[15], &values);
    let values: [f64; 50] = [1664186_f64, 1664700_f64, 1664591_f64, 1664692_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 62_f64, 62_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[16], &values);
    let values: [f64; 50] = [1664186_f64, 1664700_f64, 1664591_f64, 1664692_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.7401_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.699_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[17], &values);
    let values: [f64; 50] = [1663624_f64, 1664154_f64, 1664095_f64, 1664146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.1_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 66_f64, 66_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[18], &values);
    let values: [f64; 50] = [1663624_f64, 1664154_f64, 1664095_f64, 1664146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.1_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 67_f64, 71_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[19], &values);
    let values: [f64; 50] = [1663624_f64, 1664154_f64, 1664095_f64, 1664146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.1_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 72_f64, 72_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[20], &values);
    let values: [f64; 50] = [1663624_f64, 1664154_f64, 1664095_f64, 1664146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 11.1_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 73_f64, 76_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, 33_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[21], &values);
    let values: [f64; 50] = [1663009_f64, 1663592_f64, 1663553_f64, 1663584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 7.46_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[22], &values);
    let values: [f64; 50] = [1663009_f64, 1663592_f64, 1663553_f64, 1663584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 7.46_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 81_f64, 81_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[23], &values);
    let values: [f64; 50] = [1663009_f64, 1663592_f64, 1663553_f64, 1663584_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.5601_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 7.46_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 82_f64, 83_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 89_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[24], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 84_f64, 84_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[25], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 85_f64, 85_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[26], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 86_f64, 86_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[27], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 87_f64, 89_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[28], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[29], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 92_f64, 96_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[30], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[31], &values);
    let values: [f64; 50] = [1662439_f64, 1662977_f64, 1662948_f64, 1662969_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.006_f64, 6.3203_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[32], &values);
    let values: [f64; 50] = [1662149_f64, 1662407_f64, 1662389_f64, 1662399_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4275_f64, 0_f64, 0_f64, 7_f64, -4.2_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.3899_f64, 44.3_f64, 1.7401_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 5.969_f64, 100_f64, 0.83412_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 21.7_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 109_f64];
    instrument_util::check(&sf.get_instruments()[185].get_regions()[33], &values);

    // ============================================================
    //  Piano 2
    // ============================================================
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 26.508_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 32_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 29_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[0], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 23.507_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 28.198_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 30_f64, 35_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[1], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 22.098_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 36_f64, 38_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[2], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 39_f64, 43_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[3], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[4], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.59909_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 45_f64, 50_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[5], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.59909_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[6], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 52_f64, 55_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[7], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 56_f64, 57_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[8], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 58_f64, 62_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[9], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 17.499_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 63_f64, 64_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[10], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 65_f64, 67_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[11], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 68_f64, 69_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[12], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[13], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 14.698_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 71_f64, 80_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[14], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 81_f64, 83_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[15], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 11.1_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 84_f64, 86_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[16], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[17], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[18], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 89_f64, 89_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[19], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[20], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.3286_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 92_f64, 93_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[21], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 94_f64, 95_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[22], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 96_f64, 96_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[23], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[24], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[25], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 4901.1_f64, 0_f64, 0_f64, 3150_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[186].get_regions()[26], &values);

    // ============================================================
    //  Piano 1
    // ============================================================
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 28.198_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.59909_f64, 32_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 0_f64, 29_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[0], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 28.198_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.59909_f64, 28.198_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 30_f64, 35_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[1], &values);
    let values: [f64; 50] = [661564_f64, 670903_f64, 669211_f64, 670900_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 28.198_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.59909_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 36_f64, 38_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -15_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[2], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 20.797_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.76093_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 39_f64, 43_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[3], &values);
    let values: [f64; 50] = [652196_f64, 661532_f64, 658320_f64, 661528_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 20.797_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.76093_f64, 25.005_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 44_f64, 44_f64, 0_f64, 127_f64, 12.7_f64, 0_f64, 38_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[4], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 45_f64, 50_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[5], &values);
    let values: [f64; 50] = [644598_f64, 652164_f64, 649968_f64, 652160_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.62887_f64, 20.797_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 51_f64, 51_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 73_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[6], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 52_f64, 52_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[7], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 53_f64, 55_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[8], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 56_f64, 56_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[9], &values);
    let values: [f64; 50] = [630850_f64, 644566_f64, 641179_f64, 644561_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 19.698_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 57_f64, 57_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 7_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[10], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 58_f64, 59_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[11], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 60_f64, 62_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[12], &values);
    let values: [f64; 50] = [619740_f64, 630818_f64, 630352_f64, 630814_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 19.698_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 17.499_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 63_f64, 64_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 41_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[13], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 65_f64, 67_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[14], &values);
    let values: [f64; 50] = [606182_f64, 619708_f64, 619530_f64, 619704_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 18.496_f64, 100_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 16.497_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 68_f64, 69_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, -48_f64, 1_f64, 100_f64, 0_f64, 83_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[15], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 70_f64, 70_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[16], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 16.497_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 71_f64, 73_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[17], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 15.598_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 74_f64, 75_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[18], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 15.598_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 76_f64, 76_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[19], &values);
    let values: [f64; 50] = [593193_f64, 606150_f64, 605641_f64, 606146_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 15.598_f64, 70.6_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 1_f64, 15.598_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 77_f64, 80_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[20], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 13.102_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 81_f64, 83_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[21], &values);
    let values: [f64; 50] = [585485_f64, 593161_f64, 592966_f64, 593157_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3009_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 13.102_f64, 55.9_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.95926_f64, 13.102_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 84_f64, 86_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 98_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[22], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.8719_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 87_f64, 87_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[23], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.8719_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 88_f64, 88_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[24], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.8719_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 89_f64, 89_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[25], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.8719_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 90_f64, 91_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[26], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 9.8719_f64, 31.7_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.69215_f64, 11.1_f64, 100_f64, 1.0401_f64, 0_f64, 0_f64, 92_f64, 93_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[27], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 94_f64, 95_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[28], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 96_f64, 96_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[29], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 97_f64, 97_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[30], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 98_f64, 98_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[31], &values);
    let values: [f64; 50] = [579725_f64, 585453_f64, 585280_f64, 585449_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 440.01_f64, 0_f64, 0_f64, 3122_f64, 0_f64, 0_f64, 7_f64, 0.4_f64, 0.0099978_f64, 4.2888_f64, 0.0099978_f64, 4.2888_f64, 0.00097656_f64, 0.00097656_f64, 0.063007_f64, 5.969_f64, 17_f64, 5.0513_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.66014_f64, 5.6405_f64, 100_f64, 4.5211_f64, 0_f64, 0_f64, 99_f64, 108_f64, 0_f64, 127_f64, 13.5_f64, 0_f64, 35_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[187].get_regions()[32], &values);

    // ============================================================
    //  BariSax (TB) v2.3
    // ============================================================
    let values: [f64; 50] = [1745481_f64, 1754938_f64, 1753416_f64, 1754934_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1010.3_f64, 0_f64, 0_f64, 1900_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.5685_f64, 20_f64, 1.0699_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 3.3001_f64, 2.7_f64, 0.35601_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 127_f64, 0_f64, 0_f64, 25_f64, 1_f64, 100_f64, 0_f64, 44_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[0], &values);
    let values: [f64; 50] = [2100013_f64, 2109665_f64, 2108451_f64, 2109660_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.85_f64, 0_f64, 0_f64, 1200_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.119_f64, 20_f64, 1.16_f64, 0_f64, 0_f64, 0.00097656_f64, 0.018_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 41_f64, 44_f64, 0_f64, 127_f64, 4_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[1], &values);
    let values: [f64; 50] = [2109697_f64, 2119785_f64, 2119097_f64, 2119781_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 979.84_f64, 0_f64, 0_f64, 1100_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.0185_f64, 20_f64, 1.0699_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019005_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 45_f64, 48_f64, 0_f64, 127_f64, 6_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 52_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[2], &values);
    let values: [f64; 50] = [2119817_f64, 2131435_f64, 2130780_f64, 2131430_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 999.85_f64, 0_f64, 0_f64, 1400_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.5685_f64, 20_f64, 0.97999_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 49_f64, 52_f64, 0_f64, 127_f64, 5_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[3], &values);
    let values: [f64; 50] = [2131467_f64, 2140913_f64, 2140477_f64, 2140908_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1099.8_f64, 0_f64, 0_f64, 1600_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.4988_f64, 20_f64, 1_f64, 0_f64, 0_f64, 0.00097656_f64, 0.013003_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 53_f64, 56_f64, 0_f64, 127_f64, 5_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[4], &values);
    let values: [f64; 50] = [2140945_f64, 2152016_f64, 2151602_f64, 2152012_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 2800.4_f64, 0_f64, 0_f64, 0_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.4988_f64, 20_f64, 1_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 57_f64, 60_f64, 0_f64, 127_f64, 5_f64, 0_f64, 6_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[5], &values);
    let values: [f64; 50] = [2152048_f64, 2163142_f64, 2162975_f64, 2163138_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3200.1_f64, 0_f64, 0_f64, 0_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 7.4988_f64, 20_f64, 1.0699_f64, 0_f64, 0_f64, 0.00097656_f64, 0.032994_f64, 0.00097656_f64, 4.2403_f64, 2.1_f64, 0.26702_f64, 0_f64, 0_f64, 61_f64, 64_f64, 0_f64, 127_f64, 5_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[6], &values);
    let values: [f64; 50] = [2163174_f64, 2169525_f64, 2169480_f64, 2169523_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 3799_f64, 0_f64, 0_f64, 0_f64, 2_f64, 0_f64, 30_f64, 20_f64, 1_f64, 4.269_f64, 1_f64, 4.269_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.7799_f64, 40_f64, 1_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0049989_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.26702_f64, 0_f64, 0_f64, 65_f64, 79_f64, 0_f64, 127_f64, 5_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[188].get_regions()[7], &values);

    // ============================================================
    //  Tenor Sax (TB) v2.3
    // ============================================================
    let values: [f64; 50] = [1741718_f64, 1743870_f64, 1743694_f64, 1743862_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 9_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1662_f64, 2_f64, 0_f64, 30_f64, 0.4_f64, 0.80014_f64, 4.8699_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.5289_f64, 55.1_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.6889_f64, 2.3_f64, 0.44494_f64, 0_f64, 0_f64, 0_f64, 49_f64, 0_f64, 127_f64, 8.4_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[0], &values);
    let values: [f64; 50] = [1733516_f64, 1735742_f64, 1735601_f64, 1735734_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 9_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1912_f64, 2_f64, 0_f64, 30_f64, 0.4_f64, 0.80014_f64, 4.8001_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 0.10701_f64, 0.00097656_f64, 4.1411_f64, 58_f64, 0.97999_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 18.2_f64, 1.1_f64, 0.44494_f64, 0_f64, 0_f64, 50_f64, 53_f64, 0_f64, 127_f64, 0.2_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 64_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[1], &values);
    let values: [f64; 50] = [1735774_f64, 1737333_f64, 1737213_f64, 1737325_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 9_f64, 0_f64, 2110.1_f64, 0_f64, 0_f64, 1637_f64, 2.2_f64, 0_f64, 30_f64, 0.4_f64, 0.80014_f64, 4.8001_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 52.9_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.6889_f64, 2.3_f64, 0.44494_f64, 0_f64, 0_f64, 54_f64, 59_f64, 0_f64, 127_f64, 10.2_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[2], &values);
    let values: [f64; 50] = [1737365_f64, 1738524_f64, 1738441_f64, 1738516_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 9_f64, 0_f64, 1999.7_f64, 0_f64, 0_f64, 1800_f64, 2.5_f64, 0_f64, 30_f64, 0.4_f64, 0.80014_f64, 4.8001_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 54.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.6889_f64, 2.3_f64, 0.44494_f64, 0_f64, 0_f64, 60_f64, 64_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[3], &values);
    let values: [f64; 50] = [1738556_f64, 1739914_f64, 1739843_f64, 1739906_f64, 0_f64, 0_f64, 0_f64, 0_f64, 9_f64, 9_f64, 0_f64, 1999.7_f64, 0_f64, 0_f64, 1900_f64, 2.5_f64, 0_f64, 30_f64, 0.4_f64, 0.80014_f64, 4.8001_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 0.8909_f64, 0.00097656_f64, 4.1411_f64, 54.8_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.025005_f64, 0.00097656_f64, 18.2_f64, 1.1_f64, 0.44494_f64, 0_f64, 0_f64, 65_f64, 69_f64, 0_f64, 127_f64, 11_f64, 0_f64, -1_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[4], &values);
    let values: [f64; 50] = [1743902_f64, 1745449_f64, 1745406_f64, 1745441_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 1899.5_f64, 0_f64, 0_f64, 1800_f64, 2_f64, 0_f64, 30_f64, 0_f64, 0.80014_f64, 4.8001_f64, 0.80014_f64, 4.8699_f64, 0.00097656_f64, 1.2498_f64, 0.00097656_f64, 4.1411_f64, 52.7_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 39.993_f64, 0.4_f64, 0.44494_f64, 0_f64, 0_f64, 70_f64, 82_f64, 0_f64, 127_f64, 5.7_f64, 0_f64, -18_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[5], &values);
    let values: [f64; 50] = [1739946_f64, 1741686_f64, 1741636_f64, 1741678_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10_f64, 0_f64, 0_f64, 2100.3_f64, 0_f64, 0_f64, 1912_f64, 0_f64, 0_f64, 30_f64, 0_f64, 0.55607_f64, 5.2497_f64, 0.0099978_f64, 4.8699_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.1411_f64, 48.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.6889_f64, 2.3_f64, 0.44494_f64, 0_f64, 0_f64, 83_f64, 127_f64, 0_f64, 127_f64, 8.7_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[189].get_regions()[6], &values);

    // ============================================================
    //  AltoSax (TB) v2.3
    // ============================================================
    let values: [f64; 50] = [1696284_f64, 1700442_f64, 1700135_f64, 1700441_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 0_f64, 48_f64, 0_f64, 127_f64, 0_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 50_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[0], &values);
    let values: [f64; 50] = [2021731_f64, 2039536_f64, 2034878_f64, 2039511_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 49_f64, 53_f64, 0_f64, 127_f64, 0_f64, 0_f64, 8_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[1], &values);
    let values: [f64; 50] = [2075528_f64, 2088331_f64, 2083522_f64, 2088306_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 54_f64, 54_f64, 0_f64, 127_f64, 0_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 54_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[2], &values);
    let values: [f64; 50] = [1665428_f64, 1676621_f64, 1672105_f64, 1676479_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.9708_f64, 3_f64, 0.26702_f64, 0_f64, 0_f64, 55_f64, 56_f64, 0_f64, 127_f64, 4_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 56_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[3], &values);
    let values: [f64; 50] = [1700474_f64, 1712019_f64, 1707354_f64, 1712008_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 57_f64, 59_f64, 0_f64, 127_f64, 2.2_f64, 0_f64, 11_f64, 1_f64, 100_f64, 0_f64, 58_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[4], &values);
    let values: [f64; 50] = [2088363_f64, 2099981_f64, 2094864_f64, 2099959_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 60_f64, 61_f64, 0_f64, 127_f64, 2.7_f64, 0_f64, 3_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[5], &values);
    let values: [f64; 50] = [1991228_f64, 2012114_f64, 2007327_f64, 2012035_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 62_f64, 63_f64, 0_f64, 127_f64, 0.7_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 63_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[6], &values);
    let values: [f64; 50] = [2012146_f64, 2021699_f64, 2016975_f64, 2021691_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 64_f64, 66_f64, 0_f64, 127_f64, 0_f64, 0_f64, -16_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[7], &values);
    let values: [f64; 50] = [2039568_f64, 2054197_f64, 2049738_f64, 2054196_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.2294_f64, 4_f64, 0.26702_f64, 0_f64, 0_f64, 67_f64, 70_f64, 0_f64, 127_f64, 2_f64, 0_f64, -19_f64, 1_f64, 100_f64, 0_f64, 68_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[8], &values);
    let values: [f64; 50] = [2054229_f64, 2064430_f64, 2059759_f64, 2064406_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 71_f64, 73_f64, 0_f64, 127_f64, 0_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[9], &values);
    let values: [f64; 50] = [1676653_f64, 1688522_f64, 1684122_f64, 1688522_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.26702_f64, 0_f64, 0_f64, 74_f64, 76_f64, 0_f64, 127_f64, 0_f64, 0_f64, 1_f64, 1_f64, 100_f64, 0_f64, 74_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[10], &values);
    let values: [f64; 50] = [2064462_f64, 2075496_f64, 2070777_f64, 2075481_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.44494_f64, 0_f64, 0_f64, 77_f64, 79_f64, 0_f64, 127_f64, 0_f64, 0_f64, -10_f64, 1_f64, 100_f64, 0_f64, 77_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[11], &values);
    let values: [f64; 50] = [1712051_f64, 1733484_f64, 1729048_f64, 1733473_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.44494_f64, 0_f64, 0_f64, 80_f64, 81_f64, 0_f64, 127_f64, 0_f64, 0_f64, -21_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[12], &values);
    let values: [f64; 50] = [1688554_f64, 1696252_f64, 1694827_f64, 1696159_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40_f64, 0_f64, 1_f64, 5.001_f64, 1_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 2.4995_f64, 40_f64, 1.5_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 8.9022_f64, 2_f64, 0.44494_f64, 0_f64, 0_f64, 82_f64, 127_f64, 0_f64, 127_f64, 0_f64, 0_f64, -28_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[190].get_regions()[13], &values);

    // ============================================================
    //  SopSax (TB) v2.3
    // ============================================================
    let values: [f64; 50] = [1966005_f64, 1991196_f64, 1981582_f64, 1991171_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.26702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 0.00097656_f64, 1.3_f64, 0.26702_f64, 0_f64, 0_f64, 0_f64, 59_f64, 0_f64, 127_f64, 0_f64, 0_f64, -26_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[0], &values);
    let values: [f64; 50] = [1933271_f64, 1965973_f64, 1961405_f64, 1965727_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.26702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.0099978_f64, 0.00097656_f64, 0.00097656_f64, 2.4_f64, 0.26702_f64, 0_f64, 0_f64, 60_f64, 62_f64, 0_f64, 127_f64, 0_f64, 0_f64, -14_f64, 1_f64, 100_f64, 0_f64, 62_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[1], &values);
    let values: [f64; 50] = [1904071_f64, 1933239_f64, 1928903_f64, 1933096_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 10901_f64, 5_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.44494_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.26702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 0.00097656_f64, 4_f64, 0.26702_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 0_f64, 0_f64, -23_f64, 1_f64, 100_f64, 0_f64, 65_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[2], &values);
    let values: [f64; 50] = [1879395_f64, 1904039_f64, 1897522_f64, 1901697_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.26702_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 0.00097656_f64, 4.2_f64, 0.35601_f64, 0_f64, 0_f64, 66_f64, 70_f64, 0_f64, 127_f64, 0_f64, 0_f64, -25_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[3], &values);
    let values: [f64; 50] = [1856300_f64, 1879363_f64, 1874978_f64, 1879039_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.039991_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.019996_f64, 0.00097656_f64, 0.00097656_f64, 3.1_f64, 0.35601_f64, 0_f64, 0_f64, 71_f64, 73_f64, 0_f64, 127_f64, 5_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[4], &values);
    let values: [f64; 50] = [1831298_f64, 1856268_f64, 1851819_f64, 1856134_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.003_f64, 0.00097656_f64, 0.00097656_f64, 1.1_f64, 0.35601_f64, 0_f64, 0_f64, 74_f64, 75_f64, 0_f64, 127_f64, 0_f64, 0_f64, -35_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[5], &values);
    let values: [f64; 50] = [1809643_f64, 1831266_f64, 1827365_f64, 1831255_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 1.1_f64, 0.35601_f64, 0_f64, 0_f64, 76_f64, 79_f64, 0_f64, 127_f64, 0_f64, 0_f64, -13_f64, 1_f64, 100_f64, 0_f64, 78_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[6], &values);
    let values: [f64; 50] = [1787199_f64, 1809611_f64, 1805673_f64, 1809608_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 3.6_f64, 0.35601_f64, 0_f64, 0_f64, 80_f64, 82_f64, 0_f64, 127_f64, 0_f64, 0_f64, -30_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[7], &values);
    let values: [f64; 50] = [1771228_f64, 1787167_f64, 1782983_f64, 1786966_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.44494_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.2_f64, 0.35601_f64, 0_f64, 0_f64, 83_f64, 87_f64, 0_f64, 127_f64, 0_f64, 0_f64, -27_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[8], &values);
    let values: [f64; 50] = [1754970_f64, 1771196_f64, 1768629_f64, 1770955_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 4_f64, 0_f64, 30_f64, 10_f64, 0.0099978_f64, 5.001_f64, 0.0099978_f64, 5.001_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.35601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 4.9_f64, 0.26702_f64, 0_f64, 0_f64, 88_f64, 119_f64, 0_f64, 127_f64, 0_f64, 0_f64, -24_f64, 1_f64, 100_f64, 0_f64, 87_f64];
    instrument_util::check(&sf.get_instruments()[191].get_regions()[9], &values);

    // ============================================================
    //  Choir Aahs0
    // ============================================================
    let values: [f64; 50] = [2371646_f64, 2384490_f64, 2376600_f64, 2384489_f64, 0_f64, 0_f64, 4950_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 12_f64, 42_f64, 0_f64, 127_f64, 1_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 39_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[0], &values);
    let values: [f64; 50] = [2384522_f64, 2403187_f64, 2392765_f64, 2403186_f64, 0_f64, 0_f64, 8239_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 43_f64, 49_f64, 0_f64, 127_f64, 1_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[1], &values);
    let values: [f64; 50] = [2403219_f64, 2423931_f64, 2411657_f64, 2423930_f64, 0_f64, 0_f64, 8434_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 50_f64, 55_f64, 0_f64, 127_f64, 1_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[2], &values);
    let values: [f64; 50] = [2423963_f64, 2440212_f64, 2430932_f64, 2440210_f64, 0_f64, 0_f64, 6965_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 1_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[3], &values);
    let values: [f64; 50] = [2440244_f64, 2460185_f64, 2446618_f64, 2460184_f64, 0_f64, 0_f64, 6370_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 62_f64, 69_f64, 0_f64, 127_f64, 1_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[4], &values);
    let values: [f64; 50] = [2460217_f64, 2475401_f64, 2464817_f64, 2475400_f64, 0_f64, 0_f64, 4597_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 70_f64, 79_f64, 0_f64, 127_f64, 1_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[5], &values);
    let values: [f64; 50] = [2475433_f64, 2484803_f64, 2479991_f64, 2484802_f64, 0_f64, 0_f64, 4556_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, 30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 1_f64, 0_f64, 2_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[192].get_regions()[6], &values);

    // ============================================================
    //  Choir Aahs1
    // ============================================================
    let values: [f64; 50] = [2371646_f64, 2384490_f64, 2376600_f64, 2384489_f64, 0_f64, 0_f64, 4950_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 12_f64, 42_f64, 0_f64, 127_f64, 1_f64, 0_f64, 8_f64, 1_f64, 100_f64, 0_f64, 39_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[0], &values);
    let values: [f64; 50] = [2384522_f64, 2403187_f64, 2392765_f64, 2403186_f64, 0_f64, 0_f64, 8239_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 43_f64, 49_f64, 0_f64, 127_f64, 1_f64, 0_f64, 8_f64, 1_f64, 100_f64, 0_f64, 45_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[1], &values);
    let values: [f64; 50] = [2403219_f64, 2423931_f64, 2411657_f64, 2423930_f64, 0_f64, 0_f64, 8434_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 50_f64, 55_f64, 0_f64, 127_f64, 1_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 51_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[2], &values);
    let values: [f64; 50] = [2423963_f64, 2440212_f64, 2430932_f64, 2440210_f64, 0_f64, 0_f64, 6965_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 1_f64, 0_f64, 8_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[3], &values);
    let values: [f64; 50] = [2440244_f64, 2460185_f64, 2446618_f64, 2460184_f64, 0_f64, 0_f64, 6370_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 62_f64, 69_f64, 0_f64, 127_f64, 1_f64, 0_f64, 28_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[4], &values);
    let values: [f64; 50] = [2460217_f64, 2475401_f64, 2464817_f64, 2475400_f64, 0_f64, 0_f64, 4597_f64, 4_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 70_f64, 79_f64, 0_f64, 127_f64, 1_f64, 0_f64, 13_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[5], &values);
    let values: [f64; 50] = [2475433_f64, 2484803_f64, 2479991_f64, 2484802_f64, 0_f64, 0_f64, 4556_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 8_f64, 38_f64, -30_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 1.2002_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 1_f64, 0_f64, 18_f64, 1_f64, 100_f64, 0_f64, 81_f64];
    instrument_util::check(&sf.get_instruments()[193].get_regions()[6], &values);

    // ============================================================
    //  Choir Aahs2
    // ============================================================
    let values: [f64; 50] = [2366514_f64, 2371614_f64, 2366514_f64, 2371611_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.16_f64, 0_f64, 0_f64, 0_f64, 52_f64, 0_f64, 127_f64, 16.5_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 59_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[0], &values);
    let values: [f64; 50] = [2362077_f64, 2366482_f64, 2362077_f64, 2366479_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 559.85_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 53_f64, 58_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 66_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[1], &values);
    let values: [f64; 50] = [2357629_f64, 2362045_f64, 2357629_f64, 2362042_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 3937_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 59_f64, 62_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 71_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[2], &values);
    let values: [f64; 50] = [2353244_f64, 2357597_f64, 2353244_f64, 2357593_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 63_f64, 65_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 75_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[3], &values);
    let values: [f64; 50] = [2348198_f64, 2353212_f64, 2348198_f64, 2353209_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 66_f64, 69_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[4], &values);
    let values: [f64; 50] = [2344224_f64, 2348166_f64, 2344224_f64, 2348163_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 70_f64, 73_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, 21_f64, 1_f64, 100_f64, 0_f64, 82_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[5], &values);
    let values: [f64; 50] = [2340091_f64, 2344192_f64, 2340091_f64, 2344189_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 578.92_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 74_f64, 96_f64, 0_f64, 127_f64, 17.2_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 85_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[6], &values);
    let values: [f64; 50] = [2338692_f64, 2340059_f64, 2338696_f64, 2340057_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 640.87_f64, 0_f64, 0_f64, 4050_f64, 0_f64, 0_f64, 25_f64, 0_f64, 0.0099978_f64, 5.1298_f64, 0.0099978_f64, 5.1298_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 19.801_f64, 5.5_f64, 1.0601_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 1.15_f64, 28.198_f64, 0.2_f64, 1.1102_f64, 0_f64, 0_f64, 97_f64, 108_f64, 0_f64, 127_f64, 22.5_f64, 0_f64, -46_f64, 1_f64, 100_f64, 0_f64, 104_f64];
    instrument_util::check(&sf.get_instruments()[194].get_regions()[7], &values);

    // ============================================================
    //  Synth Strings 10
    // ============================================================
    let values: [f64; 50] = [2484835_f64, 2494584_f64, 2484837_f64, 2494579_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 120.03_f64, 0_f64, 0_f64, 10800_f64, 0_f64, 25_f64, 40_f64, -50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 4.9991_f64, 50_f64, 4.8288_f64, 0_f64, 0_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1_f64, 0_f64, 4_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 19_f64, 0_f64, 15_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[195].get_regions()[0], &values);
    let values: [f64; 50] = [2494616_f64, 2504730_f64, 2494618_f64, 2504725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 120.03_f64, 0_f64, 0_f64, 10800_f64, 0_f64, 25_f64, 40_f64, -50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 4.9991_f64, 50_f64, 4.8288_f64, 0_f64, 0_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1_f64, 0_f64, 4_f64, 0_f64, 0_f64, 56_f64, 67_f64, 0_f64, 127_f64, 19_f64, 0_f64, -16_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[195].get_regions()[1], &values);
    let values: [f64; 50] = [2504762_f64, 2517848_f64, 2504764_f64, 2517843_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 120.03_f64, 0_f64, 0_f64, 10800_f64, 0_f64, 25_f64, 40_f64, -50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 4.9991_f64, 50_f64, 4.8288_f64, 0_f64, 0_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1_f64, 0_f64, 4_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 19_f64, 0_f64, -50_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[195].get_regions()[2], &values);
    let values: [f64; 50] = [2517880_f64, 2529581_f64, 2517882_f64, 2529576_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 120.03_f64, 0_f64, 0_f64, 10800_f64, 0_f64, 25_f64, 40_f64, -50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 4.9991_f64, 50_f64, 4.8288_f64, 0_f64, 0_f64, 0.00097656_f64, 0.034996_f64, 0.00097656_f64, 1_f64, 0_f64, 4_f64, 0_f64, 0_f64, 80_f64, 116_f64, 0_f64, 127_f64, 19_f64, 0_f64, 12_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[195].get_regions()[3], &values);

    // ============================================================
    //  Synth Strings 11
    // ============================================================
    let values: [f64; 50] = [2484835_f64, 2494584_f64, 2484837_f64, 2494579_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1200_f64, 19901_f64, 2_f64, 0_f64, 0_f64, 0_f64, 25_f64, 40_f64, 50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.10002_f64, 0.10002_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 4_f64, 0_f64, 0_f64, 0_f64, 55_f64, 0_f64, 127_f64, 19_f64, 0_f64, 23_f64, 1_f64, 100_f64, 0_f64, 57_f64];
    instrument_util::check(&sf.get_instruments()[196].get_regions()[0], &values);
    let values: [f64; 50] = [2494616_f64, 2504730_f64, 2494618_f64, 2504725_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1200_f64, 19901_f64, 2_f64, 0_f64, 0_f64, 0_f64, 25_f64, 40_f64, 50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.10002_f64, 0.10002_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 4_f64, 0_f64, 0_f64, 56_f64, 67_f64, 0_f64, 127_f64, 19_f64, 0_f64, -8_f64, 1_f64, 100_f64, 0_f64, 69_f64];
    instrument_util::check(&sf.get_instruments()[196].get_regions()[1], &values);
    let values: [f64; 50] = [2504762_f64, 2517848_f64, 2504764_f64, 2517843_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1200_f64, 19901_f64, 2_f64, 0_f64, 0_f64, 0_f64, 25_f64, 40_f64, 50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.10002_f64, 0.10002_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 4_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 19_f64, 0_f64, -42_f64, 1_f64, 100_f64, 0_f64, 80_f64];
    instrument_util::check(&sf.get_instruments()[196].get_regions()[2], &values);
    let values: [f64; 50] = [2517880_f64, 2529581_f64, 2517882_f64, 2529576_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1200_f64, 19901_f64, 2_f64, 0_f64, 0_f64, 0_f64, 25_f64, 40_f64, 50_f64, 0.0099978_f64, 4.9095_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.10002_f64, 0.10002_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 4_f64, 0_f64, 0_f64, 80_f64, 116_f64, 0_f64, 127_f64, 19_f64, 0_f64, 20_f64, 1_f64, 100_f64, 0_f64, 92_f64];
    instrument_util::check(&sf.get_instruments()[196].get_regions()[3], &values);

    // ============================================================
    //  Slow Strings LP0
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -1190_f64, 1999.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30.9_f64, -50_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.11998_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 107_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[197].get_regions()[0], &values);

    // ============================================================
    //  Slow Strings LP1
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30.9_f64, 50_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.069992_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60012_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 107_f64, 0_f64, 127_f64, 20.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[198].get_regions()[0], &values);

    // ============================================================
    //  Slow Strings LP2
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.069992_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.60012_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 26_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[199].get_regions()[0], &values);

    // ============================================================
    //  Slow Strings LP3
    // ============================================================
    let values: [f64; 50] = [2727452_f64, 2759140_f64, 2741576_f64, 2756808_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 30_f64, 43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.30006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 0_f64, 67_f64, 0_f64, 127_f64, 7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[200].get_regions()[0], &values);
    let values: [f64; 50] = [2759172_f64, 2781722_f64, 2768395_f64, 2779245_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 60_f64, 43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.30006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[200].get_regions()[1], &values);
    let values: [f64; 50] = [2781754_f64, 2803406_f64, 2788890_f64, 2801499_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 60_f64, 43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.30006_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[200].get_regions()[2], &values);

    // ============================================================
    //  Slow Strings LP4
    // ============================================================
    let values: [f64; 50] = [2803438_f64, 2835126_f64, 2809376_f64, 2833342_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 60_f64, -43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 0_f64, 67_f64, 0_f64, 127_f64, 7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[201].get_regions()[0], &values);
    let values: [f64; 50] = [2835158_f64, 2857708_f64, 2842936_f64, 2857350_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 60_f64, -43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[201].get_regions()[1], &values);
    let values: [f64; 50] = [2857740_f64, 2879392_f64, 2867448_f64, 2879352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 60_f64, -43_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.20004_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[201].get_regions()[2], &values);

    // ============================================================
    //  Strings CLP0
    // ============================================================
    let values: [f64; 50] = [2803438_f64, 2835126_f64, 2809376_f64, 2833342_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 40_f64, -50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 0_f64, 67_f64, 0_f64, 127_f64, 7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[202].get_regions()[0], &values);
    let values: [f64; 50] = [2835158_f64, 2857708_f64, 2842936_f64, 2857350_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 70_f64, -50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[202].get_regions()[1], &values);
    let values: [f64; 50] = [2857740_f64, 2879392_f64, 2867448_f64, 2879352_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 70_f64, -50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.029994_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[202].get_regions()[2], &values);

    // ============================================================
    //  Strings CLP1
    // ============================================================
    let values: [f64; 50] = [2727452_f64, 2759140_f64, 2741576_f64, 2756808_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 40_f64, 50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 0_f64, 67_f64, 0_f64, 127_f64, 7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[203].get_regions()[0], &values);
    let values: [f64; 50] = [2759172_f64, 2781722_f64, 2768395_f64, 2779245_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 70_f64, 50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 68_f64, 79_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[203].get_regions()[1], &values);
    let values: [f64; 50] = [2781754_f64, 2803406_f64, 2788890_f64, 2801499_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 100_f64, 70_f64, 50_f64, 0.0099978_f64, 8.176_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.15003_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 2.3798_f64, 0_f64, 0_f64, 80_f64, 127_f64, 0_f64, 127_f64, 3_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[203].get_regions()[2], &values);

    // ============================================================
    //  Strings CLP2
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, -1190_f64, 1999.7_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40.9_f64, -50_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.00097656_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.089985_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 107_f64, 0_f64, 127_f64, 22.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[204].get_regions()[0], &values);

    // ============================================================
    //  Strings CLP3
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40.9_f64, 50_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.069992_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.4501_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 107_f64, 0_f64, 127_f64, 22.7_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[205].get_regions()[0], &values);

    // ============================================================
    //  Strings CLP4
    // ============================================================
    let values: [f64; 50] = [2879424_f64, 2882136_f64, 2879770_f64, 2882135_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 1191_f64, 19913_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 40.9_f64, 0_f64, 0.0099978_f64, 5.3786_f64, 0.0099978_f64, 0.099999_f64, 0.00097656_f64, 0.006_f64, 0.00097656_f64, 0.069992_f64, 100_f64, 0.00097656_f64, 0_f64, 0_f64, 0.00097656_f64, 0.4501_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 3.0192_f64, 0_f64, 0_f64, 0_f64, 47_f64, 0_f64, 127_f64, 28_f64, 0_f64, 0_f64, 1_f64, 100_f64, 0_f64, 94_f64];
    instrument_util::check(&sf.get_instruments()[206].get_regions()[0], &values);

    // ============================================================
    //  Strings CLP5
    // ============================================================
    let values: [f64; 50] = [2529613_f64, 2555806_f64, 2542165_f64, 2555805_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 40_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.00099997_f64, 0.00097656_f64, 1.9196_f64, 5_f64, 0.94007_f64, 0_f64, 0_f64, 0_f64, 46_f64, 0_f64, 127_f64, 16_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[0], &values);
    let values: [f64; 50] = [2555838_f64, 2579503_f64, 2564633_f64, 2579502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.073006_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 47_f64, 55_f64, 0_f64, 127_f64, 18.9_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[1], &values);
    let values: [f64; 50] = [2579535_f64, 2600279_f64, 2585607_f64, 2600279_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 16.4_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[2], &values);
    let values: [f64; 50] = [2600311_f64, 2625494_f64, 2606853_f64, 2625493_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 62_f64, 70_f64, 0_f64, 127_f64, 16_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[3], &values);
    let values: [f64; 50] = [2625526_f64, 2648713_f64, 2634213_f64, 2648712_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 71_f64, 77_f64, 0_f64, 127_f64, 16_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[4], &values);
    let values: [f64; 50] = [2648745_f64, 2673394_f64, 2656663_f64, 2673393_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 78_f64, 83_f64, 0_f64, 127_f64, 16.9_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[5], &values);
    let values: [f64; 50] = [2673426_f64, 2686612_f64, 2677378_f64, 2686611_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 84_f64, 88_f64, 0_f64, 127_f64, 21.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[6], &values);
    let values: [f64; 50] = [2686644_f64, 2712833_f64, 2699598_f64, 2712833_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 89_f64, 95_f64, 0_f64, 127_f64, 22.3_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[7], &values);
    let values: [f64; 50] = [2712865_f64, 2727420_f64, 2720001_f64, 2727420_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 60_f64, 0_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 96_f64, 120_f64, 0_f64, 127_f64, 19.9_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[207].get_regions()[8], &values);

    // ============================================================
    //  Strings (Tremelo)0
    // ============================================================
    let values: [f64; 50] = [2529613_f64, 2555806_f64, 2542165_f64, 2555805_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 0_f64, 46_f64, 0_f64, 127_f64, 2_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[0], &values);
    let values: [f64; 50] = [2555838_f64, 2579503_f64, 2564633_f64, 2579502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.073006_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 47_f64, 55_f64, 0_f64, 127_f64, 4.9_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[1], &values);
    let values: [f64; 50] = [2579535_f64, 2600279_f64, 2585607_f64, 2600279_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 2.4_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[2], &values);
    let values: [f64; 50] = [2600311_f64, 2625494_f64, 2606853_f64, 2625493_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 62_f64, 70_f64, 0_f64, 127_f64, 2_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[3], &values);
    let values: [f64; 50] = [2625526_f64, 2648713_f64, 2634213_f64, 2648712_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 71_f64, 77_f64, 0_f64, 127_f64, 2_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[4], &values);
    let values: [f64; 50] = [2648745_f64, 2673394_f64, 2656663_f64, 2673393_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 78_f64, 83_f64, 0_f64, 127_f64, 2.9_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[5], &values);
    let values: [f64; 50] = [2673426_f64, 2686612_f64, 2677378_f64, 2686611_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 84_f64, 88_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[6], &values);
    let values: [f64; 50] = [2686644_f64, 2712833_f64, 2699598_f64, 2712833_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 89_f64, 95_f64, 0_f64, 127_f64, 8.3_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[7], &values);
    let values: [f64; 50] = [2712865_f64, 2727420_f64, 2720001_f64, 2727420_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, -19.1_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 96_f64, 120_f64, 0_f64, 127_f64, 5.9_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[208].get_regions()[8], &values);

    // ============================================================
    //  Strings (Tremelo)1
    // ============================================================
    let values: [f64; 50] = [2529613_f64, 2555806_f64, 2542165_f64, 2555805_f64, 0_f64, 0_f64, 0_f64, 1_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 0_f64, 46_f64, 0_f64, 127_f64, 2_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 43_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[0], &values);
    let values: [f64; 50] = [2555838_f64, 2579503_f64, 2564633_f64, 2579502_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.073006_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 47_f64, 55_f64, 0_f64, 127_f64, 4.9_f64, 0_f64, -3_f64, 1_f64, 100_f64, 0_f64, 48_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[1], &values);
    let values: [f64; 50] = [2579535_f64, 2600279_f64, 2585607_f64, 2600279_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 56_f64, 61_f64, 0_f64, 127_f64, 2.4_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 60_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[2], &values);
    let values: [f64; 50] = [2600311_f64, 2625494_f64, 2606853_f64, 2625493_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 62_f64, 70_f64, 0_f64, 127_f64, 2_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 67_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[3], &values);
    let values: [f64; 50] = [2625526_f64, 2648713_f64, 2634213_f64, 2648712_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 71_f64, 77_f64, 0_f64, 127_f64, 2_f64, 0_f64, -7_f64, 1_f64, 100_f64, 0_f64, 72_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[4], &values);
    let values: [f64; 50] = [2648745_f64, 2673394_f64, 2656663_f64, 2673393_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 78_f64, 83_f64, 0_f64, 127_f64, 2.9_f64, 0_f64, -6_f64, 1_f64, 100_f64, 0_f64, 79_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[5], &values);
    let values: [f64; 50] = [2673426_f64, 2686612_f64, 2677378_f64, 2686611_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 84_f64, 88_f64, 0_f64, 127_f64, 7.7_f64, 0_f64, -4_f64, 1_f64, 100_f64, 0_f64, 84_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[6], &values);
    let values: [f64; 50] = [2686644_f64, 2712833_f64, 2699598_f64, 2712833_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 89_f64, 95_f64, 0_f64, 127_f64, 8.3_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 91_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[7], &values);
    let values: [f64; 50] = [2712865_f64, 2727420_f64, 2720001_f64, 2727420_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 0_f64, 19913_f64, 0_f64, 0_f64, 0_f64, -2_f64, 0_f64, 42.4_f64, 7.8_f64, 0.24699_f64, 7.8113_f64, 0.0099978_f64, 8.176_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0.00097656_f64, 0_f64, 39.993_f64, 0_f64, 0_f64, 0.00097656_f64, 0.061997_f64, 0.00097656_f64, 1.9196_f64, 8.1_f64, 0.94007_f64, 0_f64, 0_f64, 96_f64, 120_f64, 0_f64, 127_f64, 5.9_f64, 0_f64, -5_f64, 1_f64, 100_f64, 0_f64, 96_f64];
    instrument_util::check(&sf.get_instruments()[209].get_regions()[8], &values);
}
